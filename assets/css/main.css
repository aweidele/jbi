/*
 *  Owl Carousel - Core
 */

@import url("https://fonts.googleapis.com/css?family=Assistant:300,400,700|Expletus+Sans:400,700&display=swap");

.owl-carousel {
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1;
}

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden;
  /* fix firefox animation glitch */
}

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  /* fix for flashing background */
  -webkit-transform: translate3d(0px, 0px, 0px);
}

.owl-carousel .owl-wrapper,
.owl-carousel .owl-item {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
}

.owl-carousel .owl-item {
  position: relative;
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

.owl-carousel .owl-item img {
  display: block;
  width: 100%;
}

.owl-carousel .owl-nav.disabled,
.owl-carousel .owl-dots.disabled {
  display: none;
}

.owl-carousel .owl-nav .owl-prev,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-dot {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel .owl-nav button.owl-prev,
.owl-carousel .owl-nav button.owl-next,
.owl-carousel button.owl-dot {
  background: none;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit;
}

.owl-carousel.owl-loaded {
  display: block;
}

.owl-carousel.owl-loading {
  opacity: 0;
  display: block;
}

.owl-carousel.owl-hidden {
  opacity: 0;
}

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden;
}

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
      touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel.owl-grab {
  cursor: move;
  cursor: -webkit-grab;
  cursor: grab;
}

.owl-carousel.owl-rtl {
  direction: rtl;
}

.owl-carousel.owl-rtl .owl-item {
  float: right;
}

/* No Js */

.no-js .owl-carousel {
  display: block;
}

/*
 *  Owl Carousel - Animate Plugin
 */

.owl-carousel .animated {
  -webkit-animation-duration: 1000ms;
          animation-duration: 1000ms;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.owl-carousel .owl-animated-in {
  z-index: 0;
}

.owl-carousel .owl-animated-out {
  z-index: 1;
}

.owl-carousel .fadeOut {
  -webkit-animation-name: fadeOut;
          animation-name: fadeOut;
}

@-webkit-keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

/*
 * 	Owl Carousel - Auto Height Plugin
 */

.owl-height {
  -webkit-transition: height 500ms ease-in-out;
  transition: height 500ms ease-in-out;
}

/*
 * 	Owl Carousel - Lazy Load Plugin
 */

.owl-carousel .owl-item {
  /**
			This is introduced due to a bug in IE11 where lazy loading combined with autoheight plugin causes a wrong
			calculation of the height of the owl-item that breaks page layouts
		 */
}

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-item .owl-lazy[src^=""],
.owl-carousel .owl-item .owl-lazy:not([src]) {
  max-height: 0;
}

.owl-carousel .owl-item img.owl-lazy {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

/*
 * 	Owl Carousel - Video Plugin
 */

.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000;
}

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 5rem;
  width: 5rem;
  left: 50%;
  top: 50%;
  margin-left: -2.5rem;
  margin-top: -2.5rem;
  background: url("owl.video.play.png") no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  -webkit-transition: -webkit-transform 100ms ease;
  transition: -webkit-transform 100ms ease;
  transition: transform 100ms ease;
  transition: transform 100ms ease, -webkit-transform 100ms ease;
}

.owl-carousel .owl-video-play-icon:hover {
  -webkit-transform: scale(1.3, 1.3);
          transform: scale(1.3, 1.3);
}

.owl-carousel .owl-video-playing .owl-video-tn,
.owl-carousel .owl-video-playing .owl-video-play-icon {
  display: none;
}

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%;
}

/*
 * 	Default theme - Owl Carousel CSS File
 */

.owl-theme .owl-nav {
  margin-top: 0.625rem;
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-nav [class*='owl-'] {
  color: #FFF;
  font-size: 0.875rem;
  margin: 0.3125rem;
  padding: 0.25rem 0.4375rem;
  background: #D6D6D6;
  display: inline-block;
  cursor: pointer;
  border-radius: 0.1875rem;
}

.owl-theme .owl-nav [class*='owl-']:hover {
  background: #869791;
  color: #FFF;
  text-decoration: none;
}

.owl-theme .owl-nav .disabled {
  opacity: 0.5;
  cursor: default;
}

.owl-theme .owl-nav.disabled + .owl-dots {
  margin-top: 0.625rem;
}

.owl-theme .owl-dots {
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-dots .owl-dot {
  display: inline-block;
  zoom: 1;
  *display: inline;
}

.owl-theme .owl-dots .owl-dot span {
  width: 0.625rem;
  height: 0.625rem;
  margin: 0.3125rem 0.4375rem;
  background: #D6D6D6;
  display: block;
  -webkit-backface-visibility: visible;
  -webkit-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  border-radius: 1.875rem;
}

.owl-theme .owl-dots .owl-dot.active span,
.owl-theme .owl-dots .owl-dot:hover span {
  background: #869791;
}

* {
  margin: 0;
  padding: 0;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

ul,
ol {
  list-style: none;
}

a {
  -webkit-transition: all .25s;
  transition: all .25s;
}

.sr-only {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

strong {
  font-weight: 700;
}

body {
  font-family: "Assistant", sans-serif;
}

body.front-page > main,
body.project-detail > main {
  padding-top: 0;
  position: relative;
  z-index: 0;
}

body.front-page .main-header,
body.project-detail .main-header {
  background: transparent;
}

body.front-page .main-header > div,
body.project-detail .main-header > div {
  position: relative;
  z-index: 1;
}

body.front-page .main-header:before,
body.project-detail .main-header:before {
  width: 100%;
  height: 9.4375rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  content: "";
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.3)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.3) 100%);
}

body.front-page .main-header h1 a,
body.project-detail .main-header h1 a {
  color: #FFFFFF;
}

body.front-page .main-header h1 a:hover,
body.front-page .main-header h1 a:focus,
body.project-detail .main-header h1 a:hover,
body.project-detail .main-header h1 a:focus {
  color: rgba(255, 255, 255, 0.4);
}

body.front-page .main-header .hamburger:not(.open) span,
body.front-page .main-header .hamburger:not(.open):before,
body.front-page .main-header .hamburger:not(.open):after,
body.project-detail .main-header .hamburger:not(.open) span,
body.project-detail .main-header .hamburger:not(.open):before,
body.project-detail .main-header .hamburger:not(.open):after {
  background: #FFFFFF;
}

body.front-page > main > section > div {
  padding: 0;
}

h1,
.h1 {
  font-family: "Assistant", sans-serif;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 1.5625rem;
}

h2,
.h2 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.875rem;
  text-transform: uppercase;
  line-height: 1.33333em;
  font-weight: 700;
}

h3,
.h3 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.5rem;
  text-transform: uppercase;
  line-height: 1.33333em;
  font-weight: 700;
}

h5,
.h5 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.125rem;
}

p {
  font-size: 1.125rem;
  line-height: 1.28571em;
  margin-bottom: 1em;
}

.main-header {
  width: 100%;
  height: 4.375rem;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  background: rgba(255, 255, 255, 0.99);
}

.loggedin .main-header {
  top: 2rem;
}

.main-header h1 {
  position: relative;
  z-index: 20;
}

.main-header > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding-top: 0.625rem;
}

.main-header .hamburger {
  width: 2rem;
  height: 2rem;
  position: relative;
  background-color: transparent;
  z-index: 20;
}

.main-header .hamburger:before,
.main-header .hamburger:after,
.main-header .hamburger span {
  width: 1rem;
  height: 0.125rem;
  position: absolute;
  top: 0.9375rem;
  left: 0.5rem;
  content: "";
  background: #1E3141;
  -webkit-transition: all .25s;
  transition: all .25s;
  text-indent: -999999px;
}

.main-header .hamburger:before {
  -webkit-transform: translateY(-6px);
          transform: translateY(-6px);
}

.main-header .hamburger:after {
  -webkit-transform: translateY(6px);
          transform: translateY(6px);
}

.main-header .hamburger.open:before {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

.main-header .hamburger.open:after {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

.main-header .hamburger.open span {
  opacity: 0;
}

.main-header a {
  color: #1E3141;
  text-decoration: none;
}

.main-header a:hover,
.main-header a:focus {
  color: #707070;
}

.main-header nav {
  font-family: "Expletus Sans", cursive;
  font-size: 0.9375rem;
  position: relative;
}

.main-header nav a {
  color: #1E3141;
  text-decoration: none;
}

.main-header nav a:hover,
.main-header nav a:focus {
  color: #707070;
}

.main-header nav ul.menu > li > a {
  text-transform: uppercase;
  letter-spacing: 1.13px;
}

.main-header nav ul.menu li.current-menu-item > a,
.main-header nav ul.menu li.current-menu-ancestor > a {
  font-weight: 800;
}

.main-footer {
  padding: 1.25rem 0;
}

.main-footer a {
  color: #1E3141;
  text-decoration: none;
}

.main-footer a:hover,
.main-footer a:focus {
  text-decoration: underline;
}

.main-footer > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.main-footer .contact {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-style: normal;
  font-size: 0.9375rem;
  text-transform: uppercase;
  letter-spacing: 1.73px;
  color: #1E3141;
}

.main-footer .contact p {
  margin: 0;
  font-size: 0.875rem;
}

.main-footer .social {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.main-footer .social a {
  width: 1.5rem;
  height: 1.5rem;
  margin-left: 0.625rem;
}

.main-footer .social a svg {
  width: 100%;
  height: 100%;
}

.main-footer .social a span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.footer-logo svg {
  width: 5.3125rem;
  height: 6.1875rem;
  fill: #07144E;
  display: block;
}

body > main {
  padding: 4.375rem 0;
}

body > main > section {
  color: #1E3141;
}

body > main > section > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

body > main > section.bg-primary {
  background: #1E3141;
  color: #FFFFFF;
  padding: 3.75rem 0;
}

.section-inner {
  padding: 0 1.25rem;
}

.hp-slideshow .js-carousel .owl-item img,
.hp-navigation a img {
  min-height: 100%;
  min-width: 100%;
  width: auto;
  height: auto;
  display: block;
  margin: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .hp-slideshow .js-carousel .owl-item img,
  .hp-navigation a img {
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }
}

.hp-slideshow {
  height: 100vh;
  position: relative;
}

.hp-slideshow .js-carousel .owl-item {
  height: 100vh;
}

.hp-slideshow .js-carousel .owl-item > div {
  height: 100%;
  position: relative;
}

.hp-slideshow .js-carousel .owl-nav button {
  position: absolute;
  top: calc(50% - 2.9375rem);
  width: 2.875rem;
  height: 5.9375rem;
  background-image: url("../images/arrow.svg");
  background-size: contain;
  background-repeat: no-repeat;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.hp-slideshow .js-carousel .owl-nav button span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.hp-slideshow .js-carousel .owl-nav button:focus,
.hp-slideshow .js-carousel .owl-nav button:active {
  border: 0;
  outline: none;
}

.hp-slideshow .js-carousel .owl-nav button:hover,
.hp-slideshow .js-carousel .owl-nav button:focus {
  opacity: .5;
}

.hp-slideshow .js-carousel .owl-nav .owl-prev {
  left: 1.25rem;
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.hp-slideshow .js-carousel .owl-nav .owl-next {
  right: 1.25rem;
}

.hp-slideshow .scroll-down {
  width: 2.875rem;
  height: 5.9375rem;
  position: absolute;
  bottom: 1.25rem;
  left: calc(50% - 1.125rem);
  z-index: 10;
  background-image: url("../images/arrow.svg");
  background-size: contain;
  background-repeat: no-repeat;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  overflow: hidden;
  text-indent: -999999px;
}

.hp-slideshow .scroll-down:hover,
.hp-slideshow .scroll-down:focus {
  opacity: .5;
}

.hp-navigation a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
  height: 100vh;
  overflow: hidden;
  font-size: 3.125rem;
  color: #FFFFFF;
  text-align: center;
  text-shadow: 0px 4px 7px #707070;
  text-decoration: none;
  font-family: "Expletus Sans", cursive;
  font-weight: 700;
  background: #1E3141;
}

.hp-navigation a span {
  position: relative;
  z-index: 1;
}

.hp-navigation a img {
  z-index: 0;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-filter: blur(18px);
          filter: blur(18px);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .hp-navigation a img {
    width: 103%;
    height: 103%;
  }
}

.hp-navigation a:hover img {
  -webkit-filter: blur(0);
          filter: blur(0);
}

.content-grid {
  margin: 0 -0.375rem;
}

.content-grid [class^="col"] {
  padding: 0.375rem;
}

.content-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.map {
  width: 100%;
  padding-bottom: 72%;
  position: relative;
}

.map iframe {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
}

.project-hero {
  position: relative;
  max-height: 100vh;
  overflow: hidden;
  margin-bottom: 0.75rem;
}

.project-hero img {
  width: 100%;
  height: auto;
  display: block;
}

.project-hero .project-title {
  width: 100%;
  position: absolute;
  left: 0;
  bottom: 0;
  color: #FFFFFF;
  text-shadow: 0 0 2px #000000;
  padding-bottom: 2.8125rem;
}

.project-hero .project-title span,
.project-hero .project-title small {
  display: block;
}

.project-hero .project-title small {
  font-size: 1em;
  text-transform: none;
}

.project-hero .project-title > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.grid-title {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  padding: 0 1.5rem 2.375rem 1.5rem;
  color: #FFFFFF;
  -webkit-transition: all .25s;
  transition: all .25s;
  text-shadow: 0px 0px 2px #000000;
}

.grid-title h4 {
  font-size: 1.5rem;
  text-transform: uppercase;
}

.grid-title small {
  font-family: "Expletus Sans", cursive;
  line-height: 1.33333em;
  font-weight: 700;
  font-size: 1.25em;
}

.project-main > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.project-stats {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-gap: 5px 20px;
  margin-top: 3em;
}

.project-stats dt {
  text-transform: uppercase;
}

.related-projects {
  padding: 4.375rem 0;
}

.project-grid {
  font-family: "Expletus Sans", cursive;
}

.project-grid > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.project-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.project-grid article {
  padding: 0.375rem;
}

.project-grid a {
  display: block;
  position: relative;
  color: #FFFFFF;
}

.project-grid a:before {
  width: 100%;
  height: 9.4375rem;
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 0;
  content: "";
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0) 100%);
}

.project-grid small {
  font-size: 1.3125rem;
}

.project-grid .grid-title {
  padding-bottom: 3rem;
}

.project-grid.archive {
  background: #1E3141;
  color: #FFFFFF;
}

.project-grid-inner {
  padding: 0 0 4.375rem;
  text-align: center;
  margin: 0 -0.375rem;
}

.press-listing {
  padding: 4.375rem 0;
}

.press-listing > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.press-listing .articles {
  font-size: 1.125rem;
}

.press-listing .articles article {
  margin-bottom: 1.4em;
}

.press-listing .articles article span {
  display: block;
}

.press-listing .articles a {
  color: #1E3141;
  text-decoration: none;
}

.press-listing .articles a:hover span:last-child,
.press-listing .articles a:focus span:last-child {
  text-decoration: underline;
}

.outlet-grid ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: -0.75rem;
}

.outlet-grid li {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
  width: 50%;
  padding: 0.75rem;
}

.outlet-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.outlet-grid span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.outlet-grid a {
  -webkit-transition: all .25s;
  transition: all .25s;
  display: block;
  border: 0.0625rem solid #DDDDDD;
}

.outlet-grid a:hover,
.outlet-grid a:focus {
  opacity: .25;
}

.outlet-grid.tax-archive a {
  opacity: .25;
}

.outlet-grid.tax-archive a:hover,
.outlet-grid.tax-archive a:focus {
  opacity: .75;
}

.outlet-grid.tax-archive li.active a {
  opacity: 1;
}

.s-news {
  padding: 4.6875rem 0;
}

.news-carousel article {
  font-size: 1.125rem;
  padding: 0.0625rem;
}

.news-carousel article a {
  color: #1E3141;
  display: block;
  height: 100%;
  padding: 1.25rem;
  border: 0.0625rem solid #1E3141;
  text-decoration: none;
}

.news-carousel article a:hover,
.news-carousel article a:focus {
  background: rgba(30, 49, 65, 0.2);
}

.news-carousel .owl-item:nth-child(2n) article a {
  color: #FFFFFF;
  background: #1E3141;
}

.news-carousel .owl-item:nth-child(2n) article a:hover,
.news-carousel .owl-item:nth-child(2n) article a:focus {
  color: #1E3141;
  background: rgba(30, 49, 65, 0.2);
}

.news-carousel .owl-stage {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
}

.news-carousel article,
.news-carousel a {
  height: 100%;
}

.news-carousel .date {
  margin-bottom: .5em;
}

.people > main {
  padding: 4.375rem 0;
}

.people-grid h4 {
  font-family: "Expletus Sans", cursive;
}

.people-grid > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.people-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.people-grid .grid-title {
  opacity: 0;
}

.people-grid article {
  position: relative;
  padding: 0.375rem;
}

.people-grid article a {
  display: block;
  position: relative;
}

.people-grid article a:hover .grid-title,
.people-grid article a:focus .grid-title {
  opacity: 1;
}

.people-grid article a:before {
  width: 100%;
  height: 9.4375rem;
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 0;
  content: "";
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0) 100%);
}

.people-grid-inner {
  padding: 4.25rem 0 4.375rem;
  margin: 0 -0.375rem;
}

.people-bio {
  width: 100%;
  min-height: 100%;
  position: absolute;
  left: 100%;
  top: 0;
  padding: 0.75rem;
  display: none;
}

.people-bio p {
  color: #FFFFFF;
  font-size: 1.3125rem;
  line-height: 1.28571em;
}

.people-bio > div {
  min-height: 100%;
  background: #1E3141;
  padding: 1.125rem;
}

.people-bio button {
  width: 1.5625rem;
  height: 1.5625rem;
  position: absolute;
  top: 2.3125rem;
  right: 2.3125rem;
  border: 0.0625rem solid #FFFFFF;
  background-color: transparent;
  text-indent: -9999px;
  overflow: hidden;
  cursor: pointer;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio button:before,
.people-bio button:after {
  width: 140%;
  height: 0.0625rem;
  position: absolute;
  top: 50%;
  left: 50%;
  content: "";
  background: #FFFFFF;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio button:before {
  -webkit-transform: translateX(-50%) rotate(45deg);
          transform: translateX(-50%) rotate(45deg);
}

.people-bio button:after {
  -webkit-transform: translateX(-50%) rotate(-45deg);
          transform: translateX(-50%) rotate(-45deg);
}

.people-bio button:hover,
.people-bio button:focus {
  background: rgba(255, 255, 255, 0.9);
  border-color: #1E3141;
}

.people-bio button:hover:before,
.people-bio button:hover:after,
.people-bio button:focus:before,
.people-bio button:focus:after {
  background-color: #1E3141;
}

.bio-title {
  width: calc(100% - 2.1875rem);
}

.bio-title p:first-child {
  text-transform: uppercase;
  margin: 0;
}

.people-grid article:nth-child(3n) .people-bio,
.people-grid article:nth-child(3n+1) .people-bio {
  top: -4.375rem;
}

.people-grid article:nth-child(3n+2) .people-bio {
  top: 4.375rem;
}

.people-grid article:nth-child(3n) .people-bio {
  left: auto;
  right: 100%;
}

.people-grid article.open {
  z-index: 10;
}

.people-grid article.open .people-bio {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media screen and (min-width: 768px) {
  .main-header > div {
    -webkit-box-align: end;
        -ms-flex-align: end;
            align-items: flex-end;
  }

  .hp-navigation a {
    font-size: 5rem;
  }

  .content-grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }

  .col-1 {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .col-2 {
    width: 66.67%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 66.67%;
            flex: 0 0 66.67%;
  }

  .col-3 {
    width: 100%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
  }

  .project-grid article {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .project-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-35px);
            transform: translateY(-35px);
  }

  .project-grid-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    padding-top: 4.375rem;
  }

  .press-listing > div {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }

  .outlet-grid {
    width: 75%;
  }

  .outlet-grid nav {
    position: -webkit-sticky;
    position: sticky;
    top: 4.375rem;
  }

  .outlet-grid li {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    width: 25%;
  }

  .articles {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    width: 20%;
  }

  .people-grid article {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .people-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-35px);
            transform: translateY(-35px);
  }

  .people-grid-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }
}

@media screen and (min-width: 1025px) {
  body.front-page .main-header a,
  body.front-page .main-header span,
  body.project-detail .main-header a,
  body.project-detail .main-header span {
    color: #FFFFFF;
  }

  body.front-page .main-header a:hover,
  body.front-page .main-header a:focus,
  body.front-page .main-header span:hover,
  body.front-page .main-header span:focus,
  body.project-detail .main-header a:hover,
  body.project-detail .main-header a:focus,
  body.project-detail .main-header span:hover,
  body.project-detail .main-header span:focus {
    color: rgba(255, 255, 255, 0.4);
  }

  .main-header button {
    display: none;
  }

  .main-header nav a {
    padding: 0 0.75rem;
  }

  .main-header nav {
    margin: 0 -0.75rem;
  }

  .main-header nav ul.menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
  }

  .main-header nav ul.menu > li:hover .sub-menu,
  .main-header nav ul.menu > li.current-menu-item .sub-menu,
  .main-header nav ul.menu > li.current-menu-ancestor .sub-menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }

  .main-header nav .sub-menu {
    display: none;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    position: absolute;
    top: 100%;
    right: 0;
    min-width: 100%;
  }

  .main-header nav .sub-menu a,
  .main-header nav .sub-menu span {
    padding: 0.625rem 0.75rem 0;
    display: block;
  }

  .section-inner {
    padding: 0 5.75rem;
  }

  .hp-navigation a {
    font-size: 9.6875rem;
  }

  .content-grid {
    margin: 0 3.75rem;
  }

  .content-grid [class^="col"] {
    padding: 0.75rem;
  }

  .grid-title h4 {
    font-size: 1.875rem;
  }

  .project-grid article {
    padding: 0.75rem;
  }

  .project-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-70px);
            transform: translateY(-70px);
  }

  .project-grid-inner {
    margin: 0 3.75rem;
    padding-top: 2.1875rem;
  }

  .people-grid article {
    padding: 0.75rem;
  }

  .people-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-70px);
            transform: translateY(-70px);
  }

  .people-grid-inner {
    margin: 0 3.75rem;
  }
}

@media screen and (max-width: 1024.9px) {
  body.front-page .main-header .open h1 a,
  body.project-detail .main-header .open h1 a {
    color: #1E3141;
  }

  body.front-page .main-header .open h1 a:hover,
  body.front-page .main-header .open h1 a:focus,
  body.project-detail .main-header .open h1 a:hover,
  body.project-detail .main-header .open h1 a:focus {
    color: rgba(30, 49, 65, 0.4);
  }

  .main-header .hamburger.open + nav {
    -webkit-transform: translate(-100%);
            transform: translate(-100%);
  }

  .main-header nav {
    position: fixed;
    top: 0;
    left: 100%;
    z-index: 10;
    width: 100vw;
    height: 100vh;
    background: #FFFFFF;
    padding: 3.75rem 1.25rem;
    font-size: 1.125rem;
    -webkit-transition: all .25s;
    transition: all .25s;
  }

  .main-header nav > div {
    height: 100%;
    overflow: auto;
  }

  .main-header nav .sub-menu {
    display: none;
    width: 100%;
    font-size: 0.875rem;
  }

  .main-header nav .sub-menu a,
  .main-header nav .sub-menu span {
    display: block;
    padding: 0.3125rem 0.625rem;
  }

  .main-header nav .menu > li {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    margin: 0.625rem 0;
  }

  .main-header nav .menu > li > a {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
  }

  .main-header nav .menu > li > button {
    width: 2rem;
    height: 2rem;
    position: relative;
    background-color: transparent;
    border: 0;
  }

  .main-header nav .menu > li > button:before,
  .main-header nav .menu > li > button:after {
    width: 1rem;
    height: 0.125rem;
    position: absolute;
    top: 0.9375rem;
    left: 0.5rem;
    content: "";
    background: #1E3141;
    -webkit-transition: all .25s;
    transition: all .25s;
  }

  .main-header nav .menu > li > button:after {
    -webkit-transform: rotate(90deg);
            transform: rotate(90deg);
  }

  .main-header nav .menu > li > button span {
    position: absolute;
    width: 0.0625rem;
    height: 0.0625rem;
    padding: 0;
    margin: -0.0625rem;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
  }

  .main-header nav .menu > li.current-menu-item > button:after {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }

  .main-header nav .menu > li.current-menu-item .sub-menu {
    display: block;
  }
}

@media screen and (max-width: 767.9px) {
  .content-grid .col-1 img {
    width: auto;
    max-height: 520px;
    margin: auto;
  }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3MvX2NvcmUuc2NzcyIsIm1haW4uY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fYW5pbWF0ZS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fYXV0b2hlaWdodC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fbGF6eWxvYWQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3MvX3ZpZGVvLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL190aGVtZS5kZWZhdWx0LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL190aGVtZS5zY3NzIiwiYmFzZS9fcmVzZXQuc2NzcyIsImJhc2UvX21peGlucy5zY3NzIiwic3RydWN0dXJlL19iYXNlLnNjc3MiLCJiYXNlL192YXJpYWJsZXMuc2NzcyIsInN0cnVjdHVyZS9jb3B5L19oZWFkaW5ncy5zY3NzIiwic3RydWN0dXJlL2NvcHkvX2Jhc2Uuc2NzcyIsInN0cnVjdHVyZS9oZWFkZXIvX2hlYWRlci5zY3NzIiwic3RydWN0dXJlL2hlYWRlci9fbmF2LnNjc3MiLCJzdHJ1Y3R1cmUvZm9vdGVyL19mb290ZXIuc2NzcyIsInN0cnVjdHVyZS9fcGFnZS5zY3NzIiwic3RydWN0dXJlL19mcm9udC1wYWdlLnNjc3MiLCJjb21wb25lbnRzL19ncmlkLnNjc3MiLCJjb21wb25lbnRzL19tYXAuc2NzcyIsImZlZWRzL3Byb2plY3RzL19iYXNlLnNjc3MiLCJmZWVkcy9wcmVzcy9fYmFzZS5zY3NzIiwiZmVlZHMvcGVvcGxlL19iYXNlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7O0FBQ0gsZ0hBQWM7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VWJxYkssK0JBQStCO0VhL2V6QyxzQkFtQ0U7Q2I4Y0Q7O0FBRUQ7RWFuZkEsWUFtQ0U7RUE2QkksYUFBVztFQUNaLG1CQUFBO0Vic2JILDhCQUE4QjtFYXZmaEMsWUFtQ0U7Q2JzZEQ7O0FBRUQ7OztFYWxiTyxZQUFBO0Vic2JMLGlCQUFZO0VhL2ZkLG1CQW1DRTtFQXdDTSxlQUFVO0VBQ1gsYUFBQTtFYnViTCxZQUFZO0VhcmJSLG9CQUFtQjtFQTlFekIsNkJBbUVVO0VibWNSLHFCYXRibUI7RWJ1Ym5CLHVCYXRiTztDYnViUjs7QWF4Z0JEO0VBMEZJLG9DSGxGYTtVR21GYiw0QkFBcUI7Q0FLdEI7O0FMekZEO0VLdUZJLG1DSHJGYTtVRkNoQiwyQkFBQTtDUndnQkY7O0FBRUQ7RWNsaEJFLGlDQUFlO1VBQ1AseUJBQVU7Q0F1Sm5COztBRDFKRDtFQ01JLGtDSkVhO1VJRGIsMEJBQXFCO0NBVXRCOztBTlZEO0VNR0ksV0pETTtDRkNUOztBTUlDO0VEZEosZUNBQTtFZG9pQkUsc0JjcmhCbUI7Q2RzaEJwQjs7QUFFRDs7RWF2aUJBLGVDQUE7Q2QwaUJDOztBQUVEO0VBQ0Usc0NBQXNDO0VjdmhCdEMscUJBQWE7RUR0QmYsbUJDQUk7Q2RnakJIOztBQUVEO0VBQ0UsZWN6aEJhO0VkMGhCYixzQmN6aEJjO0NkMGhCZjs7QUFFRDs7RUFFRSxlY3poQmM7Q2QwaEJmOztBQUVEO0VBQ0UsMEJjemhCa0I7RWQwaEJsQix1QmN6aEJHO0NkMGhCSjs7QUFFRDs7RUFFRSxpQmNsaEJHO0NkbWhCSjs7QUFFRDtFQUNFLG1CY3hoQmU7Q2R5aEJoQjs7QUFFRDtFQUNFLGVjcmhCTTtFZHNoQk4sc0JjcmhCcUI7Q2RzaEJ0Qjs7QUFFRDs7RUFFRSwyQmNyaEJPO0Nkc2hCUjs7QUFFRDtFQUNFLGtCY3BoQmtCO0VkcWhCbEIsYWNwaEJRO0VkcWhCUixtQmNwaEJpQjtFZHFoQmpCLHFCY2hnQk87RUR4RlQscUJDbURJO0VkdWlCRixjY25oQnFCO0Vkb2hCckIsMEJjbmhCcUI7TUFDWCx1QkFBa0I7VUFDYiwrQkFBSTtDZG9oQnBCOztBQUVEO0VBQ0UscUJjbmhCc0I7RWRvaEJ0QixxQmNuaEJTO0VEL0VYLGNDQUE7RWRvbUJFLG1CY2xoQnFCO0VkbWhCckIscUJjbGhCUztFRG5GWCwwQkNvRFE7RWRtakJOLHVCUXpsQmtCO0VSMGxCbEIsZVF6bEJVO0NSMGxCWDs7QUFFRDtFQUNFLFVRemxCUTtFUjBsQlIsb0JRemxCTTtDUjBsQlA7O0FBRUQ7RUFDRSxxQmNwaEJ1QjtFZHFoQnZCLHFCY3BoQlc7RUQ5RmIsY0NBQTtDZG9uQkM7O0FBRUQ7RUFDRSxjQUFZO0VjN2dCVixlQUFhO0VEMUdqQixzQkN5R0U7Q2RpaEJEOztBQUVEO0VBQ0UsWUFBWTtFQUNaLGFBQWE7Q2E5bkJmOztBYmlvQkE7RWM5Z0JPLG1CQUFBO0VkZ2hCTCxpQkFBVztFYzlnQlAsa0JBQWE7RURySG5CLFdBQUE7RWJzb0JFLG1CYzVnQm1CO0VkNmdCbkIsaUJjNWdCUztFZDZnQlQsdUJBQXVCO0VBQ3ZCLFVBQVU7Q2F6b0JaOztBYjRvQkE7RUFDRSxpQkFBWTtFY2xnQlYsa0JBQWE7RUQzSWpCLGNDQUE7RWRncEJFLGVjcGdCaUI7Q2RxZ0JsQjs7QUFFRDtFQUNFLG9CY3BnQlk7Q2RxZ0JiOztBQUVEO0VhdnBCQSxlQ0FBO0NkeXBCQzs7QUFFRDtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VlN3BCZixtQkFBYTtDZitwQlo7O0FBRUQ7RWVqcUJBLG9CQUdJO0VBQ0EsZUxJYTtFS0hiLG1CQUFlO0NBSWhCOztBUEZEO0VPQUksbUJBQWU7Q1BHbEI7O0FPVkg7O0VQRUUsaUJBQVk7RUFDWixnQkVEVztFS1VULFlBQVM7RUFDVCxhQUFBO0VBQ0QsZUFBQTtFZm9xQkQsVUFBVTtFZWxyQlosbUJBZ0JVO0VBQ04sU0FBUztFQUNULFVBQVU7RUFDVix5Q0FBZTtVQUNmLGlDQUF5QjtDZm9xQjVCOztBQUVEO0VBQ0U7O0llbHFCSSxZQUFTO0lBQ1QsYUFBZTtJQUNoQixxQkFBQTtPZnFxQkUsa0JBQWtCO0dlaHNCekI7Q2Zrc0JDOztBQUVEO0VlcHNCQSxjQWtD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ImZpbGUiOiJ0by5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogIE93bCBDYXJvdXNlbCAtIENvcmVcbiAqL1xuLm93bC1jYXJvdXNlbCB7XG5cdGRpc3BsYXk6IG5vbmU7XG5cdHdpZHRoOiAxMDAlO1xuXHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHQvKiBwb3NpdGlvbiByZWxhdGl2ZSBhbmQgei1pbmRleCBmaXggd2Via2l0IHJlbmRlcmluZyBmb250cyBpc3N1ZSAqL1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHotaW5kZXg6IDE7XG5cblx0Lm93bC1zdGFnZSB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdC1tcy10b3VjaC1hY3Rpb246IHBhbi1ZO1xuXHRcdHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuXHRcdC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyAvKiBmaXggZmlyZWZveCBhbmltYXRpb24gZ2xpdGNoICovXG5cdH1cblxuXHQub3dsLXN0YWdlOmFmdGVyIHtcblx0XHRjb250ZW50OiBcIi5cIjtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRjbGVhcjogYm90aDtcblx0XHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0bGluZS1oZWlnaHQ6IDA7XG5cdFx0aGVpZ2h0OiAwO1xuXHR9XG5cblx0Lm93bC1zdGFnZS1vdXRlciB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0LyogZml4IGZvciBmbGFzaGluZyBiYWNrZ3JvdW5kICovXG5cdFx0LXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpO1xuXHR9XG5cblx0Lm93bC13cmFwcGVyLFxuXHQub3dsLWl0ZW17XG5cdFx0LXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0LW1vei1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0LW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcblx0XHQtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuXHRcdC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLDAsMCk7XG5cdFx0LW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuXHR9XG5cblx0Lm93bC1pdGVtIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0bWluLWhlaWdodDogMXB4O1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHRcdC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0LXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuXHR9XG5cdC5vd2wtaXRlbSBpbWcge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG5cblx0Lm93bC1uYXYuZGlzYWJsZWQsXG5cdC5vd2wtZG90cy5kaXNhYmxlZCB7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0fVxuXG5cdC5vd2wtbmF2IC5vd2wtcHJldixcblx0Lm93bC1uYXYgLm93bC1uZXh0LFxuXHQub3dsLWRvdCB7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LWtodG1sLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LW1zLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdHVzZXItc2VsZWN0OiBub25lO1xuXHR9XG5cblx0Lm93bC1uYXYgYnV0dG9uLm93bC1wcmV2LFxuXHQub3dsLW5hdiBidXR0b24ub3dsLW5leHQsXG5cdGJ1dHRvbi5vd2wtZG90IHtcblx0XHRiYWNrZ3JvdW5kOiBub25lO1xuXHRcdGNvbG9yOiBpbmhlcml0O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRwYWRkaW5nOjAhaW1wb3J0YW50O1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdH1cblxuXHQmLm93bC1sb2FkZWQge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHR9XG5cblx0Ji5vd2wtbG9hZGluZyB7XG5cdFx0b3BhY2l0eTogMDtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0fVxuXG5cdCYub3dsLWhpZGRlbiB7XG5cdFx0b3BhY2l0eTogMDtcblx0fVxuXG5cdCYub3dsLXJlZnJlc2ggLm93bC1pdGVtIHtcblx0XHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdH1cblxuXHQmLm93bC1kcmFnIC5vd2wtaXRlbSB7XG5cdFx0dG91Y2gtYWN0aW9uOiBwYW4teTtcblx0XHQtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LW1zLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdHVzZXItc2VsZWN0OiBub25lO1xuXHR9XG5cblx0Ji5vd2wtZ3JhYiB7XG5cdFx0Y3Vyc29yOiBtb3ZlO1xuXHRcdGN1cnNvcjogZ3JhYjtcblx0fVxuXG5cdCYub3dsLXJ0bCB7XG5cdFx0ZGlyZWN0aW9uOiBydGw7XG5cdH1cblxuXHQmLm93bC1ydGwgLm93bC1pdGVtIHtcblx0XHRmbG9hdDogcmlnaHQ7XG5cdH1cbn1cblxuLyogTm8gSnMgKi9cbi5uby1qcyAub3dsLWNhcm91c2VsIHtcblx0ZGlzcGxheTogYmxvY2s7XG59XG4iLCIvKlxuICogIE93bCBDYXJvdXNlbCAtIENvcmVcbiAqL1xuXG5AaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Bc3Npc3RhbnQ6MzAwLDQwMCw3MDB8RXhwbGV0dXMrU2Fuczo0MDAsNzAwJmRpc3BsYXk9c3dhcFwiKTtcblxuLm93bC1jYXJvdXNlbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHdpZHRoOiAxMDAlO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiBwb3NpdGlvbiByZWxhdGl2ZSBhbmQgei1pbmRleCBmaXggd2Via2l0IHJlbmRlcmluZyBmb250cyBpc3N1ZSAqL1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1zdGFnZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLXRvdWNoLWFjdGlvbjogcGFuLVk7XG4gIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLyogZml4IGZpcmVmb3ggYW5pbWF0aW9uIGdsaXRjaCAqL1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtc3RhZ2U6YWZ0ZXIge1xuICBjb250ZW50OiBcIi5cIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNsZWFyOiBib3RoO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBoZWlnaHQ6IDA7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1zdGFnZS1vdXRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgLyogZml4IGZvciBmbGFzaGluZyBiYWNrZ3JvdW5kICovXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDBweCwgMHB4KTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXdyYXBwZXIsXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSB7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWluLWhlaWdodDogMXB4O1xuICBmbG9hdDogbGVmdDtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2LmRpc2FibGVkLFxuLm93bC1jYXJvdXNlbCAub3dsLWRvdHMuZGlzYWJsZWQge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2IC5vd2wtcHJldixcbi5vd2wtY2Fyb3VzZWwgLm93bC1uYXYgLm93bC1uZXh0LFxuLm93bC1jYXJvdXNlbCAub3dsLWRvdCB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLW5hdiBidXR0b24ub3dsLXByZXYsXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbi5vd2wtbmV4dCxcbi5vd2wtY2Fyb3VzZWwgYnV0dG9uLm93bC1kb3Qge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLWxvYWRlZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1sb2FkaW5nIHtcbiAgb3BhY2l0eTogMDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLWhpZGRlbiB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLXJlZnJlc2ggLm93bC1pdGVtIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1kcmFnIC5vd2wtaXRlbSB7XG4gIC1tcy10b3VjaC1hY3Rpb246IHBhbi15O1xuICAgICAgdG91Y2gtYWN0aW9uOiBwYW4teTtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtZ3JhYiB7XG4gIGN1cnNvcjogbW92ZTtcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG4gIGN1cnNvcjogZ3JhYjtcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtcnRsIHtcbiAgZGlyZWN0aW9uOiBydGw7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLXJ0bCAub3dsLWl0ZW0ge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi8qIE5vIEpzICovXG5cbi5uby1qcyAub3dsLWNhcm91c2VsIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiAgT3dsIENhcm91c2VsIC0gQW5pbWF0ZSBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIC5hbmltYXRlZCB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAxMDAwbXM7XG4gICAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMDAwbXM7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtYW5pbWF0ZWQtaW4ge1xuICB6LWluZGV4OiAwO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtYW5pbWF0ZWQtb3V0IHtcbiAgei1pbmRleDogMTtcbn1cblxuLm93bC1jYXJvdXNlbCAuZmFkZU91dCB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IGZhZGVPdXQ7XG4gICAgICAgICAgYW5pbWF0aW9uLW5hbWU6IGZhZGVPdXQ7XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlT3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgZmFkZU91dCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG4vKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBBdXRvIEhlaWdodCBQbHVnaW5cbiAqL1xuXG4ub3dsLWhlaWdodCB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogaGVpZ2h0IDUwMG1zIGVhc2UtaW4tb3V0O1xuICB0cmFuc2l0aW9uOiBoZWlnaHQgNTAwbXMgZWFzZS1pbi1vdXQ7XG59XG5cbi8qXG4gKiBcdE93bCBDYXJvdXNlbCAtIExhenkgTG9hZCBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSB7XG4gIC8qKlxuXHRcdFx0VGhpcyBpcyBpbnRyb2R1Y2VkIGR1ZSB0byBhIGJ1ZyBpbiBJRTExIHdoZXJlIGxhenkgbG9hZGluZyBjb21iaW5lZCB3aXRoIGF1dG9oZWlnaHQgcGx1Z2luIGNhdXNlcyBhIHdyb25nXG5cdFx0XHRjYWxjdWxhdGlvbiBvZiB0aGUgaGVpZ2h0IG9mIHRoZSBvd2wtaXRlbSB0aGF0IGJyZWFrcyBwYWdlIGxheW91dHNcblx0XHQgKi9cbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gLm93bC1sYXp5IHtcbiAgb3BhY2l0eTogMDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDQwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gLm93bC1sYXp5W3NyY149XCJcIl0sXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSAub3dsLWxhenk6bm90KFtzcmNdKSB7XG4gIG1heC1oZWlnaHQ6IDA7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIGltZy5vd2wtbGF6eSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbiAgICAgICAgICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xufVxuXG4vKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBWaWRlbyBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tcGxheS1pY29uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDgwcHg7XG4gIHdpZHRoOiA4MHB4O1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTQwcHg7XG4gIG1hcmdpbi10b3A6IC00MHB4O1xuICBiYWNrZ3JvdW5kOiB1cmwoXCJvd2wudmlkZW8ucGxheS5wbmdcIikgbm8tcmVwZWF0O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHotaW5kZXg6IDE7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDEwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDEwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxMDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMTAwbXMgZWFzZSwgLXdlYmtpdC10cmFuc2Zvcm0gMTAwbXMgZWFzZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXZpZGVvLXBsYXktaWNvbjpob3ZlciB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjMsIDEuMyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjMsIDEuMyk7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby1wbGF5aW5nIC5vd2wtdmlkZW8tdG4sXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tcGxheWluZyAub3dsLXZpZGVvLXBsYXktaWNvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby10biB7XG4gIG9wYWNpdHk6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBlYXNlO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tZnJhbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi8qXG4gKiBcdERlZmF1bHQgdGhlbWUgLSBPd2wgQ2Fyb3VzZWwgQ1NTIEZpbGVcbiAqL1xuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IFtjbGFzcyo9J293bC0nXSB7XG4gIGNvbG9yOiAjRkZGO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbjogNXB4O1xuICBwYWRkaW5nOiA0cHggN3B4O1xuICBiYWNrZ3JvdW5kOiAjRDZENkQ2O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IFtjbGFzcyo9J293bC0nXTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4Njk3OTE7XG4gIGNvbG9yOiAjRkZGO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1uYXYgLmRpc2FibGVkIHtcbiAgb3BhY2l0eTogMC41O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1uYXYuZGlzYWJsZWQgKyAub3dsLWRvdHMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtZG90cyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLm93bC10aGVtZSAub3dsLWRvdHMgLm93bC1kb3Qge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHpvb206IDE7XG4gICpkaXNwbGF5OiBpbmxpbmU7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1kb3RzIC5vd2wtZG90IHNwYW4ge1xuICB3aWR0aDogMTBweDtcbiAgaGVpZ2h0OiAxMHB4O1xuICBtYXJnaW46IDVweCA3cHg7XG4gIGJhY2tncm91bmQ6ICNENkQ2RDY7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IHZpc2libGU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAyMDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDIwMG1zIGVhc2U7XG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1kb3RzIC5vd2wtZG90LmFjdGl2ZSBzcGFuLFxuLm93bC10aGVtZSAub3dsLWRvdHMgLm93bC1kb3Q6aG92ZXIgc3BhbiB7XG4gIGJhY2tncm91bmQ6ICM4Njk3OTE7XG59XG5cbioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbnVsLFxub2wge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5hIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5zci1vbmx5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG59XG5cbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJBc3Npc3RhbnRcIiwgc2Fucy1zZXJpZjtcbn1cblxuYm9keS5mcm9udC1wYWdlID4gbWFpbixcbmJvZHkucHJvamVjdC1kZXRhaWwgPiBtYWluIHtcbiAgcGFkZGluZy10b3A6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMDtcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlcixcbmJvZHkucHJvamVjdC1kZXRhaWwgLm1haW4taGVhZGVyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbmJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgPiBkaXYsXG5ib2R5LnByb2plY3QtZGV0YWlsIC5tYWluLWhlYWRlciA+IGRpdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlcjpiZWZvcmUsXG5ib2R5LnByb2plY3QtZGV0YWlsIC5tYWluLWhlYWRlcjpiZWZvcmUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNTFweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDA7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IGJvdHRvbSwgbGVmdCB0b3AsIGZyb20ocmdiYSgwLCAwLCAwLCAwKSksIHRvKHJnYmEoMCwgMCwgMCwgMC4zKSkpO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiYSgwLCAwLCAwLCAwKSAwJSwgcmdiYSgwLCAwLCAwLCAwLjMpIDEwMCUpO1xufVxuXG5ib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIGgxIGEsXG5ib2R5LnByb2plY3QtZGV0YWlsIC5tYWluLWhlYWRlciBoMSBhIHtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbmJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgaDEgYTpob3ZlcixcbmJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgaDEgYTpmb2N1cyxcbmJvZHkucHJvamVjdC1kZXRhaWwgLm1haW4taGVhZGVyIGgxIGE6aG92ZXIsXG5ib2R5LnByb2plY3QtZGV0YWlsIC5tYWluLWhlYWRlciBoMSBhOmZvY3VzIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlciAuaGFtYnVyZ2VyOm5vdCgub3Blbikgc3BhbixcbmJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgLmhhbWJ1cmdlcjpub3QoLm9wZW4pOmJlZm9yZSxcbmJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgLmhhbWJ1cmdlcjpub3QoLm9wZW4pOmFmdGVyLFxuYm9keS5wcm9qZWN0LWRldGFpbCAubWFpbi1oZWFkZXIgLmhhbWJ1cmdlcjpub3QoLm9wZW4pIHNwYW4sXG5ib2R5LnByb2plY3QtZGV0YWlsIC5tYWluLWhlYWRlciAuaGFtYnVyZ2VyOm5vdCgub3Blbik6YmVmb3JlLFxuYm9keS5wcm9qZWN0LWRldGFpbCAubWFpbi1oZWFkZXIgLmhhbWJ1cmdlcjpub3QoLm9wZW4pOmFmdGVyIHtcbiAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbn1cblxuYm9keS5mcm9udC1wYWdlID4gbWFpbiA+IHNlY3Rpb24gPiBkaXYge1xuICBwYWRkaW5nOiAwO1xufVxuXG5oMSxcbi5oMSB7XG4gIGZvbnQtZmFtaWx5OiBcIkFzc2lzdGFudFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogMzAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDI1cHg7XG59XG5cbmgyLFxuLmgyIHtcbiAgZm9udC1mYW1pbHk6IFwiRXhwbGV0dXMgU2Fuc1wiLCBjdXJzaXZlO1xuICBmb250LXNpemU6IDMwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxpbmUtaGVpZ2h0OiAxLjMzMzMzZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmgzLFxuLmgzIHtcbiAgZm9udC1mYW1pbHk6IFwiRXhwbGV0dXMgU2Fuc1wiLCBjdXJzaXZlO1xuICBmb250LXNpemU6IDI0cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxpbmUtaGVpZ2h0OiAxLjMzMzMzZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmg1LFxuLmg1IHtcbiAgZm9udC1mYW1pbHk6IFwiRXhwbGV0dXMgU2Fuc1wiLCBjdXJzaXZlO1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbnAge1xuICBmb250LXNpemU6IDE4cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjI4NTcxZW07XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLm1haW4taGVhZGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNzBweDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDEwO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTkpO1xufVxuXG4ubG9nZ2VkaW4gLm1haW4taGVhZGVyIHtcbiAgdG9wOiAzMnB4O1xufVxuXG4ubWFpbi1oZWFkZXIgaDEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDIwO1xufVxuXG4ubWFpbi1oZWFkZXIgPiBkaXYge1xuICBtYXgtd2lkdGg6IDE2MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwIDIwcHg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nLXRvcDogMTBweDtcbn1cblxuLm1haW4taGVhZGVyIC5oYW1idXJnZXIge1xuICB3aWR0aDogMzJweDtcbiAgaGVpZ2h0OiAzMnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB6LWluZGV4OiAyMDtcbn1cblxuLm1haW4taGVhZGVyIC5oYW1idXJnZXI6YmVmb3JlLFxuLm1haW4taGVhZGVyIC5oYW1idXJnZXI6YWZ0ZXIsXG4ubWFpbi1oZWFkZXIgLmhhbWJ1cmdlciBzcGFuIHtcbiAgd2lkdGg6IDE2cHg7XG4gIGhlaWdodDogMnB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTVweDtcbiAgbGVmdDogOHB4O1xuICBjb250ZW50OiBcIlwiO1xuICBiYWNrZ3JvdW5kOiAjMUUzMTQxO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdGV4dC1pbmRlbnQ6IC05OTk5OTlweDtcbn1cblxuLm1haW4taGVhZGVyIC5oYW1idXJnZXI6YmVmb3JlIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTZweCk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC02cHgpO1xufVxuXG4ubWFpbi1oZWFkZXIgLmhhbWJ1cmdlcjphZnRlciB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDZweCk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDZweCk7XG59XG5cbi5tYWluLWhlYWRlciAuaGFtYnVyZ2VyLm9wZW46YmVmb3JlIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xufVxuXG4ubWFpbi1oZWFkZXIgLmhhbWJ1cmdlci5vcGVuOmFmdGVyIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG59XG5cbi5tYWluLWhlYWRlciAuaGFtYnVyZ2VyLm9wZW4gc3BhbiB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5tYWluLWhlYWRlciBhIHtcbiAgY29sb3I6ICMxRTMxNDE7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLm1haW4taGVhZGVyIGE6aG92ZXIsXG4ubWFpbi1oZWFkZXIgYTpmb2N1cyB7XG4gIGNvbG9yOiAjNzA3MDcwO1xufVxuXG4ubWFpbi1oZWFkZXIgbmF2IHtcbiAgZm9udC1mYW1pbHk6IFwiRXhwbGV0dXMgU2Fuc1wiLCBjdXJzaXZlO1xuICBmb250LXNpemU6IDE1cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLm1haW4taGVhZGVyIG5hdiBhIHtcbiAgY29sb3I6ICMxRTMxNDE7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLm1haW4taGVhZGVyIG5hdiBhOmhvdmVyLFxuLm1haW4taGVhZGVyIG5hdiBhOmZvY3VzIHtcbiAgY29sb3I6ICM3MDcwNzA7XG59XG5cbi5tYWluLWhlYWRlciBuYXYgdWwubWVudSA+IGxpID4gYSB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAxLjEzcHg7XG59XG5cbi5tYWluLWhlYWRlciBuYXYgdWwubWVudSBsaS5jdXJyZW50LW1lbnUtaXRlbSA+IGEsXG4ubWFpbi1oZWFkZXIgbmF2IHVsLm1lbnUgbGkuY3VycmVudC1tZW51LWFuY2VzdG9yID4gYSB7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG59XG5cbi5tYWluLWZvb3RlciB7XG4gIHBhZGRpbmc6IDIwcHggMDtcbn1cblxuLm1haW4tZm9vdGVyIGEge1xuICBjb2xvcjogIzFFMzE0MTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubWFpbi1mb290ZXIgYTpob3Zlcixcbi5tYWluLWZvb3RlciBhOmZvY3VzIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5tYWluLWZvb3RlciA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5tYWluLWZvb3RlciAuY29udGFjdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IDE1cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAxLjczcHg7XG4gIGNvbG9yOiAjMUUzMTQxO1xufVxuXG4ubWFpbi1mb290ZXIgLmNvbnRhY3QgcCB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4ubWFpbi1mb290ZXIgLnNvY2lhbCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLm1haW4tZm9vdGVyIC5zb2NpYWwgYSB7XG4gIHdpZHRoOiAyNHB4O1xuICBoZWlnaHQ6IDI0cHg7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4ubWFpbi1mb290ZXIgLnNvY2lhbCBhIHN2ZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5tYWluLWZvb3RlciAuc29jaWFsIGEgc3BhbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xufVxuXG4uZm9vdGVyLWxvZ28gc3ZnIHtcbiAgd2lkdGg6IDg1cHg7XG4gIGhlaWdodDogOTlweDtcbiAgZmlsbDogIzA3MTQ0RTtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmJvZHkgPiBtYWluIHtcbiAgcGFkZGluZzogNzBweCAwO1xufVxuXG5ib2R5ID4gbWFpbiA+IHNlY3Rpb24ge1xuICBjb2xvcjogIzFFMzE0MTtcbn1cblxuYm9keSA+IG1haW4gPiBzZWN0aW9uID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG5ib2R5ID4gbWFpbiA+IHNlY3Rpb24uYmctcHJpbWFyeSB7XG4gIGJhY2tncm91bmQ6ICMxRTMxNDE7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBwYWRkaW5nOiA2MHB4IDA7XG59XG5cbi5zZWN0aW9uLWlubmVyIHtcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG4uaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLWl0ZW0gaW1nLFxuLmhwLW5hdmlnYXRpb24gYSBpbWcge1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBtaW4td2lkdGg6IDEwMCU7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuQHN1cHBvcnRzICgoLW8tb2JqZWN0LWZpdDogY292ZXIpIG9yIChvYmplY3QtZml0OiBjb3ZlcikpIHtcbiAgLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1pdGVtIGltZyxcbiAgLmhwLW5hdmlnYXRpb24gYSBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgfVxufVxuXG4uaHAtc2xpZGVzaG93IHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLWl0ZW0ge1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuXG4uaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLWl0ZW0gPiBkaXYge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1uYXYgYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IGNhbGMoNTAlIC0gNDdweCk7XG4gIHdpZHRoOiA0NnB4O1xuICBoZWlnaHQ6IDk1cHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9hcnJvdy5zdmdcIik7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbiBzcGFuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG59XG5cbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbjpmb2N1cyxcbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbjphY3RpdmUge1xuICBib3JkZXI6IDA7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbjpob3Zlcixcbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbjpmb2N1cyB7XG4gIG9wYWNpdHk6IC41O1xufVxuXG4uaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLW5hdiAub3dsLXByZXYge1xuICBsZWZ0OiAyMHB4O1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbn1cblxuLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1uYXYgLm93bC1uZXh0IHtcbiAgcmlnaHQ6IDIwcHg7XG59XG5cbi5ocC1zbGlkZXNob3cgLnNjcm9sbC1kb3duIHtcbiAgd2lkdGg6IDQ2cHg7XG4gIGhlaWdodDogOTVweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDIwcHg7XG4gIGxlZnQ6IGNhbGMoNTAlIC0gMThweCk7XG4gIHotaW5kZXg6IDEwO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvYXJyb3cuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtaW5kZW50OiAtOTk5OTk5cHg7XG59XG5cbi5ocC1zbGlkZXNob3cgLnNjcm9sbC1kb3duOmhvdmVyLFxuLmhwLXNsaWRlc2hvdyAuc2Nyb2xsLWRvd246Zm9jdXMge1xuICBvcGFjaXR5OiAuNTtcbn1cblxuLmhwLW5hdmlnYXRpb24gYSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZm9udC1zaXplOiA1MHB4O1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXNoYWRvdzogMHB4IDRweCA3cHggIzcwNzA3MDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBmb250LWZhbWlseTogXCJFeHBsZXR1cyBTYW5zXCIsIGN1cnNpdmU7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGJhY2tncm91bmQ6ICMxRTMxNDE7XG59XG5cbi5ocC1uYXZpZ2F0aW9uIGEgc3BhbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbn1cblxuLmhwLW5hdmlnYXRpb24gYSBpbWcge1xuICB6LWluZGV4OiAwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoMThweCk7XG4gICAgICAgICAgZmlsdGVyOiBibHVyKDE4cHgpO1xufVxuXG5Ac3VwcG9ydHMgKCgtby1vYmplY3QtZml0OiBjb3Zlcikgb3IgKG9iamVjdC1maXQ6IGNvdmVyKSkge1xuICAuaHAtbmF2aWdhdGlvbiBhIGltZyB7XG4gICAgd2lkdGg6IDEwMyU7XG4gICAgaGVpZ2h0OiAxMDMlO1xuICB9XG59XG5cbi5ocC1uYXZpZ2F0aW9uIGE6aG92ZXIgaW1nIHtcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoMCk7XG4gICAgICAgICAgZmlsdGVyOiBibHVyKDApO1xufVxuXG4uY29udGVudC1ncmlkIHtcbiAgbWFyZ2luOiAwIC02cHg7XG59XG5cbi5jb250ZW50LWdyaWQgW2NsYXNzXj1cImNvbFwiXSB7XG4gIHBhZGRpbmc6IDZweDtcbn1cblxuLmNvbnRlbnQtZ3JpZCBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLm1hcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWJvdHRvbTogNzIlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5tYXAgaWZyYW1lIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG59XG5cbi5wcm9qZWN0LWhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC1oZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xufVxuXG4ucHJvamVjdC1oZXJvIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvamVjdC1oZXJvIC5wcm9qZWN0LXRpdGxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgdGV4dC1zaGFkb3c6IDAgMCAycHggIzAwMDAwMDtcbiAgcGFkZGluZy1ib3R0b206IDQ1cHg7XG59XG5cbi5wcm9qZWN0LWhlcm8gLnByb2plY3QtdGl0bGUgc3Bhbixcbi5wcm9qZWN0LWhlcm8gLnByb2plY3QtdGl0bGUgc21hbGwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnByb2plY3QtaGVybyAucHJvamVjdC10aXRsZSBzbWFsbCB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLnByb2plY3QtaGVybyAucHJvamVjdC10aXRsZSA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLmdyaWQtdGl0bGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAgMjRweCAzOHB4IDI0cHg7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdGV4dC1zaGFkb3c6IDBweCAwcHggMnB4ICMwMDAwMDA7XG59XG5cbi5ncmlkLXRpdGxlIGg0IHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uZ3JpZC10aXRsZSBzbWFsbCB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgbGluZS1oZWlnaHQ6IDEuMzMzMzNlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG59XG5cbi5wcm9qZWN0LW1haW4gPiBkaXYge1xuICBtYXgtd2lkdGg6IDE2MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbi5wcm9qZWN0LXN0YXRzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIDFmcjtcbiAgZ3JpZC1nYXA6IDVweCAyMHB4O1xuICBtYXJnaW4tdG9wOiAzZW07XG59XG5cbi5wcm9qZWN0LXN0YXRzIGR0IHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLnJlbGF0ZWQtcHJvamVjdHMge1xuICBwYWRkaW5nOiA3MHB4IDA7XG59XG5cbi5wcm9qZWN0LWdyaWQge1xuICBmb250LWZhbWlseTogXCJFeHBsZXR1cyBTYW5zXCIsIGN1cnNpdmU7XG59XG5cbi5wcm9qZWN0LWdyaWQgPiBkaXYge1xuICBtYXgtd2lkdGg6IDE2MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbi5wcm9qZWN0LWdyaWQgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm9qZWN0LWdyaWQgYXJ0aWNsZSB7XG4gIHBhZGRpbmc6IDZweDtcbn1cblxuLnByb2plY3QtZ3JpZCBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbi5wcm9qZWN0LWdyaWQgYTpiZWZvcmUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNTFweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDA7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IGJvdHRvbSwgbGVmdCB0b3AsIGZyb20ocmdiYSgwLCAwLCAwLCAwLjMpKSwgdG8ocmdiYSgwLCAwLCAwLCAwKSkpO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiYSgwLCAwLCAwLCAwLjMpIDAlLCByZ2JhKDAsIDAsIDAsIDApIDEwMCUpO1xufVxuXG4ucHJvamVjdC1ncmlkIHNtYWxsIHtcbiAgZm9udC1zaXplOiAyMXB4O1xufVxuXG4ucHJvamVjdC1ncmlkIC5ncmlkLXRpdGxlIHtcbiAgcGFkZGluZy1ib3R0b206IDQ4cHg7XG59XG5cbi5wcm9qZWN0LWdyaWQuYXJjaGl2ZSB7XG4gIGJhY2tncm91bmQ6ICMxRTMxNDE7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG4ucHJvamVjdC1ncmlkLWlubmVyIHtcbiAgcGFkZGluZzogMCAwIDcwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAwIC02cHg7XG59XG5cbi5wcmVzcy1saXN0aW5nIHtcbiAgcGFkZGluZzogNzBweCAwO1xufVxuXG4ucHJlc3MtbGlzdGluZyA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLnByZXNzLWxpc3RpbmcgLmFydGljbGVzIHtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMgYXJ0aWNsZSB7XG4gIG1hcmdpbi1ib3R0b206IDEuNGVtO1xufVxuXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMgYXJ0aWNsZSBzcGFuIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcmVzcy1saXN0aW5nIC5hcnRpY2xlcyBhIHtcbiAgY29sb3I6ICMxRTMxNDE7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLnByZXNzLWxpc3RpbmcgLmFydGljbGVzIGE6aG92ZXIgc3BhbjpsYXN0LWNoaWxkLFxuLnByZXNzLWxpc3RpbmcgLmFydGljbGVzIGE6Zm9jdXMgc3BhbjpsYXN0LWNoaWxkIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5vdXRsZXQtZ3JpZCB1bCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgbWFyZ2luOiAtMTJweDtcbn1cblxuLm91dGxldC1ncmlkIGxpIHtcbiAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAgIC1tcy1mbGV4OiAwIDAgNTAlO1xuICAgICAgICAgIGZsZXg6IDAgMCA1MCU7XG4gIHdpZHRoOiA1MCU7XG4gIHBhZGRpbmc6IDEycHg7XG59XG5cbi5vdXRsZXQtZ3JpZCBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLm91dGxldC1ncmlkIHNwYW4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbn1cblxuLm91dGxldC1ncmlkIGEge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNEREREREQ7XG59XG5cbi5vdXRsZXQtZ3JpZCBhOmhvdmVyLFxuLm91dGxldC1ncmlkIGE6Zm9jdXMge1xuICBvcGFjaXR5OiAuMjU7XG59XG5cbi5vdXRsZXQtZ3JpZC50YXgtYXJjaGl2ZSBhIHtcbiAgb3BhY2l0eTogLjI1O1xufVxuXG4ub3V0bGV0LWdyaWQudGF4LWFyY2hpdmUgYTpob3Zlcixcbi5vdXRsZXQtZ3JpZC50YXgtYXJjaGl2ZSBhOmZvY3VzIHtcbiAgb3BhY2l0eTogLjc1O1xufVxuXG4ub3V0bGV0LWdyaWQudGF4LWFyY2hpdmUgbGkuYWN0aXZlIGEge1xuICBvcGFjaXR5OiAxO1xufVxuXG4ucy1uZXdzIHtcbiAgcGFkZGluZzogNzVweCAwO1xufVxuXG4ubmV3cy1jYXJvdXNlbCBhcnRpY2xlIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBwYWRkaW5nOiAxcHg7XG59XG5cbi5uZXdzLWNhcm91c2VsIGFydGljbGUgYSB7XG4gIGNvbG9yOiAjMUUzMTQxO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAyMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMUUzMTQxO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5uZXdzLWNhcm91c2VsIGFydGljbGUgYTpob3Zlcixcbi5uZXdzLWNhcm91c2VsIGFydGljbGUgYTpmb2N1cyB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMzAsIDQ5LCA2NSwgMC4yKTtcbn1cblxuLm5ld3MtY2Fyb3VzZWwgLm93bC1pdGVtOm50aC1jaGlsZCgybikgYXJ0aWNsZSBhIHtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIGJhY2tncm91bmQ6ICMxRTMxNDE7XG59XG5cbi5uZXdzLWNhcm91c2VsIC5vd2wtaXRlbTpudGgtY2hpbGQoMm4pIGFydGljbGUgYTpob3Zlcixcbi5uZXdzLWNhcm91c2VsIC5vd2wtaXRlbTpudGgtY2hpbGQoMm4pIGFydGljbGUgYTpmb2N1cyB7XG4gIGNvbG9yOiAjMUUzMTQxO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMwLCA0OSwgNjUsIDAuMik7XG59XG5cbi5uZXdzLWNhcm91c2VsIC5vd2wtc3RhZ2Uge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBzdHJldGNoO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IHN0cmV0Y2g7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG59XG5cbi5uZXdzLWNhcm91c2VsIGFydGljbGUsXG4ubmV3cy1jYXJvdXNlbCBhIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ubmV3cy1jYXJvdXNlbCAuZGF0ZSB7XG4gIG1hcmdpbi1ib3R0b206IC41ZW07XG59XG5cbi5wZW9wbGUgPiBtYWluIHtcbiAgcGFkZGluZzogNzBweCAwO1xufVxuXG4ucGVvcGxlLWdyaWQgaDQge1xuICBmb250LWZhbWlseTogXCJFeHBsZXR1cyBTYW5zXCIsIGN1cnNpdmU7XG59XG5cbi5wZW9wbGUtZ3JpZCA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLnBlb3BsZS1ncmlkIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucGVvcGxlLWdyaWQgLmdyaWQtdGl0bGUge1xuICBvcGFjaXR5OiAwO1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogNnB4O1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZSBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGUgYTpob3ZlciAuZ3JpZC10aXRsZSxcbi5wZW9wbGUtZ3JpZCBhcnRpY2xlIGE6Zm9jdXMgLmdyaWQtdGl0bGUge1xuICBvcGFjaXR5OiAxO1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZSBhOmJlZm9yZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDE1MXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogMDtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgYm90dG9tLCBsZWZ0IHRvcCwgZnJvbShyZ2JhKDAsIDAsIDAsIDAuMykpLCB0byhyZ2JhKDAsIDAsIDAsIDApKSk7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCByZ2JhKDAsIDAsIDAsIDAuMykgMCUsIHJnYmEoMCwgMCwgMCwgMCkgMTAwJSk7XG59XG5cbi5wZW9wbGUtZ3JpZC1pbm5lciB7XG4gIHBhZGRpbmc6IDY4cHggMCA3MHB4O1xuICBtYXJnaW46IDAgLTZweDtcbn1cblxuLnBlb3BsZS1iaW8ge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAxMDAlO1xuICB0b3A6IDA7XG4gIHBhZGRpbmc6IDEycHg7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wZW9wbGUtYmlvIHAge1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgZm9udC1zaXplOiAyMXB4O1xuICBsaW5lLWhlaWdodDogMS4yODU3MWVtO1xufVxuXG4ucGVvcGxlLWJpbyA+IGRpdiB7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICMxRTMxNDE7XG4gIHBhZGRpbmc6IDE4cHg7XG59XG5cbi5wZW9wbGUtYmlvIGJ1dHRvbiB7XG4gIHdpZHRoOiAyNXB4O1xuICBoZWlnaHQ6IDI1cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAzN3B4O1xuICByaWdodDogMzdweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0ZGRkZGRjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xufVxuXG4ucGVvcGxlLWJpbyBidXR0b246YmVmb3JlLFxuLnBlb3BsZS1iaW8gYnV0dG9uOmFmdGVyIHtcbiAgd2lkdGg6IDE0MCU7XG4gIGhlaWdodDogMXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xufVxuXG4ucGVvcGxlLWJpbyBidXR0b246YmVmb3JlIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKDQ1ZGVnKTtcbn1cblxuLnBlb3BsZS1iaW8gYnV0dG9uOmFmdGVyIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKC00NWRlZyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHJvdGF0ZSgtNDVkZWcpO1xufVxuXG4ucGVvcGxlLWJpbyBidXR0b246aG92ZXIsXG4ucGVvcGxlLWJpbyBidXR0b246Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7XG4gIGJvcmRlci1jb2xvcjogIzFFMzE0MTtcbn1cblxuLnBlb3BsZS1iaW8gYnV0dG9uOmhvdmVyOmJlZm9yZSxcbi5wZW9wbGUtYmlvIGJ1dHRvbjpob3ZlcjphZnRlcixcbi5wZW9wbGUtYmlvIGJ1dHRvbjpmb2N1czpiZWZvcmUsXG4ucGVvcGxlLWJpbyBidXR0b246Zm9jdXM6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMUUzMTQxO1xufVxuXG4uYmlvLXRpdGxlIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDM1cHgpO1xufVxuXG4uYmlvLXRpdGxlIHA6Zmlyc3QtY2hpbGQge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW46IDA7XG59XG5cbi5wZW9wbGUtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbikgLnBlb3BsZS1iaW8sXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24rMSkgLnBlb3BsZS1iaW8ge1xuICB0b3A6IC03MHB4O1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24rMikgLnBlb3BsZS1iaW8ge1xuICB0b3A6IDcwcHg7XG59XG5cbi5wZW9wbGUtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbikgLnBlb3BsZS1iaW8ge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogMTAwJTtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGUub3BlbiB7XG4gIHotaW5kZXg6IDEwO1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZS5vcGVuIC5wZW9wbGUtYmlvIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYldGcGJpNWpjM01pTENKemIzVnlZMlZ6SWpwYkltMWhhVzR1YzJOemN5SXNJaTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl2ZDJ3dVkyRnliM1Z6Wld3dmMzSmpMM05qYzNNdmIzZHNMbU5oY205MWMyVnNMbk5qYzNNaUxDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZiM2RzTG1OaGNtOTFjMlZzTDNOeVl5OXpZM056TDE5amIzSmxMbk5qYzNNaUxDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZiM2RzTG1OaGNtOTFjMlZzTDNOeVl5OXpZM056TDE5aGJtbHRZWFJsTG5OamMzTWlMQ0l1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12YjNkc0xtTmhjbTkxYzJWc0wzTnlZeTl6WTNOekwxOWhkWFJ2YUdWcFoyaDBMbk5qYzNNaUxDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZiM2RzTG1OaGNtOTFjMlZzTDNOeVl5OXpZM056TDE5c1lYcDViRzloWkM1elkzTnpJaXdpTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDI5M2JDNWpZWEp2ZFhObGJDOXpjbU12YzJOemN5OWZkbWxrWlc4dWMyTnpjeUlzSWk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5dmQyd3VZMkZ5YjNWelpXd3ZjM0pqTDNOamMzTXZiM2RzTG5Sb1pXMWxMbVJsWm1GMWJIUXVjMk56Y3lJc0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXZkMnd1WTJGeWIzVnpaV3d2YzNKakwzTmpjM012WDNSb1pXMWxMbVJsWm1GMWJIUXVjMk56Y3lJc0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXZkMnd1WTJGeWIzVnpaV3d2YzNKakwzTmpjM012WDNSb1pXMWxMbk5qYzNNaUxDSmlZWE5sTDE5MllYSnBZV0pzWlhNdWMyTnpjeUlzSW1KaGMyVXZYMjFwZUdsdWN5NXpZM056SWl3aVltRnpaUzlmY21WelpYUXVjMk56Y3lJc0ltSmhjMlV2WDJadmJuUnpMbk5qYzNNaUxDSnpkSEoxWTNSMWNtVXZYMkpoYzJVdWMyTnpjeUlzSW5OMGNuVmpkSFZ5WlM5amIzQjVMMTlpWVhObExuTmpjM01pTENKemRISjFZM1IxY21VdlkyOXdlUzlmYUdWaFpHbHVaM011YzJOemN5SXNJbk4wY25WamRIVnlaUzlvWldGa1pYSXZYMmhsWVdSbGNpNXpZM056SWl3aWMzUnlkV04wZFhKbEwyaGxZV1JsY2k5ZmJtRjJMbk5qYzNNaUxDSnpkSEoxWTNSMWNtVXZabTl2ZEdWeUwxOW1iMjkwWlhJdWMyTnpjeUlzSW5OMGNuVmpkSFZ5WlM5ZmNHRm5aUzV6WTNOeklpd2ljM1J5ZFdOMGRYSmxMMTltY205dWRDMXdZV2RsTG5OamMzTWlMQ0pqYjIxd2IyNWxiblJ6TDE5bmNtbGtMbk5qYzNNaUxDSmpiMjF3YjI1bGJuUnpMMTl0WVhBdWMyTnpjeUlzSW1abFpXUnpMM0J5YjJwbFkzUnpMMTlpWVhObExuTmpjM01pTENKbVpXVmtjeTl3Y21WemN5OWZZbUZ6WlM1elkzTnpJaXdpWm1WbFpITXZjR1Z2Y0d4bEwxOWlZWE5sTG5OamMzTWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTHk4Z1JWaFVSVkpPUVV3Z1UwRlRVMXh1UUdsdGNHOXlkQ0FuTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDI5M2JDNWpZWEp2ZFhObGJDOXpjbU12YzJOemN5OXZkMnd1WTJGeWIzVnpaV3d1YzJOemN5YzdYRzVBYVcxd2IzSjBJQ2N1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12YjNkc0xtTmhjbTkxYzJWc0wzTnlZeTl6WTNOekwyOTNiQzUwYUdWdFpTNWtaV1poZFd4MExuTmpjM01uTzF4dUx5OGdRa0ZUUlNCSlRWQlBVbFJUWEc1QWFXMXdiM0owSUNkaVlYTmxMMTkyWVhKcFlXSnNaWE1uTzF4dVFHbHRjRzl5ZENBblltRnpaUzlmYldsNGFXNXpKenRjYmtCcGJYQnZjblFnSjJKaGMyVXZYM0psYzJWMEp6dGNia0JwYlhCdmNuUWdKMkpoYzJVdlgyWnZiblJ6Snp0Y2JseHVMeThnVTFSU1ZVTlVWVkpGWEc1QWFXMXdiM0owSUNkemRISjFZM1IxY21VdlgySmhjMlVuTzF4dVhHNHZMeUJEVDAxUVQwNUZUbFJUWEc1QWFXMXdiM0owSUNkamIyMXdiMjVsYm5SekwxOW5jbWxrSnp0Y2JrQnBiWEJ2Y25RZ0oyTnZiWEJ2Ym1WdWRITXZYMjFoY0NjN1hHNWNiaTh2SUVaRlJVUlRYRzVBYVcxd2IzSjBJQ2RtWldWa2N5OXdjbTlxWldOMGN5OWZZbUZ6WlNjN1hHNUFhVzF3YjNKMElDZG1aV1ZrY3k5d2NtVnpjeTlmWW1GelpTYzdYRzVBYVcxd2IzSjBJQ2RtWldWa2N5OXdaVzl3YkdVdlgySmhjMlVuTzF4dUlpd2lRR2x0Y0c5eWRDQW5ZMjl5WlNjN1hHNUFhVzF3YjNKMElDZGhibWx0WVhSbEp6dGNia0JwYlhCdmNuUWdKMkYxZEc5b1pXbG5hSFFuTzF4dVFHbHRjRzl5ZENBbmJHRjZlV3h2WVdRbk8xeHVRR2x0Y0c5eWRDQW5kbWxrWlc4bk8xeHVJaXdpTHlwY2JpQXFJQ0JQZDJ3Z1EyRnliM1Z6Wld3Z0xTQkRiM0psWEc0Z0tpOWNiaTV2ZDJ3dFkyRnliM1Z6Wld3Z2UxeHVYSFJrYVhOd2JHRjVPaUJ1YjI1bE8xeHVYSFIzYVdSMGFEb2dNVEF3SlR0Y2JseDBMWGRsWW10cGRDMTBZWEF0YUdsbmFHeHBaMmgwTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JseDBMeW9nY0c5emFYUnBiMjRnY21Wc1lYUnBkbVVnWVc1a0lIb3RhVzVrWlhnZ1ptbDRJSGRsWW10cGRDQnlaVzVrWlhKcGJtY2dabTl1ZEhNZ2FYTnpkV1VnS2k5Y2JseDBjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEhSNkxXbHVaR1Y0T2lBeE8xeHVYRzVjZEM1dmQyd3RjM1JoWjJVZ2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JseDBYSFF0YlhNdGRHOTFZMmd0WVdOMGFXOXVPaUJ3WVc0dFdUdGNibHgwWEhSMGIzVmphQzFoWTNScGIyNDZJRzFoYm1sd2RXeGhkR2x2Ymp0Y2JseDBYSFF0Ylc5NkxXSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJqc2dMeW9nWm1sNElHWnBjbVZtYjNnZ1lXNXBiV0YwYVc5dUlHZHNhWFJqYUNBcUwxeHVYSFI5WEc1Y2JseDBMbTkzYkMxemRHRm5aVHBoWm5SbGNpQjdYRzVjZEZ4MFkyOXVkR1Z1ZERvZ1hDSXVYQ0k3WEc1Y2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNWNkRngwWTJ4bFlYSTZJR0p2ZEdnN1hHNWNkRngwZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dVhIUmNkR3hwYm1VdGFHVnBaMmgwT2lBd08xeHVYSFJjZEdobGFXZG9kRG9nTUR0Y2JseDBmVnh1WEc1Y2RDNXZkMnd0YzNSaFoyVXRiM1YwWlhJZ2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JseDBYSFJ2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1WEhSY2RDOHFJR1pwZUNCbWIzSWdabXhoYzJocGJtY2dZbUZqYTJkeWIzVnVaQ0FxTDF4dVhIUmNkQzEzWldKcmFYUXRkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1V6WkNnd2NIZ3NJREJ3ZUN3Z01IQjRLVHRjYmx4MGZWeHVYRzVjZEM1dmQyd3RkM0poY0hCbGNpeGNibHgwTG05M2JDMXBkR1Z0ZTF4dVhIUmNkQzEzWldKcmFYUXRZbUZqYTJaaFkyVXRkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1WEhSY2RDMXRiM290WW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dVhIUmNkQzF0Y3kxaVlXTnJabUZqWlMxMmFYTnBZbWxzYVhSNU9pQm9hV1JrWlc0N1hHNWNkRngwTFhkbFltdHBkQzEwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlROa0tEQXNNQ3d3S1R0Y2JseDBYSFF0Ylc5NkxYUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxNMlFvTUN3d0xEQXBPMXh1WEhSY2RDMXRjeTEwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlROa0tEQXNNQ3d3S1R0Y2JseDBmVnh1WEc1Y2RDNXZkMnd0YVhSbGJTQjdYRzVjZEZ4MGNHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVYSFJjZEcxcGJpMW9aV2xuYUhRNklERndlRHRjYmx4MFhIUm1iRzloZERvZ2JHVm1kRHRjYmx4MFhIUXRkMlZpYTJsMExXSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJqdGNibHgwWEhRdGQyVmlhMmwwTFhSaGNDMW9hV2RvYkdsbmFIUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1WEhSY2RDMTNaV0pyYVhRdGRHOTFZMmd0WTJGc2JHOTFkRG9nYm05dVpUdGNibHgwZlZ4dVhIUXViM2RzTFdsMFpXMGdhVzFuSUh0Y2JseDBYSFJrYVhOd2JHRjVPaUJpYkc5amF6dGNibHgwWEhSM2FXUjBhRG9nTVRBd0pUdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGJtRjJMbVJwYzJGaWJHVmtMRnh1WEhRdWIzZHNMV1J2ZEhNdVpHbHpZV0pzWldRZ2UxeHVYSFJjZEdScGMzQnNZWGs2SUc1dmJtVTdYRzVjZEgxY2JseHVYSFF1YjNkc0xXNWhkaUF1YjNkc0xYQnlaWFlzWEc1Y2RDNXZkMnd0Ym1GMklDNXZkMnd0Ym1WNGRDeGNibHgwTG05M2JDMWtiM1FnZTF4dVhIUmNkR04xY25OdmNqb2djRzlwYm5SbGNqdGNibHgwWEhRdGQyVmlhMmwwTFhWelpYSXRjMlZzWldOME9pQnViMjVsTzF4dVhIUmNkQzFyYUhSdGJDMTFjMlZ5TFhObGJHVmpkRG9nYm05dVpUdGNibHgwWEhRdGJXOTZMWFZ6WlhJdGMyVnNaV04wT2lCdWIyNWxPMXh1WEhSY2RDMXRjeTExYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MFhIUjFjMlZ5TFhObGJHVmpkRG9nYm05dVpUdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGJtRjJJR0oxZEhSdmJpNXZkMnd0Y0hKbGRpeGNibHgwTG05M2JDMXVZWFlnWW5WMGRHOXVMbTkzYkMxdVpYaDBMRnh1WEhSaWRYUjBiMjR1YjNkc0xXUnZkQ0I3WEc1Y2RGeDBZbUZqYTJkeWIzVnVaRG9nYm05dVpUdGNibHgwWEhSamIyeHZjam9nYVc1b1pYSnBkRHRjYmx4MFhIUmliM0prWlhJNklHNXZibVU3WEc1Y2RGeDBjR0ZrWkdsdVp6b3dJV2x0Y0c5eWRHRnVkRHRjYmx4MFhIUm1iMjUwT2lCcGJtaGxjbWwwTzF4dVhIUjlYRzVjYmx4MEppNXZkMnd0Ykc5aFpHVmtJSHRjYmx4MFhIUmthWE53YkdGNU9pQmliRzlqYXp0Y2JseDBmVnh1WEc1Y2RDWXViM2RzTFd4dllXUnBibWNnZTF4dVhIUmNkRzl3WVdOcGRIazZJREE3WEc1Y2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNWNkSDFjYmx4dVhIUW1MbTkzYkMxb2FXUmtaVzRnZTF4dVhIUmNkRzl3WVdOcGRIazZJREE3WEc1Y2RIMWNibHh1WEhRbUxtOTNiQzF5WldaeVpYTm9JQzV2ZDJ3dGFYUmxiU0I3WEc1Y2RGeDBkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1WEhSOVhHNWNibHgwSmk1dmQyd3RaSEpoWnlBdWIzZHNMV2wwWlcwZ2UxeHVYSFJjZEhSdmRXTm9MV0ZqZEdsdmJqb2djR0Z1TFhrN1hHNWNkRngwTFhkbFltdHBkQzExYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MFhIUXRiVzk2TFhWelpYSXRjMlZzWldOME9pQnViMjVsTzF4dVhIUmNkQzF0Y3kxMWMyVnlMWE5sYkdWamREb2dibTl1WlR0Y2JseDBYSFIxYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MGZWeHVYRzVjZENZdWIzZHNMV2R5WVdJZ2UxeHVYSFJjZEdOMWNuTnZjam9nYlc5MlpUdGNibHgwWEhSamRYSnpiM0k2SUdkeVlXSTdYRzVjZEgxY2JseHVYSFFtTG05M2JDMXlkR3dnZTF4dVhIUmNkR1JwY21WamRHbHZiam9nY25Sc08xeHVYSFI5WEc1Y2JseDBKaTV2ZDJ3dGNuUnNJQzV2ZDJ3dGFYUmxiU0I3WEc1Y2RGeDBabXh2WVhRNklISnBaMmgwTzF4dVhIUjlYRzU5WEc1Y2JpOHFJRTV2SUVweklDb3ZYRzR1Ym04dGFuTWdMbTkzYkMxallYSnZkWE5sYkNCN1hHNWNkR1JwYzNCc1lYazZJR0pzYjJOck8xeHVmVnh1SWl3aUx5cGNiaUFxSUNCUGQyd2dRMkZ5YjNWelpXd2dMU0JCYm1sdFlYUmxJRkJzZFdkcGJseHVJQ292WEc0dWIzZHNMV05oY205MWMyVnNlMXh1WEhRdVlXNXBiV0YwWldRZ2UxeHVYSFJjZEdGdWFXMWhkR2x2Ymkxa2RYSmhkR2x2YmpvZ01UQXdNRzF6TzF4dVhIUmNkR0Z1YVcxaGRHbHZiaTFtYVd4c0xXMXZaR1U2SUdKdmRHZzdYRzVjZEgxY2JseDBMbTkzYkMxaGJtbHRZWFJsWkMxcGJpQjdYRzVjZEZ4MGVpMXBibVJsZURvZ01EdGNibHgwZlZ4dVhIUXViM2RzTFdGdWFXMWhkR1ZrTFc5MWRDQjdYRzVjZEZ4MGVpMXBibVJsZURvZ01UdGNibHgwZlZ4dVhIUXVabUZrWlU5MWRDQjdYRzVjZEZ4MFlXNXBiV0YwYVc5dUxXNWhiV1U2SUdaaFpHVlBkWFE3WEc1Y2RIMWNibjFjYmx4dVFHdGxlV1p5WVcxbGN5Qm1ZV1JsVDNWMElIdGNibHgwTUNVZ2UxeHVYSFJjZEc5d1lXTnBkSGs2SURFN1hHNWNkSDFjYmx4dVhIUXhNREFsSUh0Y2JseDBYSFJ2Y0dGamFYUjVPaUF3TzF4dVhIUjlYRzU5WEc0aUxDSXZLbHh1SUNvZ1hIUlBkMndnUTJGeWIzVnpaV3dnTFNCQmRYUnZJRWhsYVdkb2RDQlFiSFZuYVc1Y2JpQXFMMXh1WEc0dWIzZHNMV2hsYVdkb2RDQjdYRzVjZEhSeVlXNXphWFJwYjI0NklHaGxhV2RvZENBMU1EQnRjeUJsWVhObExXbHVMVzkxZER0Y2JuMWNiaUlzSWk4cVhHNGdLaUJjZEU5M2JDQkRZWEp2ZFhObGJDQXRJRXhoZW5rZ1RHOWhaQ0JRYkhWbmFXNWNiaUFxTDF4dVhHNHViM2RzTFdOaGNtOTFjMlZzSUh0Y2JseDBMbTkzYkMxcGRHVnRJSHRjYmx4MFhIUXViM2RzTFd4aGVua2dlMXh1WEhSY2RGeDBYSFJ2Y0dGamFYUjVPaUF3TzF4dVhIUmNkRngwWEhSMGNtRnVjMmwwYVc5dU9pQnZjR0ZqYVhSNUlEUXdNRzF6SUdWaGMyVTdYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5b3FYRzVjZEZ4MFhIUlVhR2x6SUdseklHbHVkSEp2WkhWalpXUWdaSFZsSUhSdklHRWdZblZuSUdsdUlFbEZNVEVnZDJobGNtVWdiR0Y2ZVNCc2IyRmthVzVuSUdOdmJXSnBibVZrSUhkcGRHZ2dZWFYwYjJobGFXZG9kQ0J3YkhWbmFXNGdZMkYxYzJWeklHRWdkM0p2Ym1kY2JseDBYSFJjZEdOaGJHTjFiR0YwYVc5dUlHOW1JSFJvWlNCb1pXbG5hSFFnYjJZZ2RHaGxJRzkzYkMxcGRHVnRJSFJvWVhRZ1luSmxZV3R6SUhCaFoyVWdiR0Y1YjNWMGMxeHVYSFJjZENBcUwxeHVYSFJjZEM1dmQyd3RiR0Y2ZVZ0emNtTmVQVndpWENKZExDQXViM2RzTFd4aGVuazZibTkwS0Z0emNtTmRLU0I3WEc1Y2RGeDBYSFJ0WVhndGFHVnBaMmgwT2lBd08xeHVYSFJjZEgxY2JseHVYSFJjZEdsdFp5NXZkMnd0YkdGNmVTQjdYRzVjZEZ4MFhIUjBjbUZ1YzJadmNtMHRjM1I1YkdVNklIQnlaWE5sY25abExUTmtPMXh1WEhSY2RIMWNibHgwZlZ4dWZWeHVYRzRpTENJa2IzZHNMV2x0WVdkbExYQmhkR2c2SUZ3aVhDSWdJV1JsWm1GMWJIUTdYRzVjYmk4cVhHNGdLaUJjZEU5M2JDQkRZWEp2ZFhObGJDQXRJRlpwWkdWdklGQnNkV2RwYmx4dUlDb3ZYRzVjYmk1dmQyd3RZMkZ5YjNWelpXeDdYRzVjZEM1dmQyd3RkbWxrWlc4dGQzSmhjSEJsY2lCN1hHNWNkRngwY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dVhIUmNkR2hsYVdkb2REb2dNVEF3SlR0Y2JseDBYSFJpWVdOclozSnZkVzVrT2lBak1EQXdPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxd2JHRjVMV2xqYjI0Z2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JseDBYSFJvWldsbmFIUTZJRGd3Y0hnN1hHNWNkRngwZDJsa2RHZzZJRGd3Y0hnN1hHNWNkRngwYkdWbWREb2dOVEFsTzF4dVhIUmNkSFJ2Y0RvZ05UQWxPMXh1WEhSY2RHMWhjbWRwYmkxc1pXWjBPaUF0TkRCd2VEdGNibHgwWEhSdFlYSm5hVzR0ZEc5d09pQXROREJ3ZUR0Y2JseDBYSFJpWVdOclozSnZkVzVrT2lCMWNtd29YQ0lqZXlSdmQyd3RhVzFoWjJVdGNHRjBhSDF2ZDJ3dWRtbGtaVzh1Y0d4aGVTNXdibWRjSWlrZ2JtOHRjbVZ3WldGME8xeHVYSFJjZEdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmx4MFhIUjZMV2x1WkdWNE9pQXhPMXh1WEhSY2RDMTNaV0pyYVhRdFltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHVYSFJjZEhSeVlXNXphWFJwYjI0NklIUnlZVzV6Wm05eWJTQXhNREJ0Y3lCbFlYTmxPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxd2JHRjVMV2xqYjI0NmFHOTJaWElnZTF4dVhIUmNkSFJ5WVc1elptOXliVG9nYzJOaGJHVW9NUzR6TENBeExqTXBPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxd2JHRjVhVzVuSUM1dmQyd3RkbWxrWlc4dGRHNHNYRzVjZEM1dmQyd3RkbWxrWlc4dGNHeGhlV2x1WnlBdWIzZHNMWFpwWkdWdkxYQnNZWGt0YVdOdmJpQjdYRzVjZEZ4MFpHbHpjR3hoZVRvZ2JtOXVaVHRjYmx4MGZWeHVYRzVjZEM1dmQyd3RkbWxrWlc4dGRHNGdlMXh1WEhSY2RHOXdZV05wZEhrNklEQTdYRzVjZEZ4MGFHVnBaMmgwT2lBeE1EQWxPMXh1WEhSY2RHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNpQmpaVzUwWlhJN1hHNWNkRngwWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JseDBYSFJpWVdOclozSnZkVzVrTFhOcGVtVTZJR052Ym5SaGFXNDdYRzVjZEZ4MGRISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQTBNREJ0Y3lCbFlYTmxPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxbWNtRnRaU0I3WEc1Y2RGeDBjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEhSY2RIb3RhVzVrWlhnNklERTdYRzVjZEZ4MGFHVnBaMmgwT2lBeE1EQWxPMXh1WEhSY2RIZHBaSFJvT2lBeE1EQWxPMXh1WEhSOVhHNTlYRzRpTENKQWFXMXdiM0owSUZ3aWRHaGxiV1V1WkdWbVlYVnNkRndpT3lJc0lpOHFYRzRnS2lCY2RFUmxabUYxYkhRZ2RHaGxiV1VnTFNCUGQyd2dRMkZ5YjNWelpXd2dRMU5USUVacGJHVmNiaUFxTDF4dVhHNGtZMjlzYjNJdFltRnpaVHBjZEZ4MFhIUWpPRFk1TnpreElDRmtaV1poZFd4ME8xeHVKR052Ykc5eUxYZG9hWFJsT2x4MFhIUmNkQ05HUmtZZ0lXUmxabUYxYkhRN1hHNGtZMjlzYjNJdFozSmhlVHBjZEZ4MFhIUWpSRFpFTmtRMklDRmtaV1poZFd4ME8xeHVYRzR2TDI1aGRseHVYRzRrYm1GMkxXTnZiRzl5T2lCY2RGeDBYSFFrWTI5c2IzSXRkMmhwZEdVZ0lXUmxabUYxYkhRN1hHNGtibUYyTFdOdmJHOXlMV2h2ZG1WeU9seDBYSFFrWTI5c2IzSXRkMmhwZEdVZ0lXUmxabUYxYkhRN1hHNGtibUYyTFdadmJuUXRjMmw2WlRvZ1hIUmNkREUwY0hnZ0lXUmxabUYxYkhRN1hHNGtibUYyTFhKdmRXNWtaV1E2SUZ4MFhIUmNkRE53ZUNBaFpHVm1ZWFZzZER0Y2JpUnVZWFl0YldGeVoybHVPaUJjZEZ4MFhIUTFjSGdnSVdSbFptRjFiSFE3WEc0a2JtRjJMWEJoWkdScGJtYzZJRngwWEhSY2REUndlQ0EzY0hnZ0lXUmxabUYxYkhRN1hHNGtibUYyTFdKaFkydG5jbTkxYm1RNklGeDBYSFFrWTI5c2IzSXRaM0poZVNBaFpHVm1ZWFZzZER0Y2JpUnVZWFl0WW1GamEyZHliM1Z1WkMxb2IzWmxjanBjZENSamIyeHZjaTFpWVhObElDRmtaV1poZFd4ME8xeHVKRzVoZGkxa2FYTmhZbXhsWkMxdmNHRmphWFI1T2lCY2REQXVOU0FoWkdWbVlYVnNkRHRjYmx4dUx5OWtiM1J6WEc1Y2JpUmtiM1F0ZDJsa2RHZzZYSFJjZEZ4MFhIUXhNSEI0SUNGa1pXWmhkV3gwTzF4dUpHUnZkQzFvWldsbmFIUTZYSFJjZEZ4ME1UQndlQ0FoWkdWbVlYVnNkRHRjYmlSa2IzUXRjbTkxYm1SbFpEcGNkRngwWEhRek1IQjRJQ0ZrWldaaGRXeDBPMXh1SkdSdmRDMXRZWEpuYVc0NklGeDBYSFJjZERWd2VDQTNjSGdnSVdSbFptRjFiSFE3WEc0a1pHOTBMV0poWTJ0bmNtOTFibVE2WEhSY2RDUmpiMnh2Y2kxbmNtRjVJQ0ZrWldaaGRXeDBPMXh1SkdSdmRDMWlZV05yWjNKdmRXNWtMV0ZqZEdsMlpUcGNkQ1JqYjJ4dmNpMWlZWE5sSUNGa1pXWmhkV3gwTzF4dVhHNUFhVzF3YjNKMElDZDBhR1Z0WlNjN1hHNGlMQ0pjYmk1dmQyd3RkR2hsYldVZ2UxeHVYSFF2THlCVGRIbHNhVzVuSUU1bGVIUWdZVzVrSUZCeVpYWWdZblYwZEc5dWMxeHVYSFF1YjNkc0xXNWhkaUI3WEc1Y2RGeDBiV0Z5WjJsdUxYUnZjRG9nTVRCd2VEdGNibHgwWEhSMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNWNkRngwTFhkbFltdHBkQzEwWVhBdGFHbG5hR3hwWjJoMExXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNibHh1WEhSY2RGdGpiR0Z6Y3lvOUoyOTNiQzBuWFNCN1hHNWNkRngwWEhSamIyeHZjam9nSkc1aGRpMWpiMnh2Y2p0Y2JseDBYSFJjZEdadmJuUXRjMmw2WlRvZ0pHNWhkaTFtYjI1MExYTnBlbVU3WEc1Y2RGeDBYSFJ0WVhKbmFXNDZJQ1J1WVhZdGJXRnlaMmx1TzF4dVhIUmNkRngwY0dGa1pHbHVaem9nSkc1aGRpMXdZV1JrYVc1bk8xeHVYSFJjZEZ4MFltRmphMmR5YjNWdVpEb2dKRzVoZGkxaVlXTnJaM0p2ZFc1a08xeHVYSFJjZEZ4MFpHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1WEhSY2RGeDBZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVYSFJjZEZ4MFltOXlaR1Z5TFhKaFpHbDFjem9nTTNCNE8xeHVYRzVjZEZ4MFhIUW1PbWh2ZG1WeUlIdGNibHgwWEhSY2RGeDBZbUZqYTJkeWIzVnVaRG9nSkc1aGRpMWlZV05yWjNKdmRXNWtMV2h2ZG1WeU8xeHVYSFJjZEZ4MFhIUmpiMnh2Y2pva2JtRjJMV052Ykc5eUxXaHZkbVZ5TzF4dVhIUmNkRngwWEhSMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYSFJjZEM1a2FYTmhZbXhsWkNCN1hHNWNkRngwWEhSdmNHRmphWFI1T2lBa2JtRjJMV1JwYzJGaWJHVmtMVzl3WVdOcGRIazdYRzVjZEZ4MFhIUmpkWEp6YjNJNklHUmxabUYxYkhRN1hHNWNkRngwZlZ4dVhIUjlYRzVjYmx4MEx5OGdVM1I1YkdsdVp5QmtiM1J6WEc1Y2RDNXZkMnd0Ym1GMkxtUnBjMkZpYkdWa0lDc2dMbTkzYkMxa2IzUnpJSHRjYmx4MFhIUnRZWEpuYVc0dGRHOXdPaUF4TUhCNE8xeHVYSFI5WEc1Y2JseDBMbTkzYkMxa2IzUnpJSHRjYmx4MFhIUjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzVjZEZ4MExYZGxZbXRwZEMxMFlYQXRhR2xuYUd4cFoyaDBMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmx4dVhIUmNkQzV2ZDJ3dFpHOTBJSHRjYmx4MFhIUmNkR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JseDBYSFJjZEhwdmIyMDZJREU3WEc1Y2RGeDBYSFFxWkdsemNHeGhlVG9nYVc1c2FXNWxPMXh1WEc1Y2RGeDBYSFJ6Y0dGdUlIdGNibHgwWEhSY2RGeDBkMmxrZEdnNklDUmtiM1F0ZDJsa2RHZzdYRzVjZEZ4MFhIUmNkR2hsYVdkb2REb2dKR1J2ZEMxb1pXbG5hSFE3WEc1Y2RGeDBYSFJjZEcxaGNtZHBiam9nSkdSdmRDMXRZWEpuYVc0N1hHNWNkRngwWEhSY2RHSmhZMnRuY205MWJtUTZJQ1JrYjNRdFltRmphMmR5YjNWdVpEdGNibHgwWEhSY2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNWNkRngwWEhSY2RDMTNaV0pyYVhRdFltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dkbWx6YVdKc1pUdGNibHgwWEhSY2RGeDBkSEpoYm5OcGRHbHZiam9nYjNCaFkybDBlU0F5TURCdGN5QmxZWE5sTzF4dVhIUmNkRngwWEhSaWIzSmtaWEl0Y21Ga2FYVnpPaUFrWkc5MExYSnZkVzVrWldRN1hHNWNkRngwWEhSOVhHNWNibHgwWEhSY2RDWXVZV04wYVhabExGeHVYSFJjZEZ4MEpqcG9iM1psY2lCN1hHNWNkRngwWEhSY2RITndZVzRnZTF4dVhIUmNkRngwWEhSY2RHSmhZMnRuY205MWJtUTZJQ1JrYjNRdFltRmphMmR5YjNWdVpDMWhZM1JwZG1VN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNkSDFjYm4xY2JpSXNJaTh2SUZOUVFVTkpUa2RjYmlSdGVGYzZJREUyTURCd2VEdGNiaVJuZFhSMFpYSTZJREl3Y0hnN1hHNWNiaTh2SUVOUFRFOVNVMXh1SkdKc1lXTnJPaUFqTURBd01EQXdPMXh1Skhkb2FYUmxPaUFqUmtaR1JrWkdPMXh1WEc0a2NISnBiV0Z5ZVRvZ0l6RkZNekUwTVR0Y2JpUnpaV052Ym1SaGNuazZJQ00zTURjd056QTdYRzVjYmlSaFkyTmxiblF0TVRvZ0l6QTNNVFEwUlR0Y2JseHVMeThnUms5T1ZGTmNiaVJvWldGa2FXNW5Sa1k2SUNkRmVIQnNaWFIxY3lCVFlXNXpKeXdnWTNWeWMybDJaVHRjYmlSamIzQjVSa1k2SUNkQmMzTnBjM1JoYm5RbkxDQnpZVzV6TFhObGNtbG1PMXh1Skd4ME9pQXpNREE3WEc0a2NtVm5PaUEwTURBN1hHNGtZbTlzWkRvZ056QXdPMXh1WEc0dkx5QkNVa1ZCUzFCUFNVNVVVMXh1SkcxbFpHbGhXSE02SUZ3aWMyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUF6TnpWd2VDbGNJanRjYmlSdFpXUnBZVkJvYjI1bE9pQmNJbk5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ056WTNMamx3ZUNsY0lqdGNiaVJ0WldScFlWUmhZbXhsZERvZ1hDSnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLVndpTzF4dUpHMWxaR2xoVkdGaWJHVjBUMjVzZVRvZ1hDSnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLU0JoYm1RZ0tHMWhlQzEzYVdSMGFEb2dNVEF5TkM0NWNIZ3BYQ0k3WEc0a2JXVmthV0ZVYjJkbmJHVklaV0ZrWlhJNklGd2ljMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBeE1ESTBMamx3ZUNsY0lqdGNiaVJ0WldScFlVUmxjMnQwYjNBNklGd2ljMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBeE1ESTFjSGdwWENJN1hHNGtiV1ZrYVdGR2RXeHNPaUJjSW5OamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dJM3NrYlhoWGZTbGNJanRjYmx4dUx5OGdSRWxOUlU1VFNVOU9VMXh1SkdobFlXUmxja2hsYVdkb2REb2dOekJ3ZUR0Y2JpSXNJa0J0YVhocGJpQmpiMjUwWlc1MFYybGtkR2dnZTF4dUlDQnRZWGd0ZDJsa2RHZzZJQ1J0ZUZjN1hHNGdJRzFoY21kcGJqb2dZWFYwYnp0Y2JpQWdjR0ZrWkdsdVp6b2dNQ0FrWjNWMGRHVnlPMXh1ZlZ4dVhHNUFiV2w0YVc0Z2FHOTJaWElnZTF4dUlDQW1PbWh2ZG1WeUxGeHVJQ0FtT21adlkzVnpJSHRjYmlBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnZlZ4dWZWeHVYRzVBYldsNGFXNGdjM0pQYm14NUlIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQjNhV1IwYURvZ01YQjRPMXh1SUNCb1pXbG5hSFE2SURGd2VEdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdiV0Z5WjJsdU9pQXRNWEI0TzF4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0JqYkdsd09pQnlaV04wS0RBc01Dd3dMREFwTzF4dUlDQmliM0prWlhJNklEQTdYRzU5WEc1Y2JrQnRhWGhwYmlCcGJXZERiM1psY2lCN1hHNGdJRzFwYmkxb1pXbG5hSFE2SURFd01DVTdYRzRnSUcxcGJpMTNhV1IwYURvZ01UQXdKVHRjYmlBZ2QybGtkR2c2SUdGMWRHODdYRzRnSUdobGFXZG9kRG9nWVhWMGJ6dGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUcxaGNtZHBiam9nTUR0Y2JseHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lIUnZjRG9nTlRBbE8xeHVJQ0JzWldaME9pQTFNQ1U3WEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLQzAxTUNVc0xUVXdKU2s3WEc1Y2JpQWdRSE4xY0hCdmNuUnpJQ2h2WW1wbFkzUXRabWwwT2lCamIzWmxjaWtnZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdJQ0J2WW1wbFkzUXRabWwwT2lCamIzWmxjanRjYmlBZ2ZWeHVmVnh1SWl3aUtpQjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ1ltOXlaR1Z5T2lBd08xeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHVmVnh1WEc1MWJDeGNibTlzSUh0Y2JpQWdiR2x6ZEMxemRIbHNaVG9nYm05dVpUdGNibjFjYmx4dVlTQjdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TWpWek8xeHVJQ0F2THlCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzU5WEc1Y2JpNXpjaTF2Ym14NUlIdGNiaUFnUUdsdVkyeDFaR1VnYzNKUGJteDVPMXh1ZlZ4dVhHNXpkSEp2Ym1jZ2UxeHVJQ0JtYjI1MExYZGxhV2RvZERvZ0pHSnZiR1E3WEc1OVhHNWNibUp2WkhrZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0pHTnZjSGxHUmp0Y2JuMWNiaUlzSWtCcGJYQnZjblFnZFhKc0tDZG9kSFJ3Y3pvdkwyWnZiblJ6TG1kdmIyZHNaV0Z3YVhNdVkyOXRMMk56Y3o5bVlXMXBiSGs5UVhOemFYTjBZVzUwT2pNd01DdzBNREFzTnpBd2ZFVjRjR3hsZEhWeksxTmhibk02TkRBd0xEY3dNQ1prYVhOd2JHRjVQWE4zWVhBbktUdGNiaUlzSW1KdlpIa2dlMXh1SUNBbUxtWnliMjUwTFhCaFoyVXNYRzRnSUNZdWNISnZhbVZqZEMxa1pYUmhhV3dnZTF4dUlDQWdJQ0ErSUcxaGFXNGdlMXh1SUNBZ0lDQWdJSEJoWkdScGJtY3RkRzl3T2lBd08xeHVJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNBZ0lDQjZMV2x1WkdWNE9pQXdPMXh1SUNBZ0lDQjlYRzVjYmlBZ0lDQWdMbTFoYVc0dGFHVmhaR1Z5SUh0Y2JpQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQWdJQ0ErSUdScGRpQjdYRzRnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0FnSUNCNkxXbHVaR1Y0T2lBeE8xeHVJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01UVXhjSGc3WEc0Z0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lDQjBiM0E2SURBN1hHNGdJQ0FnSUNBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUNBZ0lDQWdlaTFwYm1SbGVEb2dNRHRjYmlBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUZ3aVhDSTdYRzRnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCc2FXNWxZWEl0WjNKaFpHbGxiblFvTUdSbFp5eHlaMkpoS0NSaWJHRmpheXd3S1NBd0pTd2djbWRpWVNna1lteGhZMnNzTGpNcElERXdNQ1VwTzF4dUlDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lHZ3hJR0VnZTF4dUlDQWdJQ0FnSUNBZ1kyOXNiM0k2SUNSM2FHbDBaVHRjYmx4dUlDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2FHOTJaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2NtZGlZU2drZDJocGRHVXNMalFwTzF4dUlDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJRUJ0WldScFlTQWpleVJ0WldScFlWUnZaMmRzWlVobFlXUmxjbjBnZTF4dUlDQWdJQ0FnSUNBZ0lDNXZjR1Z1SUdneElHRWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUNSd2NtbHRZWEo1TzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCeVoySmhLQ1J3Y21sdFlYSjVMQzQwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdRRzFsWkdsaElDTjdKRzFsWkdsaFJHVnphM1J2Y0gwZ2UxeHVJQ0FnSUNBZ0lDQWdZU3hjYmlBZ0lDQWdJQ0FnSUhOd1lXNGdlMXh1SUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkhkb2FYUmxPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHaHZkbVZ5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2djbWRpWVNna2QyaHBkR1VzTGpRcE8xeHVJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdMbWhoYldKMWNtZGxjanB1YjNRb0xtOXdaVzRwSUh0Y2JpQWdJQ0FnSUNBZ0lITndZVzRzWEc0Z0lDQWdJQ0FnSUNBbU9tSmxabTl5WlN4Y2JpQWdJQ0FnSUNBZ0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBa2QyaHBkR1U3WEc0Z0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ2ZWeHVYRzVjYmlBZ0lDQWdmVnh1SUNBZ2ZWeHVYRzRnSUNBbUxtWnliMjUwTFhCaFoyVWdlMXh1SUNBZ0lDQWdQaUJ0WVdsdUlENGdjMlZqZEdsdmJpQStJR1JwZGlCN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEQTdYRzRnSUNBZ0lDQjlYRzRnSUNCOVhHNTlYRzVjYmtCcGJYQnZjblFnSjJOdmNIa3ZYMkpoYzJVbk8xeHVRR2x0Y0c5eWRDQW5hR1ZoWkdWeUwxOW9aV0ZrWlhJbk8xeHVRR2x0Y0c5eWRDQW5abTl2ZEdWeUwxOW1iMjkwWlhJbk8xeHVRR2x0Y0c5eWRDQW5YM0JoWjJVbk8xeHVRR2x0Y0c5eWRDQW5YMlp5YjI1MExYQmhaMlVuTzF4dUlpd2lRR2x0Y0c5eWRDQW5hR1ZoWkdsdVozTW5PMXh1WEc1d0lIdGNiaUFnTHk5amIyeHZjam9nSkhCeWFXMWhjbms3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVGh3ZUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SUNneU55QXZJREl4S1NBcUlERmxiVHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVdWdE8xeHVmVnh1SWl3aWFERXNMbWd4SUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNSamIzQjVSa1k3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUFrYkhRN1hHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYRzRnSUdadmJuUXRjMmw2WlRvZ01qVndlRHRjYm4xY2JseHVhRElzTG1neUlIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDUm9aV0ZrYVc1blJrWTdYRzRnSUdadmJuUXRjMmw2WlRvZ016QndlRHRjYmlBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SUNnME1DQXZJRE13S1NBcUlERmxiVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJQ1JpYjJ4a08xeHVmVnh1YURNc0xtZ3pJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ1JvWldGa2FXNW5Sa1k3WEc0Z0lHWnZiblF0YzJsNlpUb2dNalJ3ZUR0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklDZzBNQ0F2SURNd0tTQXFJREZsYlR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SUNSaWIyeGtPMXh1ZlZ4dWFEVXNMbWcxSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNSb1pXRmthVzVuUmtZN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRod2VEdGNibjFjYmlJc0lpNXRZV2x1TFdobFlXUmxjaUI3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCb1pXbG5hSFE2SUNSb1pXRmtaWEpJWldsbmFIUTdYRzRnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjYmlBZ2RHOXdPaUF3TzF4dUlDQnNaV1owT2lBd08xeHVJQ0I2TFdsdVpHVjRPaUF4TUR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nY21kaVlTZ2tkMmhwZEdVc0xqazVLVHRjYmx4dUlDQXViRzluWjJWa2FXNGdKaUI3WEc0Z0lDQWdkRzl3T2lBek1uQjRPMXh1SUNCOVhHNWNiaUFnYURFZ2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0I2TFdsdVpHVjRPaUF5TUR0Y2JpQWdmVnh1WEc0Z0lENGdaR2wySUh0Y2JpQWdJQ0JBYVc1amJIVmtaU0JqYjI1MFpXNTBWMmxrZEdnN1hHNWNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFpWlhSM1pXVnVPMXh1SUNBZ0lIQmhaR1JwYm1jdGRHOXdPaUF4TUhCNE8xeHVJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVlJoWW14bGRIMGdlMXh1SUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdac1pYZ3RaVzVrTzF4dUlDQWdJSDFjYmlBZ2ZWeHVJQ0JpZFhSMGIyNGdlMXh1SUNBZ0lFQnRaV1JwWVNBamV5UnRaV1JwWVVSbGMydDBiM0I5SUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdMbWhoYldKMWNtZGxjaUI3WEc0Z0lDQWdkMmxrZEdnNklETXljSGc3WEc0Z0lDQWdhR1ZwWjJoME9pQXpNbkI0TzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQjZMV2x1WkdWNE9pQXlNRHRjYmx4dUlDQWdJSE53WVc0Z2UxeHVYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0pqcGlaV1p2Y21Vc1hHNGdJQ0FnSmpwaFpuUmxjaXhjYmlBZ0lDQnpjR0Z1SUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF4Tm5CNE8xeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBeWNIZzdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQjBiM0E2SURFMWNIZzdYRzRnSUNBZ0lDQnNaV1owT2lBNGNIZzdYRzRnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJbHdpTzF4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pIQnlhVzFoY25rN1hHNGdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTGpJMWN6dGNiaUFnSUNBZ0lIUmxlSFF0YVc1a1pXNTBPaUF0T1RrNU9UazVjSGc3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKanBpWldadmNtVWdlMXh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwMmNIZ3BPMXh1SUNBZ0lIMWNiaUFnSUNBbU9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdTZzJjSGdwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1l1YjNCbGJpQjdYRzRnSUNBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLRFExWkdWbktUdGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3RORFZrWldjcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2MzQmhiaUI3WEc0Z0lDQWdJQ0FnSUc5d1lXTnBkSGs2SURBN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lFQnRaV1JwWVNBamV5UnRaV1JwWVZSdloyZHNaVWhsWVdSbGNuMGdlMXh1SUNBZ0lDQWdJQ0FySUc1aGRpQjdYRzRnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVb0xURXdNQ1VwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzRnSUdneElIdGNibHh1SUNCOVhHNWNiaUFnWVNCN1hHNGdJQ0FnWTI5c2IzSTZJQ1J3Y21sdFlYSjVPMXh1SUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUlIdGNiaUFnSUNBZ0lHTnZiRzl5T2lBa2MyVmpiMjVrWVhKNU8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lFQnBiWEJ2Y25RZ0oxOXVZWFluTzF4dWZWeHVJaXdpYm1GMklIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDUm9aV0ZrYVc1blJrWTdYRzRnSUdadmJuUXRjMmw2WlRvZ01UVndlRHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVYRzRnSUdFZ2UxeHVJQ0FnSUdOdmJHOXlPaUFrY0hKcGJXRnllVHRjYmlBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0pITmxZMjl1WkdGeWVUdGNiaUFnSUNBZ0lDOHZkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQWdJSDFjYmx4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklEQWdNVEp3ZUR0Y2JpQWdJQ0I5WEc0Z0lIMWNiaUFnUUcxbFpHbGhJQ043SkcxbFpHbGhSR1Z6YTNSdmNIMGdlMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQXRNVEp3ZUR0Y2JpQWdmVnh1WEc0Z0lFQnRaV1JwWVNBamV5UnRaV1JwWVZSdloyZHNaVWhsWVdSbGNuMGdlMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQm1hWGhsWkR0Y2JpQWdJQ0IwYjNBNklEQTdYRzRnSUNBZ2JHVm1kRG9nTVRBd0pUdGNiaUFnSUNCNkxXbHVaR1Y0T2lBeE1EdGNiaUFnSUNCM2FXUjBhRG9nTVRBd2RuYzdYRzRnSUNBZ2FHVnBaMmgwT2lBeE1EQjJhRHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUFrZDJocGRHVTdYRzRnSUNBZ2NHRmtaR2x1WnpvZ05qQndlQ0F5TUhCNE8xeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z0xqSTFjenRjYmx4dUlDQWdJRDRnWkdsMklIdGNiaUFnSUNBZ0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQWdJRzkyWlhKbWJHOTNPaUJoZFhSdk8xeHVJQ0FnSUgxY2JseHVJQ0FnSUM1emRXSXRiV1Z1ZFNCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFMGNIZzdYRzVjYmlBZ0lDQWdJR0VzWEc0Z0lDQWdJQ0J6Y0dGdUlIdGNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEVndlQ0F4TUhCNE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM1dFpXNTFJSHRjYmlBZ0lDQWdJRDRnYkdrZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYRzRnSUNBZ0lDQWdJR1pzWlhndGQzSmhjRG9nZDNKaGNEdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9pQXhNSEI0SURBN1hHNWNiaUFnSUNBZ0lDQWdQaUJoSUh0Y2JpQWdJQ0FnSUNBZ0lDQm1iR1Y0TFdkeWIzYzZJREU3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQStJR0oxZEhSdmJpQjdYRzRnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJRE15Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQXpNbkI0TzF4dUlDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JpQWdJQ0FnSUNBZ0lDQmliM0prWlhJNklEQTdYRzVjYmlBZ0lDQWdJQ0FnSUNBbU9tSmxabTl5WlN4Y2JpQWdJQ0FnSUNBZ0lDQW1PbUZtZEdWeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4Tm5CNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF5Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBiM0E2SURFMWNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pXWjBPaUE0Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pIQnlhVzFoY25rN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dMakkxY3p0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBbU9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLRGt3WkdWbktUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQnpjR0Z1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJSE55VDI1c2VUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQW1MbU4xY25KbGJuUXRiV1Z1ZFMxcGRHVnRJSHRjYmlBZ0lDQWdJQ0FnSUNBK0lHSjFkSFJ2YmlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FtT21GbWRHVnlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9NR1JsWnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnTG5OMVlpMXRaVzUxSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUhWc0xtMWxiblVnZTF4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR1pzWlhndFpXNWtPMXh1SUNBZ0lIMWNibHh1SUNBZ0lENGdiR2tnZTF4dUlDQWdJQ0FnUGlCaElIdGNiaUFnSUNBZ0lDQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnSUNBZ0lDQWdiR1YwZEdWeUxYTndZV05wYm1jNklERXVNVE53ZUR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoUkdWemEzUnZjSDBnZTF4dUlDQWdJQ0FnSUNBbU9taHZkbVZ5TEZ4dUlDQWdJQ0FnSUNBbUxtTjFjbkpsYm5RdGJXVnVkUzFwZEdWdExGeHVJQ0FnSUNBZ0lDQW1MbU4xY25KbGJuUXRiV1Z1ZFMxaGJtTmxjM1J2Y2lCN1hHNGdJQ0FnSUNBZ0lDQWdMbk4xWWkxdFpXNTFJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2JHa2dlMXh1SUNBZ0lDQWdKaTVqZFhKeVpXNTBMVzFsYm5VdGFYUmxiU3hjYmlBZ0lDQWdJQ1l1WTNWeWNtVnVkQzF0Wlc1MUxXRnVZMlZ6ZEc5eUlIdGNiaUFnSUNBZ0lDQWdQaUJoSUh0Y2JpQWdJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nT0RBd08xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdMbk4xWWkxdFpXNTFJSHRjYmlBZ0lDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGRVpYTnJkRzl3ZlNCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQm1iR1Y0TFdWdVpEdGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lIUnZjRG9nTVRBd0pUdGNiaUFnSUNBZ0lISnBaMmgwT2lBd08xeHVJQ0FnSUNBZ2JXbHVMWGRwWkhSb09pQXhNREFsTzF4dVhHNGdJQ0FnSUNCaExGeHVJQ0FnSUNBZ2MzQmhiaUI3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURFd2NIZ2dNVEp3ZUNBd08xeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmlJc0lpNXRZV2x1TFdadmIzUmxjaUI3WEc0Z0lIQmhaR1JwYm1jNklDUm5kWFIwWlhJZ01EdGNibHh1SUNCaElIdGNiaUFnSUNCamIyeHZjam9nSkhCeWFXMWhjbms3WEc0Z0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUlIdGNiaUFnSUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2RXNWtaWEpzYVc1bE8xeHVJQ0FnSUgxY2JpQWdmVnh1SUNBK0lHUnBkaUI3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZMjl1ZEdWdWRGZHBaSFJvTzF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJ6Y0dGalpTMWlaWFIzWldWdU8xeHVJQ0I5WEc1Y2JpQWdMbU52Ym5SaFkzUWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVFZ3ZUR0Y2JpQWdJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh1SUNBZ0lHeGxkSFJsY2kxemNHRmphVzVuT2lBeExqY3pjSGc3WEc0Z0lDQWdZMjlzYjNJNklDUndjbWx0WVhKNU8xeHVYRzRnSUNBZ2NDQjdYRzRnSUNBZ0lDQnRZWEpuYVc0NklEQTdYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREUwY0hnN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1BpQmthWFlnZTF4dVhHNGdJSDFjYmx4dUlDQXVjMjlqYVdGc0lIdGNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lHRWdlMXh1SUNBZ0lDQWdkMmxrZEdnNklESTBjSGc3WEc0Z0lDQWdJQ0JvWldsbmFIUTZJREkwY0hnN1hHNGdJQ0FnSUNCdFlYSm5hVzR0YkdWbWREb2dNVEJ3ZUR0Y2JseHVJQ0FnSUNBZ2MzWm5JSHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYzNCaGJpQjdYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJSE55VDI1c2VUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVMbVp2YjNSbGNpMXNiMmR2SUh0Y2JpQWdjM1puSUh0Y2JpQWdJQ0IzYVdSMGFEb2dPRFZ3ZUR0Y2JpQWdJQ0JvWldsbmFIUTZJRGs1Y0hnN1hHNGdJQ0FnWm1sc2JEb2dKR0ZqWTJWdWRDMHhPMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQjlYRzU5WEc0aUxDSmliMlI1SUh0Y2JpQWdQaUJ0WVdsdUlIdGNiaUFnSUNCd1lXUmthVzVuT2lBM01IQjRJREE3WEc0Z0lDQWdQaUJ6WldOMGFXOXVJSHRjYmlBZ0lDQWdJRDRnWkdsMklIdGNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdZMjl1ZEdWdWRGZHBaSFJvTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCamIyeHZjam9nSkhCeWFXMWhjbms3WEc1Y2JpQWdJQ0FnSUNZdVltY3RjSEpwYldGeWVTQjdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUNSd2NtbHRZWEo1TzF4dUlDQWdJQ0FnSUNCamIyeHZjam9nSkhkb2FYUmxPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUEyTUhCNElEQTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTh2SUdKdlpIa3VjSEp2YW1WamRDMWtaWFJoYVd3Z2UxeHVMeThnSUNBK0lHMWhhVzRnZTF4dUx5OGdJQ0FnSUhCaFpHUnBibWM2SURBN1hHNHZMeUFnSUgxY2JpOHZJSDFjYmx4dUxuTmxZM1JwYjI0dGFXNXVaWElnZTF4dUlDQndZV1JrYVc1bk9pQXdJREl3Y0hnN1hHNWNiaUFnUUcxbFpHbGhJQ043SkcxbFpHbGhSR1Z6YTNSdmNIMGdlMXh1SUNBZ0lIQmhaR1JwYm1jNklEQWdPVEp3ZUR0Y2JpQWdmVnh1ZlZ4dUlpd2lKV2x0WjBOdmRtVnlJSHRjYmlBZ1FHbHVZMngxWkdVZ2FXMW5RMjkyWlhJN1hHNTlYRzR1YUhBdGMyeHBaR1Z6YUc5M0lIdGNiaUFnYUdWcFoyaDBPaUF4TURCMmFEdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dVhHNGdJQzVxY3kxallYSnZkWE5sYkNCN1hHNGdJQ0FnTG05M2JDMXBkR1Z0SUh0Y2JpQWdJQ0FnSUdobGFXZG9kRG9nTVRBd2RtZzdYRzVjYmlBZ0lDQWdJRDRnWkdsMklIdGNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQXhNREFsTzF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHbHRaeUI3WEc0Z0lDQWdJQ0FnSUVCbGVIUmxibVFnSldsdFowTnZkbVZ5TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJQzV2ZDJ3dGJtRjJJSHRjYmlBZ0lDQWdJR0oxZEhSdmJpQjdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJQ0FnZEc5d09pQmpZV3hqS0RVd0pTQXRJRFEzY0hncE8xeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ05EWndlRHRjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUE1TlhCNE8xeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvSnk0dUwybHRZV2RsY3k5aGNuSnZkeTV6ZG1jbktUdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQmpiMjUwWVdsdU8xeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBPMXh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dMakkxY3p0Y2JseHVJQ0FnSUNBZ0lDQnpjR0Z1SUh0Y2JpQWdJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQnpjazl1YkhrN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FtT21adlkzVnpMRnh1SUNBZ0lDQWdJQ0FtT21GamRHbDJaU0I3WEc0Z0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBd08xeHVJQ0FnSUNBZ0lDQWdJRzkxZEd4cGJtVTZJRzV2Ym1VN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYRzRnSUNBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nTGpVN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdMbTkzYkMxd2NtVjJJSHRjYmlBZ0lDQWdJQ0FnYkdWbWREb2dKR2QxZEhSbGNqdGNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9NVGd3WkdWbktUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdMbTkzYkMxdVpYaDBJSHRjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJQ1JuZFhSMFpYSTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdMbk5qY205c2JDMWtiM2R1SUh0Y2JpQWdJQ0IzYVdSMGFEb2dORFp3ZUR0Y2JpQWdJQ0JvWldsbmFIUTZJRGsxY0hnN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJR0p2ZEhSdmJUb2dKR2QxZEhSbGNqdGNiaUFnSUNCc1pXWjBPaUJqWVd4aktEVXdKU0F0SURFNGNIZ3BPMXh1SUNBZ0lIb3RhVzVrWlhnNklERXdPMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2duTGk0dmFXMWhaMlZ6TDJGeWNtOTNMbk4yWnljcE8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nWTI5dWRHRnBianRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBPMXh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1qVnpPMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEa3daR1ZuS1R0Y2JpQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lIUmxlSFF0YVc1a1pXNTBPaUF0T1RrNU9UazVjSGc3WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYRzRnSUNBZ0lDQnZjR0ZqYVhSNU9pQXVOVHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG1od0xXNWhkbWxuWVhScGIyNGdlMXh1SUNCaElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdhR1ZwWjJoME9pQXhNREIyYUR0Y2JpQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dOVEJ3ZUR0Y2JpQWdJQ0JqYjJ4dmNqb2dKSGRvYVhSbE8xeHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdJQ0IwWlhoMExYTm9ZV1J2ZHpvZ01IQjRJRFJ3ZUNBM2NIZ2dKSE5sWTI5dVpHRnllVHRjYmlBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNSb1pXRmthVzVuUmtZN1hHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUFrY0hKcGJXRnllVHRjYmx4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlWUmhZbXhsZEgwZ2UxeHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQTRNSEI0TzF4dUlDQWdJSDFjYmx4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVFUxY0hnN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYzNCaGJpQjdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQjZMV2x1WkdWNE9pQXhPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHbHRaeUI3WEc0Z0lDQWdJQ0JBWlhoMFpXNWtJQ1ZwYldkRGIzWmxjanRjYmlBZ0lDQWdJSG90YVc1a1pYZzZJREE3WEc0Z0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dMakkxY3p0Y2JpQWdJQ0FnSUdacGJIUmxjam9nWW14MWNpZ3hPSEI0S1R0Y2JseHVJQ0FnSUNBZ1FITjFjSEJ2Y25SeklDaHZZbXBsWTNRdFptbDBPaUJqYjNabGNpa2dlMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF6SlR0Y2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1ETWxPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDWTZhRzkyWlhJZ2UxeHVJQ0FnSUNBZ2FXMW5JSHRjYmlBZ0lDQWdJQ0FnWm1sc2RHVnlPaUJpYkhWeUtEQXBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVJaXdpTG1OdmJuUmxiblF0WjNKcFpDQjdYRzRnSUcxaGNtZHBiam9nTUNBdE5uQjRPMXh1WEc0Z0lFQnRaV1JwWVNBamV5UnRaV1JwWVZSaFlteGxkSDBnZTF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJtYkdWNExYTjBZWEowTzF4dUlDQWdJR1pzWlhndGQzSmhjRG9nZDNKaGNEdGNiaUFnZlZ4dVhHNGdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNCdFlYSm5hVzQ2SURBZ05qQndlRHRjYmlBZ2ZWeHVYRzRnSUZ0amJHRnpjMTQ5WENKamIyeGNJbDBnZTF4dUlDQWdJSEJoWkdScGJtYzZJRFp3ZUR0Y2JseHVJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVVJsYzJ0MGIzQjlJSHRjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREV5Y0hnN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2FXMW5JSHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQm9aV2xuYUhRNklHRjFkRzg3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJSDFjYmx4dUlDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGUWFHOXVaWDBnZTF4dUlDQWdJQzVqYjJ3dE1TQjdYRzRnSUNBZ0lDQnBiV2NnZTF4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nWVhWMGJ6dGNiaUFnSUNBZ0lDQWdiV0Y0TFdobGFXZG9kRG9nTlRJd2NIZzdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dZWFYwYnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dVFHMWxaR2xoSUNON0pHMWxaR2xoVkdGaWJHVjBmU0I3WEc0Z0lDNWpiMnd0TVNCN1hHNGdJQ0FnZDJsa2RHZzZJRE16TGpNekpUdGNiaUFnSUNCbWJHVjRPaUF3SURBZ016TXVNek1sTzF4dUlDQjlYRzVjYmlBZ0xtTnZiQzB5SUh0Y2JpQWdJQ0IzYVdSMGFEb2dOall1TmpjbE8xeHVJQ0FnSUdac1pYZzZJREFnTUNBMk5pNDJOeVU3WEc0Z0lIMWNibHh1SUNBdVkyOXNMVE1nZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR1pzWlhnNklEQWdNQ0F4TURBbE8xeHVJQ0I5WEc1OVhHNGlMQ0l2THlBdWJXRndMWGR5WVhCd1pYSWdlMXh1THk4Z0lDQjNhV1IwYURvZ01UQXdKVHRjYmk4dklDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEYzFKVHRjYmk4dklDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1THk4Z0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWpRVUZCTzF4dUx5OWNiaTh2SUNBZ1BpQmthWFlnZTF4dUx5OGdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVMeThnSUNBZ0lHaGxhV2RvZERvZ01UQXdKVHRjYmk4dklDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0dkx5QWdJQ0FnZEc5d09pQXdPMXh1THk4Z0lDQWdJR3hsWm5RNklEQTdYRzR2THlBZ0lIMWNiaTh2SUgxY2JseHVMbTFoY0NCN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ056SWxPMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNWNiaUFnYVdaeVlXMWxJSHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnZEc5d09pQXdPMXh1SUNCOVhHNTlYRzRpTENJdkx5QlRTVTVIVEVVZ1VGSlBTa1ZEVkZ4dUxuQnliMnBsWTNRdGFHVnlieUI3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnYldGNExXaGxhV2RvZERvZ01UQXdkbWc3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklERXljSGc3WEc1Y2JpQWdhVzFuSUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0JvWldsbmFIUTZJR0YxZEc4N1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUgxY2JseHVJQ0F1Y0hKdmFtVmpkQzEwYVhSc1pTQjdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdZbTkwZEc5dE9pQXdPMXh1SUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1U3WEc0Z0lDQWdkR1Y0ZEMxemFHRmtiM2M2SURBZ01DQXljSGdnSkdKc1lXTnJPMXh1SUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBME5YQjRPMXh1WEc0Z0lDQWdjM0JoYml4Y2JpQWdJQ0J6YldGc2JDQjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6YldGc2JDQjdYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREZsYlR0Y2JpQWdJQ0FnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUJ1YjI1bE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUQ0Z1pHbDJJSHRjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJR052Ym5SbGJuUlhhV1IwYUR0Y2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUxtZHlhV1F0ZEdsMGJHVWdlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJR3hsWm5RNklEQTdYRzRnSUdKdmRIUnZiVG9nTUR0Y2JpQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lIQmhaR1JwYm1jNklEQWdNalJ3ZUNBek9IQjRJREkwY0hnN1hHNGdJR052Ykc5eU9pQWtkMmhwZEdVN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXVNalZ6TzF4dUlDQjBaWGgwTFhOb1lXUnZkem9nTUhCNElEQndlQ0F5Y0hnZ0pHSnNZV05yTzF4dVhHNGdJR2cwSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURJMGNIZzdYRzRnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2JseHVJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVVJsYzJ0MGIzQjlJSHRjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTXpCd2VEdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQnpiV0ZzYkNCN1hHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDUm9aV0ZrYVc1blJrWTdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJQ2cwTUNBdklETXdLU0FxSURGbGJUdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dKR0p2YkdRN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBb016QWdMeUF5TkNrZ0tpQXhaVzA3WEc0Z0lIMWNibjFjYmx4dUxuQnliMnBsWTNRdGJXRnBiaUI3WEc0Z0lENGdaR2wySUh0Y2JpQWdJQ0JBYVc1amJIVmtaU0JqYjI1MFpXNTBWMmxrZEdnN1hHNGdJSDFjYm4xY2JseHVMbkJ5YjJwbFkzUXRjM1JoZEhNZ2UxeHVJQ0JrYVhOd2JHRjVPaUJuY21sa08xeHVJQ0JuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklHRjFkRzhnTVdaeU8xeHVJQ0JuY21sa0xXZGhjRG9nTlhCNElESXdjSGc3WEc0Z0lHMWhjbWRwYmkxMGIzQTZJRE5sYlR0Y2JseHVJQ0JrZENCN1hHNGdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjYmlBZ2ZWeHVmVnh1WEc0dkx5QlFVazlLUlVOVUlFZFNTVVJjYmk1eVpXeGhkR1ZrTFhCeWIycGxZM1J6SUh0Y2JpQWdjR0ZrWkdsdVp6b2dOekJ3ZUNBd08xeHVmVnh1WEc0dWNISnZhbVZqZEMxbmNtbGtJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ1JvWldGa2FXNW5Sa1k3WEc0Z0lENGdaR2wySUh0Y2JpQWdJQ0JBYVc1amJIVmtaU0JqYjI1MFpXNTBWMmxrZEdnN1hHNGdJSDFjYmx4dUlDQnBiV2NnZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dZWFYwYnp0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnZlZ4dVhHNGdJR0Z5ZEdsamJHVWdlMXh1SUNBZ0lIQmhaR1JwYm1jNklEWndlRHRjYmx4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlWUmhZbXhsZEgwZ2UxeHVJQ0FnSUNBZ2QybGtkR2c2SURNekxqTXpKVHRjYmlBZ0lDQWdJR1pzWlhnNklEQWdNQ0F6TXk0ek15VTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoUkdWemEzUnZjSDBnZTF4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTVRKd2VEdGNiaUFnSUNCOVhHNWNiaUFnSUNBbU9tNTBhQzFqYUdsc1pDZ3piaUFySURJcElIdGNiaUFnSUNBZ0lFQnRaV1JwWVNBamV5UnRaV1JwWVZSaFlteGxkSDBnZTF4dUlDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29MVE0xY0hncE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoUkdWemEzUnZjSDBnZTF4dUlDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29MVGN3Y0hncE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lHRWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsTzF4dVhHNGdJQ0FnSmpwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNCb1pXbG5hSFE2SURFMU1YQjRPMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdZbTkwZEc5dE9pQXdPMXh1SUNBZ0lDQWdiR1ZtZERvZ01EdGNiaUFnSUNBZ0lIb3RhVzVrWlhnNklEQTdYRzRnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJbHdpTzF4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2JHbHVaV0Z5TFdkeVlXUnBaVzUwS0RCa1pXY3NjbWRpWVNna1lteGhZMnNzTGpNcElEQWxMQ0J5WjJKaEtDUmliR0ZqYXl3d0tTQXhNREFsS1R0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCemJXRnNiQ0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF5TVhCNE8xeHVJQ0I5WEc1Y2JpQWdMbWR5YVdRdGRHbDBiR1VnZTF4dUlDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQTBPSEI0TzF4dUlDQjlYRzVjYmlBZ0ppNWhjbU5vYVhabElIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWtjSEpwYldGeWVUdGNiaUFnSUNCamIyeHZjam9nSkhkb2FYUmxPMXh1SUNCOVhHNTlYRzVjYmk1d2NtOXFaV04wTFdkeWFXUXRhVzV1WlhJZ2UxeHVJQ0J3WVdSa2FXNW5PaUF3SURBZ056QndlRHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0J0WVhKbmFXNDZJREFnTFRad2VEdGNibHh1SUNCQWJXVmthV0VnSTNza2JXVmthV0ZVWVdKc1pYUjlJSHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR1pzWlhndGQzSmhjRG9nZDNKaGNEdGNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdac1pYZ3RjM1JoY25RN1hHNGdJQ0FnY0dGa1pHbHVaeTEwYjNBNklEY3djSGc3WEc0Z0lIMWNibHh1SUNCQWJXVmthV0VnSTNza2JXVmthV0ZFWlhOcmRHOXdmU0I3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdJRFl3Y0hnN1hHNGdJQ0FnY0dGa1pHbHVaeTEwYjNBNklETTFjSGc3WEc0Z0lIMWNibjFjYmx4dVhHNHZMeUJBYTJWNVpuSmhiV1Z6SUhkbFpTQjdYRzR2THlBZ0lEQWxJSHNnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTUdSbFp5azdmVnh1THk4Z0lDQXhNREFsSUhzZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb016WXdaR1ZuS1R0OVhHNHZMeUI5WEc0dkwxeHVMeThnWW05a2VTQjdYRzR2THlBZ0lHRnVhVzFoZEdsdmJqb2dkMlZsSURFd2N5QnBibVpwYm1sMFpTQnNhVzVsWVhJN1hHNHZMeUI5WEc0aUxDSXVjSEpsYzNNdGJHbHpkR2x1WnlCN1hHNGdJSEJoWkdScGJtYzZJRGN3Y0hnZ01EdGNibHh1SUNBK0lHUnBkaUI3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZMjl1ZEdWdWRGZHBaSFJvTzF4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlWUmhZbXhsZEgwZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdVlYSjBhV05zWlhNZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjYmlBZ0lDQmhjblJwWTJ4bElIdGNiaUFnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFdU5HVnRPMXh1SUNBZ0lDQWdjM0JoYmlCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR0VnZTF4dUlDQWdJQ0FnWTI5c2IzSTZJQ1J3Y21sdFlYSjVPMXh1SUNBZ0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCb2IzWmxjaUI3WEc0Z0lDQWdJQ0FnSUhOd1lXNDZiR0Z6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCMWJtUmxjbXhwYm1VN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVMbTkxZEd4bGRDMW5jbWxrSUh0Y2JpQWdRRzFsWkdsaElDTjdKRzFsWkdsaFZHRmliR1YwZlNCN1hHNGdJQ0FnZDJsa2RHZzZJRGMxSlR0Y2JseHVJQ0FnSUc1aGRpQjdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djM1JwWTJ0NU8xeHVJQ0FnSUNBZ2RHOXdPaUFrYUdWaFpHVnlTR1ZwWjJoME8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lIVnNJSHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR1pzWlhndGQzSmhjRG9nZDNKaGNEdGNiaUFnSUNCdFlYSm5hVzQ2SUMweE1uQjRPMXh1SUNCOVhHNWNiaUFnYkdrZ2UxeHVJQ0FnSUdac1pYZzZJREFnTUNBMU1DVTdYRzRnSUNBZ2QybGtkR2c2SURVd0pUdGNiaUFnSUNCd1lXUmthVzVuT2lBeE1uQjRPMXh1WEc0Z0lDQWdRRzFsWkdsaElDTjdKRzFsWkdsaFZHRmliR1YwZlNCN1hHNGdJQ0FnSUNCbWJHVjRPaUF3SURBZ01qVWxPMXh1SUNBZ0lDQWdkMmxrZEdnNklESTFKVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JwYldjZ2UxeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUdobGFXZG9kRG9nWVhWMGJ6dGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2ZWeHVYRzRnSUhOd1lXNGdlMXh1SUNBZ0lFQnBibU5zZFdSbElITnlUMjVzZVR0Y2JpQWdmVnh1WEc0Z0lHRWdlMXh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1qVnpPMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ05FUkVSRVJFUTdYRzVjYmlBZ0lDQkFhVzVqYkhWa1pTQm9iM1psY2lCN1hHNGdJQ0FnSUNCdmNHRmphWFI1T2lBdU1qVTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdKaTUwWVhndFlYSmphR2wyWlNCN1hHNGdJQ0FnWVNCN1hHNGdJQ0FnSUNCdmNHRmphWFI1T2lBdU1qVTdYRzVjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdiM0JoWTJsMGVUb2dMamMxTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR3hwTG1GamRHbDJaU0JoSUh0Y2JpQWdJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpNWhjblJwWTJ4bGN5QjdYRzRnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVlJoWW14bGRIMGdlMXh1SUNBZ0lHWnNaWGc2SURBZ01DQXlNQ1U3WEc0Z0lDQWdkMmxrZEdnNklESXdKVHRjYmlBZ2ZWeHVmVnh1WEc0dWN5MXVaWGR6SUh0Y2JpQWdjR0ZrWkdsdVp6b2dOelZ3ZUNBd08xeHVmVnh1TG01bGQzTXRZMkZ5YjNWelpXd2dlMXh1SUNCaGNuUnBZMnhsSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFNGNIZzdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01YQjRPMXh1WEc0Z0lDQWdZU0I3WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKSEJ5YVcxaGNuazdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklESXdjSGc3WEc0Z0lDQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FrY0hKcGJXRnllVHRjYmlBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JseHVJQ0FnSUNBZ1FHbHVZMngxWkdVZ2FHOTJaWElnZTF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQnlaMkpoS0NSd2NtbHRZWEo1TEM0eUtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmlBZ0xtOTNiQzFwZEdWdElIdGNiaUFnSUNBbU9tNTBhQzFqYUdsc1pDZ3liaWtnZTF4dUlDQWdJQ0FnWVhKMGFXTnNaU0I3WEc0Z0lDQWdJQ0FnSUdFZ2UxeHVJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQWtkMmhwZEdVN1hHNGdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSkhCeWFXMWhjbms3WEc1Y2JpQWdJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQm9iM1psY2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKSEJ5YVcxaGNuazdYRzRnSUNBZ0lDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQnlaMkpoS0NSd2NtbHRZWEo1TEM0eUtUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdWIzZHNMWE4wWVdkbElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJ6ZEhKbGRHTm9PMXh1SUNCOVhHNWNiaUFnWVhKMGFXTnNaU3hjYmlBZ1lTQjdYRzRnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNCOVhHNWNiaUFnTG1SaGRHVWdlMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SUM0MVpXMDdYRzRnSUgxY2JuMWNiaUlzSWk1d1pXOXdiR1VnUGlCdFlXbHVJSHRjYmlBZ2NHRmtaR2x1WnpvZ056QndlQ0F3TzF4dWZWeHVMbkJsYjNCc1pTMW5jbWxrSUh0Y2JpQWdhRFFnZTF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lBa2FHVmhaR2x1WjBaR08xeHVJQ0I5WEc0Z0lENGdaR2wySUh0Y2JpQWdJQ0JBYVc1amJIVmtaU0JqYjI1MFpXNTBWMmxrZEdnN1hHNGdJSDFjYmx4dUlDQnBiV2NnZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dZWFYwYnp0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnZlZ4dVhHNGdJQzVuY21sa0xYUnBkR3hsSUh0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF3TzF4dUlDQjlYRzVjYmlBZ1lYSjBhV05zWlNCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJSEJoWkdScGJtYzZJRFp3ZUR0Y2JseHVJQ0FnSUdFZ2UxeHVJQ0FnSUNBZ1FHbHVZMngxWkdVZ2FHOTJaWElnZTF4dUlDQWdJQ0FnSUNBdVozSnBaQzEwYVhSc1pTQjdYRzRnSUNBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nTVR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0FtT21KbFptOXlaU0I3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERTFNWEI0TzF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lHSnZkSFJ2YlRvZ01EdGNiaUFnSUNBZ0lDQWdiR1ZtZERvZ01EdGNiaUFnSUNBZ0lDQWdlaTFwYm1SbGVEb2dNRHRjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nWENKY0lqdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nYkdsdVpXRnlMV2R5WVdScFpXNTBLREJrWldjc2NtZGlZU2drWW14aFkyc3NMak1wSURBbExDQnlaMkpoS0NSaWJHRmpheXd3S1NBeE1EQWxLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGVVlXSnNaWFI5SUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF6TXk0ek15VTdYRzRnSUNBZ0lDQm1iR1Y0T2lBd0lEQWdNek11TXpNbE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVVJsYzJ0MGIzQjlJSHRjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREV5Y0hnN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmpwdWRHZ3RZMmhwYkdRb00yNGdLeUF5S1NCN1hHNGdJQ0FnSUNCQWJXVmthV0VnSTNza2JXVmthV0ZVWVdKc1pYUjlJSHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMHpOWEI0S1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVVJsYzJ0MGIzQjlJSHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMDNNSEI0S1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUxuQmxiM0JzWlMxbmNtbGtMV2x1Ym1WeUlIdGNiaUFnY0dGa1pHbHVaem9nTmpod2VDQXdJRGN3Y0hnN1hHNGdJRzFoY21kcGJqb2dNQ0F0Tm5CNE8xeHVYRzRnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVlJoWW14bGRIMGdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHVJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWm14bGVDMXpkR0Z5ZER0Y2JpQWdmVnh1WEc0Z0lFQnRaV1JwWVNBamV5UnRaV1JwWVVSbGMydDBiM0I5SUh0Y2JpQWdJQ0J0WVhKbmFXNDZJREFnTmpCd2VEdGNiaUFnZlZ4dWZWeHVYRzR1Y0dWdmNHeGxMV0pwYnlCN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQnRhVzR0YUdWcFoyaDBPaUF4TURBbE8xeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lHeGxablE2SURFd01DVTdYRzRnSUhSdmNEb2dNRHRjYmlBZ2NHRmtaR2x1WnpvZ01USndlRHRjYmlBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmx4dUlDQndJSHRjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsTzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTWpGd2VEdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dLREkzSUM4Z01qRXBJQ29nTVdWdE8xeHVJQ0I5WEc1Y2JpQWdQaUJrYVhZZ2UxeHVJQ0FnSUcxcGJpMW9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSkhCeWFXMWhjbms3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNVGh3ZUR0Y2JpQWdmVnh1WEc0Z0lHSjFkSFJ2YmlCN1hHNGdJQ0FnZDJsa2RHZzZJREkxY0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUF5TlhCNE8xeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0IwYjNBNklESTFjSGdnS3lBeE1qdGNiaUFnSUNCeWFXZG9kRG9nTWpWd2VDQXJJREV5TzF4dVhHNGdJQ0FnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSkhkb2FYUmxPMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNBZ0lIUmxlSFF0YVc1a1pXNTBPaUF0T1RrNU9YQjRPMXh1SUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJQ0FnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1qVnpPMXh1WEc0Z0lDQWdKanBpWldadmNtVXNYRzRnSUNBZ0pqcGhablJsY2lCN1hHNGdJQ0FnSUNCM2FXUjBhRG9nTVRRd0pUdGNiaUFnSUNBZ0lHaGxhV2RvZERvZ01YQjRPMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdkRzl3T2lBMU1DVTdYRzRnSUNBZ0lDQnNaV1owT2lBMU1DVTdYRzRnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJbHdpTzF4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pIZG9hWFJsTzF4dUlDQWdJQ0FnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJQzR5TlhNN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmpwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtDMDFNQ1VwSUhKdmRHRjBaU2cwTldSbFp5azdYRzRnSUNBZ2ZWeHVJQ0FnSUNZNllXWjBaWElnZTF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtDMDFNQ1VwSUhKdmRHRjBaU2d0TkRWa1pXY3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lFQnBibU5zZFdSbElHaHZkbVZ5SUh0Y2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklISm5ZbUVvSkhkb2FYUmxMQzQ1S1R0Y2JpQWdJQ0FnSUdKdmNtUmxjaTFqYjJ4dmNqb2dKSEJ5YVcxaGNuazdYRzVjYmlBZ0lDQWdJQ1k2WW1WbWIzSmxMRnh1SUNBZ0lDQWdKanBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1J3Y21sdFlYSjVPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVYRzR1WW1sdkxYUnBkR3hsSUh0Y2JpQWdkMmxrZEdnNklHTmhiR01vTVRBd0pTQXRJRE0xY0hncE8xeHVJQ0J3SUh0Y2JpQWdJQ0FtT21acGNuTjBMV05vYVd4a0lIdGNiaUFnSUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNGdJQ0FnSUNCdFlYSm5hVzQ2SURBN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpNXdaVzl3YkdVdFozSnBaQ0JoY25ScFkyeGxJSHRjYmlBZ0pqcHVkR2d0WTJocGJHUW9NMjRwTEZ4dUlDQW1PbTUwYUMxamFHbHNaQ2d6YmlzeEtTQjdYRzRnSUNBZ0xuQmxiM0JzWlMxaWFXOGdlMXh1SUNBZ0lDQWdkRzl3T2lBdE56QndlRHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0FtT201MGFDMWphR2xzWkNnemJpc3lLU0I3WEc0Z0lDQWdMbkJsYjNCc1pTMWlhVzhnZTF4dUlDQWdJQ0FnZEc5d09pQTNNSEI0TzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUNZNmJuUm9MV05vYVd4a0tETnVLU0I3WEc0Z0lDQWdMbkJsYjNCc1pTMWlhVzhnZTF4dUlDQWdJQ0FnYkdWbWREb2dZWFYwYnp0Y2JpQWdJQ0FnSUhKcFoyaDBPaUF4TURBbE8xeHVJQ0FnSUgxY2JpQWdmVnh1SUNBbUxtOXdaVzRnZTF4dUlDQWdJSG90YVc1a1pYZzZJREV3TzF4dVhHNGdJQ0FnTG5CbGIzQnNaUzFpYVc4Z2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNiaUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVVZCUVRzN1IwRkZSenRCVjBaSUxFOUJRVThzUTBGQlF5eDFSMEZCU1R0QldFZGFMRUZCUVVFc1lVRkJZU3hEUVVGRE8wVkJRMklzVDBGQlR5eEZRVUZGTEVsQlFVazdSVUZEWWl4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxESkNRVUV5UWl4RlFVRkZMRmRCUVZjN1JVRkRlRU1zYjBWQlFXOUZPMFZCUTNCRkxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRTlCUVU4c1JVRkJSU3hEUVVGRE8wTkJLMGRXT3p0QlFYSklSQ3hCUVZGRExHRkJVbGtzUTBGUldpeFZRVUZWTEVOQlFVTTdSVUZEVml4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeG5Ra0ZCWjBJc1JVRkJSU3hMUVVGTE8wVkJRM1pDTEZsQlFWa3NSVUZCUlN4WlFVRlpPMFZCUXpGQ0xIZENRVUYzUWl4RlFVRkZMRTFCUVUwN1JVRkJSU3hyUTBGQmEwTTdRMEZEY0VVN08wRkJZa1lzUVVGbFF5eGhRV1paTEVOQlpWb3NWVUZCVlN4QlFVRkJMRTFCUVUwc1EwRkJRenRGUVVOb1FpeFBRVUZQTEVWQlFVVXNSMEZCUnp0RlFVTmFMRTlCUVU4c1JVRkJSU3hMUVVGTE8wVkJRMlFzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4VlFVRlZMRVZCUVVVc1RVRkJUVHRGUVVOc1FpeFhRVUZYTEVWQlFVVXNRMEZCUXp0RlFVTmtMRTFCUVUwc1JVRkJSU3hEUVVGRE8wTkJRMVE3TzBGQmRFSkdMRUZCZDBKRExHRkJlRUpaTEVOQmQwSmFMR2RDUVVGblFpeERRVUZETzBWQlEyaENMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEZGQlFWRXNSVUZCUlN4TlFVRk5PMFZCUTJoQ0xHbERRVUZwUXp0RlFVTnFReXhwUWtGQmFVSXNSVUZCUlN3d1FrRkJNRUk3UTBGRE4wTTdPMEZCTjBKR0xFRkJLMEpETEdGQkwwSlpMRU5CSzBKYUxGbEJRVms3UVVFdlFtSXNZVUZCWVN4RFFXZERXaXhUUVVGVExFTkJRVUU3UlVGRFVpd3lRa0ZCTWtJc1JVRkJSU3hOUVVGTk8wVkJRMjVETEhkQ1FVRjNRaXhGUVVGRkxFMUJRVTA3UlVGRGFFTXNkVUpCUVhWQ0xFVkJRVVVzVFVGQlRUdEZRVU12UWl4cFFrRkJhVUlzUlVGQlJTeHZRa0ZCYTBJN1JVRkRja01zWTBGQll5eEZRVUZGTEc5Q1FVRnJRanRGUVVOc1F5eGhRVUZoTEVWQlFVVXNiMEpCUVd0Q08wTkJRMnBET3p0QlFYWkRSaXhCUVhsRFF5eGhRWHBEV1N4RFFYbERXaXhUUVVGVExFTkJRVU03UlVGRFZDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhWUVVGVkxFVkJRVVVzUjBGQlJ6dEZRVU5tTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc01rSkJRVEpDTEVWQlFVVXNUVUZCVFR0RlFVTnVReXd5UWtGQk1rSXNSVUZCUlN4WFFVRlhPMFZCUTNoRExIRkNRVUZ4UWl4RlFVRkZMRWxCUVVrN1EwRkRNMEk3TzBGQmFFUkdMRUZCYVVSRExHRkJha1JaTEVOQmFVUmFMRk5CUVZNc1EwRkJReXhIUVVGSExFTkJRVU03UlVGRFlpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RlFVTmtMRXRCUVVzc1JVRkJSU3hKUVVGSk8wTkJRMWc3TzBGQmNFUkdMRUZCYzBSRExHRkJkRVJaTEVOQmMwUmFMRkZCUVZFc1FVRkJRU3hUUVVGVE8wRkJkRVJzUWl4aFFVRmhMRU5CZFVSYUxGTkJRVk1zUVVGQlFTeFRRVUZUTEVOQlFVTTdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFbEJRVWs3UTBGRFlqczdRVUY2UkVZc1FVRXlSRU1zWVVFelJGa3NRMEV5UkZvc1VVRkJVU3hEUVVGRExGTkJRVk03UVVFelJHNUNMR0ZCUVdFc1EwRTBSRm9zVVVGQlVTeERRVUZETEZOQlFWTTdRVUUxUkc1Q0xHRkJRV0VzUTBFMlJGb3NVVUZCVVN4RFFVRkRPMFZCUTFJc1RVRkJUU3hGUVVGRkxFOUJRVTg3UlVGRFppeHRRa0ZCYlVJc1JVRkJSU3hKUVVGSk8wVkJRM3BDTEd0Q1FVRnJRaXhGUVVGRkxFbEJRVWs3UlVGRGVFSXNaMEpCUVdkQ0xFVkJRVVVzU1VGQlNUdEZRVU4wUWl4bFFVRmxMRVZCUVVVc1NVRkJTVHRGUVVOeVFpeFhRVUZYTEVWQlFVVXNTVUZCU1R0RFFVTnFRanM3UVVGd1JVWXNRVUZ6UlVNc1lVRjBSVmtzUTBGelJWb3NVVUZCVVN4RFFVRkRMRTFCUVUwc1FVRkJRU3hUUVVGVE8wRkJkRVY2UWl4aFFVRmhMRU5CZFVWYUxGRkJRVkVzUTBGQlF5eE5RVUZOTEVGQlFVRXNVMEZCVXp0QlFYWkZla0lzWVVGQllTeERRWGRGV2l4TlFVRk5MRUZCUVVFc1VVRkJVU3hEUVVGRE8wVkJRMlFzVlVGQlZTeEZRVUZGTEVsQlFVazdSVUZEYUVJc1MwRkJTeXhGUVVGRkxFOUJRVTg3UlVGRFpDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRTlCUVU4c1JVRkJReXhEUVVGRExFTkJRVUVzVlVGQlZUdEZRVU51UWl4SlFVRkpMRVZCUVVVc1QwRkJUenREUVVOaU96dEJRVGxGUml4QlFXZEdReXhoUVdoR1dTeEJRV2RHV0N4WFFVRlhMRU5CUVVNN1JVRkRXaXhQUVVGUExFVkJRVVVzUzBGQlN6dERRVU5rT3p0QlFXeEdSaXhCUVc5R1F5eGhRWEJHV1N4QlFXOUdXQ3haUVVGWkxFTkJRVU03UlVGRFlpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRTlCUVU4c1JVRkJSU3hMUVVGTE8wTkJRMlE3TzBGQmRrWkdMRUZCZVVaRExHRkJla1paTEVGQmVVWllMRmRCUVZjc1EwRkJRenRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETzBOQlExWTdPMEZCTTBaR0xFRkJOa1pETEdGQk4wWlpMRUZCTmtaWUxGbEJRVmtzUTBGQlF5eFRRVUZUTEVOQlFVTTdSVUZEZGtJc1ZVRkJWU3hGUVVGRkxFMUJRVTA3UTBGRGJFSTdPMEZCTDBaR0xFRkJhVWRETEdGQmFrZFpMRUZCYVVkWUxGTkJRVk1zUTBGQlF5eFRRVUZUTEVOQlFVTTdSVUZEY0VJc1dVRkJXU3hGUVVGRkxFdEJRVXM3UlVGRGJrSXNiVUpCUVcxQ0xFVkJRVVVzU1VGQlNUdEZRVU42UWl4blFrRkJaMElzUlVGQlJTeEpRVUZKTzBWQlEzUkNMR1ZCUVdVc1JVRkJSU3hKUVVGSk8wVkJRM0pDTEZkQlFWY3NSVUZCUlN4SlFVRkpPME5CUTJwQ096dEJRWFpIUml4QlFYbEhReXhoUVhwSFdTeEJRWGxIV0N4VFFVRlRMRU5CUVVNN1JVRkRWaXhOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEUxQlFVMHNSVUZCUlN4SlFVRkpPME5CUTFvN08wRkJOVWRHTEVGQk9FZERMR0ZCT1VkWkxFRkJPRWRZTEZGQlFWRXNRMEZCUXp0RlFVTlVMRk5CUVZNc1JVRkJSU3hIUVVGSE8wTkJRMlE3TzBGQmFFaEdMRUZCYTBoRExHRkJiRWhaTEVGQmEwaFlMRkZCUVZFc1EwRkJReXhUUVVGVExFTkJRVU03UlVGRGJrSXNTMEZCU3l4RlFVRkZMRXRCUVVzN1EwRkRXanM3UVVGSFJpeFhRVUZYTzBGQlExZ3NRVUZCUVN4TlFVRk5MRU5CUVVNc1lVRkJZU3hEUVVGRE8wVkJRM0JDTEU5QlFVOHNSVUZCUlN4TFFVRkxPME5CUTJRN08wRkROMGhFT3p0SFFVVkhPMEZCUTBnc1FVRkRReXhoUVVSWkxFTkJRMW9zVTBGQlV5eERRVUZETzBWQlExUXNhMEpCUVd0Q0xFVkJRVVVzVFVGQlRUdEZRVU14UWl4dFFrRkJiVUlzUlVGQlJTeEpRVUZKTzBOQlEzcENPenRCUVVwR0xFRkJTME1zWVVGTVdTeERRVXRhTEdkQ1FVRm5RaXhEUVVGRE8wVkJRMmhDTEU5QlFVOHNSVUZCUlN4RFFVRkRPME5CUTFZN08wRkJVRVlzUVVGUlF5eGhRVkpaTEVOQlVWb3NhVUpCUVdsQ0xFTkJRVU03UlVGRGFrSXNUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRWanM3UVVGV1JpeEJRVmRETEdGQldGa3NRMEZYV2l4UlFVRlJMRU5CUVVNN1JVRkRVaXhqUVVGakxFVkJRVVVzVDBGQlR6dERRVU4yUWpzN1FVRkhSaXhWUVVGVkxFTkJRVllzVDBGQlZUdEZRVU5VTEVWQlFVVTdTVUZEUkN4UFFVRlBMRVZCUVVVc1EwRkJRenM3UlVGSFdDeEpRVUZKTzBsQlEwZ3NUMEZCVHl4RlFVRkZMRU5CUVVNN096czdRVU42UWxvN08wZEJSVWM3UVVGRlNDeEJRVUZCTEZkQlFWY3NRMEZCUXp0RlFVTllMRlZCUVZVc1JVRkJSU3gzUWtGQmQwSTdRMEZEY0VNN08wRkRUa1E3TzBkQlJVYzdRVWhEU0N4QlFYbERReXhoUVhwRFdTeERRWGxEV2l4VFFVRlRMRU5IZGtORE8wVkJUVlE3T3p0TFFVZEhPME5CVVVnN08wRkJiRUpHTEVGQlJVVXNZVUZHVnl4RFFVTmFMRk5CUVZNc1EwRkRVaXhUUVVGVExFTkJRVU03UlVGRFVpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRlZCUVZVc1JVRkJSU3hyUWtGQmEwSTdRMEZETDBJN08wRkJURWdzUVVGWFJTeGhRVmhYTEVOQlExb3NVMEZCVXl4RFFWVlNMRk5CUVZNc1EwRkJRU3hCUVVGQkxFZEJRVU1zUlVGQlN5eEZRVUZGTEVGQlFWQXNSMEZZV2l4aFFVRmhMRU5CUTFvc1UwRkJVeXhEUVZWWkxGTkJRVk1zUVVGQlFTeEpRVUZMTEVWQlFVRXNRVUZCUVN4SFFVRkRMRUZCUVVFc1IwRkJUVHRGUVVONFF5eFZRVUZWTEVWQlFVVXNRMEZCUXp0RFFVTmlPenRCUVdKSUxFRkJaVVVzWVVGbVZ5eERRVU5hTEZOQlFWTXNRMEZqVWl4SFFVRkhMRUZCUVVFc1UwRkJVeXhEUVVGRE8wVkJRMW9zWlVGQlpTeEZRVUZGTEZkQlFWYzdRMEZETlVJN08wRkRia0pJT3p0SFFVVkhPMEZCUlVnc1FVRkRReXhoUVVSWkxFTkJRMW9zYTBKQlFXdENMRU5CUVVNN1JVRkRiRUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFZRVUZWTEVWQlFVVXNTVUZCU1R0RFFVTm9RanM3UVVGTVJpeEJRVTlETEdGQlVGa3NRMEZQV2l4dlFrRkJiMElzUTBGQlF6dEZRVU53UWl4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzU1VGQlNTeEZRVUZGTEVkQlFVYzdSVUZEVkN4SFFVRkhMRVZCUVVVc1IwRkJSenRGUVVOU0xGZEJRVmNzUlVGQlJTeExRVUZMTzBWQlEyeENMRlZCUVZVc1JVRkJSU3hMUVVGTE8wVkJRMnBDTEZWQlFWVXNSVUZCUlN4NVFrRkJNa01zUTBGQlF5eFRRVUZUTzBWQlEycEZMRTFCUVUwc1JVRkJSU3hQUVVGUE8wVkJRMllzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZEVml3eVFrRkJNa0lzUlVGQlJTeE5RVUZOTzBWQlEyNURMRlZCUVZVc1JVRkJSU3h2UWtGQmIwSTdRMEZEYUVNN08wRkJjRUpHTEVGQmMwSkRMR0ZCZEVKWkxFTkJjMEphTEc5Q1FVRnZRaXhCUVVGQkxFMUJRVTBzUTBGQlF6dEZRVU14UWl4VFFVRlRMRVZCUVVVc1pVRkJaVHREUVVNeFFqczdRVUY0UWtZc1FVRXdRa01zWVVFeFFsa3NRMEV3UWxvc2EwSkJRV3RDTEVOQlFVTXNZVUZCWVR0QlFURkNha01zWVVGQllTeERRVEpDV2l4clFrRkJhMElzUTBGQlF5eHZRa0ZCYjBJc1EwRkJRenRGUVVOMlF5eFBRVUZQTEVWQlFVVXNTVUZCU1R0RFFVTmlPenRCUVRkQ1JpeEJRU3RDUXl4aFFTOUNXU3hEUVN0Q1dpeGhRVUZoTEVOQlFVTTdSVUZEWWl4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NiVUpCUVcxQ0xFVkJRVVVzWVVGQllUdEZRVU5zUXl4cFFrRkJhVUlzUlVGQlJTeFRRVUZUTzBWQlF6VkNMR1ZCUVdVc1JVRkJSU3hQUVVGUE8wVkJRM2hDTEZWQlFWVXNSVUZCUlN4clFrRkJhMEk3UTBGRE9VSTdPMEZCZEVOR0xFRkJkME5ETEdGQmVFTlpMRU5CZDBOYUxHZENRVUZuUWl4RFFVRkRPMFZCUTJoQ0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRTlCUVU4c1JVRkJSU3hEUVVGRE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4TFFVRkxMRVZCUVVVc1NVRkJTVHREUVVOWU96dEJSVzVFUmpzN1IwRkZSenRCUTBSSUxFRkJSVU1zVlVGR1V5eERRVVZVTEZGQlFWRXNRMEZCUXp0RlFVTlNMRlZCUVZVc1JVRkJSU3hKUVVGSk8wVkJRMmhDTEZWQlFWVXNSVUZCUlN4TlFVRk5PMFZCUTJ4Q0xESkNRVUV5UWl4RlFVRkZMRmRCUVZjN1EwRnpRbmhET3p0QlFUTkNSaXhCUVU5RkxGVkJVRkVzUTBGRlZDeFJRVUZSTEVWQlMxQXNRVUZCUVN4TFFVRkRMRVZCUVU4c1RVRkJUU3hCUVVGaUxFVkJRV1U3UlVGRFppeExRVUZMTEVWRVNsRXNTVUZCU1R0RlEwdHFRaXhUUVVGVExFVkVSVTBzU1VGQlNUdEZRMFJ1UWl4TlFVRk5MRVZFUjA4c1IwRkJSenRGUTBab1FpeFBRVUZQTEVWRVIwOHNSMEZCUnl4RFFVRkRMRWRCUVVjN1JVTkdja0lzVlVGQlZTeEZSRkJGTEU5QlFVODdSVU5SYmtJc1QwRkJUeXhGUVVGRkxGbEJRVms3UlVGRGNrSXNUVUZCVFN4RlFVRkZMRTlCUVU4N1JVRkRaaXhoUVVGaExFVkJRVVVzUjBGQlJ6dERRVTlzUWpzN1FVRjBRa2dzUVVGcFFrY3NWVUZxUWs4c1EwRkZWQ3hSUVVGUkxFVkJTMUFzUVVGQlFTeExRVUZETEVWQlFVOHNUVUZCVFN4QlFVRmlMRU5CVlVNc1RVRkJUU3hEUVVGRE8wVkJRMUFzVlVGQlZTeEZSR1pETEU5QlFVODdSVU5uUW14Q0xFdEJRVXNzUlVSbVR5eEpRVUZKTzBWRFowSm9RaXhsUVVGbExFVkJRVVVzU1VGQlNUdERRVU55UWpzN1FVRnlRa29zUVVGMVFrVXNWVUYyUWxFc1EwRkZWQ3hSUVVGUkxFTkJjVUpRTEZOQlFWTXNRMEZCUXp0RlFVTlVMRTlCUVU4c1JVUlFZeXhIUVVGSE8wVkRVWGhDTEUxQlFVMHNSVUZCUlN4UFFVRlBPME5CUTJZN08wRkJNVUpJTEVGQk9FSkRMRlZCT1VKVExFTkJPRUpVTEZGQlFWRXNRVUZCUVN4VFFVRlRMRWRCUVVjc1UwRkJVeXhEUVVGRE8wVkJRemRDTEZWQlFWVXNSVUZCUlN4SlFVRkpPME5CUTJoQ096dEJRV2hEUml4QlFXdERReXhWUVd4RFV5eERRV3REVkN4VFFVRlRMRU5CUVVNN1JVRkRWQ3hWUVVGVkxFVkJRVVVzVFVGQlRUdEZRVU5zUWl3eVFrRkJNa0lzUlVGQlJTeFhRVUZYTzBOQmVVSjRRenM3UVVFM1JFWXNRVUZ6UTBVc1ZVRjBRMUVzUTBGclExUXNVMEZCVXl4RFFVbFNMRkZCUVZFc1EwRkJRenRGUVVOU0xFOUJRVThzUlVGQlJTeFpRVUZaTzBWQlEzSkNMRWxCUVVrc1JVRkJSU3hEUVVGRE8wVkJRMUFzVVVGQlVTeEZRVUZGTEUxQlFVMDdRMEZ0UW1oQ096dEJRVFZFU0N4QlFUSkRSeXhWUVRORFR5eERRV3REVkN4VFFVRlRMRU5CU1ZJc1VVRkJVU3hEUVV0UUxFbEJRVWtzUTBGQlF6dEZRVU5LTEV0QlFVc3NSVVIyUWswc1NVRkJTVHRGUTNkQ1ppeE5RVUZOTEVWRWRrSkxMRWxCUVVrN1JVTjNRbVlzVFVGQlRTeEZSSFJDVFN4SFFVRkhMRU5CUVVNc1IwRkJSenRGUTNWQ2JrSXNWVUZCVlN4RlJERkRReXhQUVVGUE8wVkRNa05zUWl4UFFVRlBMRVZCUVVVc1MwRkJTenRGUVVOa0xESkNRVUV5UWl4RlFVRkZMRTlCUVU4N1JVRkRjRU1zVlVGQlZTeEZRVUZGTEd0Q1FVRnJRanRGUVVNNVFpeGhRVUZoTEVWRU5VSkVMRWxCUVVrN1EwTTJRbWhDT3p0QlFYQkVTaXhCUVhkRVNTeFZRWGhFVFN4RFFXdERWQ3hUUVVGVExFTkJTVklzVVVGQlVTeEJRV2RDVGl4UFFVRlBMRU5CUlZBc1NVRkJTU3hGUVhoRVVpeFZRVUZWTEVOQmEwTlVMRk5CUVZNc1EwRkpVaXhSUVVGUkxFRkJhVUpPTEUxQlFVMHNRMEZEVGl4SlFVRkpMRU5CUVVNN1JVRkRTaXhWUVVGVkxFVkVkRVJCTEU5QlFVODdRME4xUkdwQ096dEJSek5FVEN4QlFVRkJMRU5CUVVNc1EwRkJRenRGUVVOQkxFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVU5VTEZWQlFWVXNSVUZCUlN4VlFVRlZPME5CUTNaQ096dEJRVVZFTEVGQlFVRXNSVUZCUlR0QlFVTkdMRVZCUVVVc1EwRkJRenRGUVVORUxGVkJRVlVzUlVGQlJTeEpRVUZKTzBOQlEycENPenRCUVVWRUxFRkJRVUVzUTBGQlF5eERRVUZETzBWQlEwRXNWVUZCVlN4RlFVRkZMRkZCUVZFN1EwRkZja0k3TzBGQlJVUXNRVUZCUVN4UlFVRlJMRU5CUVVNN1JVUklVQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TFFVRkxMRVZCUVVVc1IwRkJSenRGUVVOV0xFMUJRVTBzUlVGQlJTeEhRVUZITzBWQlExZ3NUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEZGQlFWRXNSVUZCUlN4TlFVRk5PMFZCUTJoQ0xFbEJRVWtzUlVGQlJTeG5Ra0ZCWVR0RlFVTnVRaXhOUVVGTkxFVkJRVVVzUTBGQlF6dERRMFpXT3p0QlFVVkVMRUZCUVVFc1RVRkJUU3hEUVVGRE8wVkJRMHdzVjBGQlZ5eEZSa3BPTEVkQlFVYzdRMFZMVkRzN1FVRkZSQ3hCUVVGQkxFbEJRVWtzUTBGQlF6dEZRVU5JTEZkQlFWY3NSVVpZU2l4WFFVRlhMRVZCUVVVc1ZVRkJWVHREUlZrdlFqczdRVVV6UWtRc1FVRkhTeXhKUVVoRUxFRkJRMFFzVjBGQlZ5eEhRVVZRTEVsQlFVa3NSVUZJV0N4SlFVRkpMRUZCUlVRc1pVRkJaU3hIUVVOWUxFbEJRVWtzUTBGQlF6dEZRVU5NTEZkQlFWY3NSVUZCUlN4RFFVRkRPMFZCUTJRc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRXRHM3UVVGUVRpeEJRVk5MTEVsQlZFUXNRVUZEUkN4WFFVRlhMRU5CVVZRc1dVRkJXU3hGUVZScVFpeEpRVUZKTEVGQlJVUXNaVUZCWlN4RFFVOWlMRmxCUVZrc1EwRkJRenRGUVVOWUxGVkJRVlVzUlVGQlJTeFhRVUZYTzBOQmMwUjRRanM3UVVGb1JVNHNRVUZYVHl4SlFWaElMRUZCUTBRc1YwRkJWeXhEUVZGVUxGbEJRVmtzUjBGRlVpeEhRVUZITEVWQldGb3NTVUZCU1N4QlFVVkVMR1ZCUVdVc1EwRlBZaXhaUVVGWkxFZEJSVklzUjBGQlJ5eERRVUZETzBWQlEwb3NVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZEV0RzN1FVRmtVaXhCUVdWUExFbEJaa2dzUVVGRFJDeFhRVUZYTEVOQlVWUXNXVUZCV1N4QlFVMVVMRTlCUVU4c1JVRm1aaXhKUVVGSkxFRkJSVVFzWlVGQlpTeERRVTlpTEZsQlFWa3NRVUZOVkN4UFFVRlBMRU5CUVVNN1JVRkRVQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4TFFVRkxPMFZCUTJJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNSMEZCUnl4RlFVRkZMRU5CUVVNN1JVRkRUaXhKUVVGSkxFVkJRVVVzUTBGQlF6dEZRVU5RTEU5QlFVOHNSVUZCUlN4RFFVRkRPMFZCUTFZc1QwRkJUeXhGUVVGRkxFVkJRVVU3UlVGRFdDeFZRVUZWTEVWQlFVVXNiVVZCUVRaRU8wTkJRekZGT3p0QlFYaENVaXhCUVRCQ1R5eEpRVEZDU0N4QlFVTkVMRmRCUVZjc1EwRlJWQ3haUVVGWkxFTkJhVUpXTEVWQlFVVXNRMEZCUXl4RFFVRkRMRVZCTVVKWUxFbEJRVWtzUVVGRlJDeGxRVUZsTEVOQlQySXNXVUZCV1N4RFFXbENWaXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETzBWQlEwZ3NTMEZCU3l4RlNuSkNUaXhQUVVGUE8wTkpNRUpRT3p0QlFXaERVaXhCU0U5RkxFbEhVRVVzUVVGRFJDeFhRVUZYTEVOQlVWUXNXVUZCV1N4RFFXbENWaXhGUVVGRkxFTkJRVU1zUTBGQlF5eEJTRzVDVWl4TlFVRk5MRVZIVUZRc1NVRkJTU3hCUVVORUxGZEJRVmNzUTBGUlZDeFpRVUZaTEVOQmFVSldMRVZCUVVVc1EwRkJReXhEUVVGRExFRkliRUpTTEUxQlFVMHNSVWRTVkN4SlFVRkpMRUZCUlVRc1pVRkJaU3hEUVU5aUxGbEJRVmtzUTBGcFFsWXNSVUZCUlN4RFFVRkRMRU5CUVVNc1FVaHVRbElzVFVGQlRTeEZSMUJVTEVsQlFVa3NRVUZGUkN4bFFVRmxMRU5CVDJJc1dVRkJXU3hEUVdsQ1ZpeEZRVUZGTEVOQlFVTXNRMEZCUXl4QlNHeENVaXhOUVVGTkxFTkJRVU03UlVkelFrTXNTMEZCU3l4RlNuaENVaXgzUWtGQlR6dERRMGxhT3p0QlIzZENTU3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4UlFVRlJPMFZCYkVNM1F5eEJRVzFEVlN4SlFXNURUaXhCUVVORUxGZEJRVmNzUTBGUlZDeFpRVUZaTEVOQk1FSlFMRXRCUVVzc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eEZRVzVEY0VJc1NVRkJTU3hCUVVWRUxHVkJRV1VzUTBGUFlpeFpRVUZaTEVOQk1FSlFMRXRCUVVzc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETzBsQlExUXNTMEZCU3l4RlNqVkNVQ3hQUVVGUE8wZEphVU5PTzBWQmVrTllMRUZJVDBVc1NVZFFSU3hCUVVORUxGZEJRVmNzUTBGUlZDeFpRVUZaTEVOQk1FSlFMRXRCUVVzc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eEJTRFZDYWtJc1RVRkJUU3hGUjFCVUxFbEJRVWtzUVVGRFJDeFhRVUZYTEVOQlVWUXNXVUZCV1N4RFFUQkNVQ3hMUVVGTExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRVWd6UW1wQ0xFMUJRVTBzUlVkU1ZDeEpRVUZKTEVGQlJVUXNaVUZCWlN4RFFVOWlMRmxCUVZrc1EwRXdRbEFzUzBGQlN5eERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRUZJTlVKcVFpeE5RVUZOTEVWSFVGUXNTVUZCU1N4QlFVVkVMR1ZCUVdVc1EwRlBZaXhaUVVGWkxFTkJNRUpRTEV0QlFVc3NRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJReXhCU0ROQ2FrSXNUVUZCVFN4RFFVRkRPMGxISzBKSkxFdEJRVXNzUlVvdlFsUXNjVUpCUVU4N1IwTkZaRHM3TzBGSGEwTkpMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVUUxUXpORExFRkJOa05UTEVsQk4wTk1MRUZCUTBRc1YwRkJWeXhEUVZGVUxGbEJRVmtzUTBGdlExSXNRMEZCUXp0RlFUZERWaXhKUVVGSkxFRkJRMFFzVjBGQlZ5eERRVkZVTEZsQlFWa3NRMEZ4UTFJc1NVRkJTU3hGUVRsRFlpeEpRVUZKTEVGQlJVUXNaVUZCWlN4RFFVOWlMRmxCUVZrc1EwRnZRMUlzUTBGQlF6dEZRVGREVml4SlFVRkpMRUZCUlVRc1pVRkJaU3hEUVU5aUxGbEJRVmtzUTBGeFExSXNTVUZCU1N4RFFVRkRPMGxCUTBnc1MwRkJTeXhGU25wRFVpeFBRVUZQTzBkSk9FTk1PMFZCY0VSV0xFRklUMFVzU1VkUVJTeEJRVU5FTEZkQlFWY3NRMEZSVkN4WlFVRlpMRU5CYjBOU0xFTkJRVU1zUVVoMFExQXNUVUZCVFN4RlIxQlVMRWxCUVVrc1FVRkRSQ3hYUVVGWExFTkJVVlFzV1VGQldTeERRVzlEVWl4RFFVRkRMRUZJY2tOUUxFMUJRVTA3UlVkU1ZDeEpRVUZKTEVGQlEwUXNWMEZCVnl4RFFWRlVMRmxCUVZrc1EwRnhRMUlzU1VGQlNTeEJTSFpEVml4TlFVRk5PMFZIVUZRc1NVRkJTU3hCUVVORUxGZEJRVmNzUTBGUlZDeFpRVUZaTEVOQmNVTlNMRWxCUVVrc1FVaDBRMVlzVFVGQlRTeEZSMUpVTEVsQlFVa3NRVUZGUkN4bFFVRmxMRU5CVDJJc1dVRkJXU3hEUVc5RFVpeERRVUZETEVGSWRFTlFMRTFCUVUwc1JVZFFWQ3hKUVVGSkxFRkJSVVFzWlVGQlpTeERRVTlpTEZsQlFWa3NRMEZ2UTFJc1EwRkJReXhCU0hKRFVDeE5RVUZOTzBWSFVsUXNTVUZCU1N4QlFVVkVMR1ZCUVdVc1EwRlBZaXhaUVVGWkxFTkJjVU5TTEVsQlFVa3NRVWgyUTFZc1RVRkJUVHRGUjFCVUxFbEJRVWtzUVVGRlJDeGxRVUZsTEVOQlQySXNXVUZCV1N4RFFYRkRVaXhKUVVGSkxFRklkRU5XTEUxQlFVMHNRMEZCUXp0SlJ6QkRSeXhMUVVGTExFVktOVU5XTEhkQ1FVRlBPMGREU1ZvN096dEJSMVpJTEVGQmQwUlRMRWxCZUVSTUxFRkJRMFFzVjBGQlZ5eERRVkZVTEZsQlFWa3NRMEU0UTFZc1ZVRkJWU3hCUVVGQkxFbEJRVXNzUTBGQlFTeExRVUZMTEVWQlEyeENMRWxCUVVrc1JVRjRSR0lzU1VGQlNTeEJRVU5FTEZkQlFWY3NRMEZSVkN4WlFVRlpMRU5CT0VOV0xGVkJRVlVzUVVGQlFTeEpRVUZMTEVOQlFVRXNTMEZCU3l4RFFVVnFRaXhQUVVGUExFVkJla1JxUWl4SlFVRkpMRUZCUTBRc1YwRkJWeXhEUVZGVUxGbEJRVmtzUTBFNFExWXNWVUZCVlN4QlFVRkJMRWxCUVVzc1EwRkJRU3hMUVVGTExFTkJSMnBDTEUxQlFVMHNSVUV4UkdoQ0xFbEJRVWtzUVVGRlJDeGxRVUZsTEVOQlQySXNXVUZCV1N4RFFUaERWaXhWUVVGVkxFRkJRVUVzU1VGQlN5eERRVUZCTEV0QlFVc3NSVUZEYkVJc1NVRkJTU3hGUVhoRVlpeEpRVUZKTEVGQlJVUXNaVUZCWlN4RFFVOWlMRmxCUVZrc1EwRTRRMVlzVlVGQlZTeEJRVUZCTEVsQlFVc3NRMEZCUVN4TFFVRkxMRU5CUldwQ0xFOUJRVThzUlVGNlJHcENMRWxCUVVrc1FVRkZSQ3hsUVVGbExFTkJUMklzV1VGQldTeERRVGhEVml4VlFVRlZMRUZCUVVFc1NVRkJTeXhEUVVGQkxFdEJRVXNzUTBGSGFrSXNUVUZCVFN4RFFVRkRPMFZCUTA0c1ZVRkJWU3hGU25KRVlpeFBRVUZQTzBOSmMwUk1PenRCUVRWRVZpeEJRVzlGVFN4SlFYQkZSaXhCUVcxRlFTeFhRVUZYTEVkQlExQXNTVUZCU1N4SFFVRkhMRTlCUVU4c1IwRkJSeXhIUVVGSExFTkJRVU03UlVGRGNrSXNUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRXRHM3UVVWMFJWQXNRVUZCUVN4RlFVRkZMRVZCUVVNc1IwRkJSeXhEUVVGRE8wVkJRMHdzVjBGQlZ5eEZUbU5LTEZkQlFWY3NSVUZCUlN4VlFVRlZPMFZOWWpsQ0xGZEJRVmNzUlU1alVpeEhRVUZITzBWTllrNHNZMEZCWXl4RlFVRkZMRk5CUVZNN1JVRkRla0lzVTBGQlV5eEZRVUZGTEVsQlFVazdRMEZEYUVJN08wRkJSVVFzUVVGQlFTeEZRVUZGTEVWQlFVTXNSMEZCUnl4RFFVRkRPMFZCUTB3c1YwRkJWeXhGVGsxRUxHVkJRV1VzUlVGQlJTeFBRVUZQTzBWTlRHeERMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzWTBGQll5eEZRVUZGTEZOQlFWTTdSVUZEZWtJc1YwRkJWeXhGUVVGRkxGTkJRV1U3UlVGRE5VSXNWMEZCVnl4RlRrMU9MRWRCUVVjN1EwMU1WRHM3UVVGRFJDeEJRVUZCTEVWQlFVVXNSVUZCUXl4SFFVRkhMRU5CUVVNN1JVRkRUQ3hYUVVGWExFVk9SRVFzWlVGQlpTeEZRVUZGTEU5QlFVODdSVTFGYkVNc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeGpRVUZqTEVWQlFVVXNVMEZCVXp0RlFVTjZRaXhYUVVGWExFVkJRVVVzVTBGQlpUdEZRVU0xUWl4WFFVRlhMRVZPUkU0c1IwRkJSenREVFVWVU96dEJRVU5FTEVGQlFVRXNSVUZCUlN4RlFVRkRMRWRCUVVjc1EwRkJRenRGUVVOTUxGZEJRVmNzUlU1U1JDeGxRVUZsTEVWQlFVVXNUMEZCVHp0RlRWTnNReXhUUVVGVExFVkJRVVVzU1VGQlNUdERRVU5vUWpzN1FVUjBRa1FzUVVGQlFTeERRVUZETEVOQlFVTTdSVUZGUVN4VFFVRlRMRVZCUVVVc1NVRkJTVHRGUVVObUxGZEJRVmNzUlVGQlJTeFRRVUZsTzBWQlF6VkNMR0ZCUVdFc1JVRkJSU3hIUVVGSE8wTkJRMjVDT3p0QlJWQkVMRUZCUVVFc1dVRkJXU3hEUVVGRE8wVkJRMWdzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZRTkVKUExFbEJRVWs3UlU4elFtcENMRkZCUVZFc1JVRkJSU3hMUVVGTE8wVkJRMllzUjBGQlJ5eEZRVUZGTEVOQlFVTTdSVUZEVGl4SlFVRkpMRVZCUVVVc1EwRkJRenRGUVVOUUxFOUJRVThzUlVGQlJTeEZRVUZGTzBWQlExZ3NWVUZCVlN4RlVFUktMSGxDUVVGUE8wTlBOa1prT3p0QlFURkdReXhCUVVGQkxGTkJRVk1zUTBGVVdDeFpRVUZaTEVOQlUwVTdSVUZEVml4SFFVRkhMRVZCUVVVc1NVRkJTVHREUVVOV096dEJRVmhJTEVGQllVVXNXVUZpVlN4RFFXRldMRVZCUVVVc1EwRkJRenRGUVVORUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRTlCUVU4c1JVRkJSU3hGUVVGRk8wTkJRMW83TzBGQmFFSklMRUZCYTBKRkxGbEJiRUpWTEVkQmEwSlNMRWRCUVVjc1EwRkJRenRGVG1wQ1RpeFRRVUZUTEVWRVFVd3NUVUZCVFR0RlEwTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVDBGQlR5eEZRVUZGTEVOQlFVTXNRMFJFU0N4SlFVRkpPMFZQYlVKVUxFOUJRVThzUlVGQlJTeEpRVUZKTzBWQlEySXNWMEZCVnl4RlFVRkZMRTFCUVUwN1JVRkRia0lzWlVGQlpTeEZRVUZGTEdGQlFXRTdSVUZET1VJc1YwRkJWeXhGUVVGRkxFbEJRVWs3UTBGSmJFSTdPMEZCU0VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFYcENka01zUVVGclFrVXNXVUZzUWxVc1IwRnJRbElzUjBGQlJ5eERRVUZETzBsQlVVWXNWMEZCVnl4RlFVRkZMRkZCUVZFN1IwRkZlRUk3T3p0QlFVVkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVUU1UW5oRExFRkJOa0pGTEZsQk4wSlZMRU5CTmtKV0xFMUJRVTBzUTBGQlF6dEpRVVZJTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGRCUldoQ096czdRVUZxUTBnc1FVRnRRMFVzV1VGdVExVXNRMEZ0UTFZc1ZVRkJWU3hEUVVGRE8wVkJRMVFzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMR2RDUVVGblFpeEZRVUZGTEZkQlFWYzdSVUZETjBJc1QwRkJUeXhGUVVGRkxFVkJRVVU3UTBFMFExbzdPMEZCY0VaSUxFRkJPRU5KTEZsQk9VTlJMRU5CYlVOV0xGVkJRVlVzUVVGWFVDeFBRVUZQTEVWQk9VTmFMRmxCUVZrc1EwRnRRMVlzVlVGQlZTeEJRVmxRTEUxQlFVMDdRVUV2UTFnc1dVRkJXU3hEUVcxRFZpeFZRVUZWTEVOQllWSXNTVUZCU1N4RFFVRkRPMFZCUTBnc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNSMEZCUnp0RlFVTllMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVkQlFVY3NSVUZCUlN4SlFVRkpPMFZCUTFRc1NVRkJTU3hGUVVGRkxFZEJRVWM3UlVGRFZDeFBRVUZQTEVWQlFVVXNSVUZCUlR0RlFVTllMRlZCUVZVc1JWQXZRMDRzVDBGQlR6dEZUMmRFV0N4VlFVRlZMRVZCUVVVc1VVRkJVVHRGUVVOd1FpeFhRVUZYTEVWQlFVVXNVMEZCVXp0RFFVTjJRanM3UVVFeFJFd3NRVUUwUkVrc1dVRTFSRkVzUTBGdFExWXNWVUZCVlN4QlFYbENVQ3hQUVVGUExFTkJRVU03UlVGRFVDeFRRVUZUTEVWQlFVVXNaMEpCUVdkQ08wTkJRelZDT3p0QlFUbEVUQ3hCUVN0RVNTeFpRUzlFVVN4RFFXMURWaXhWUVVGVkxFRkJORUpRTEUxQlFVMHNRMEZCUXp0RlFVTk9MRk5CUVZNc1JVRkJSU3hsUVVGbE8wTkJRek5DT3p0QlFXcEZUQ3hCUVc5RlRTeFpRWEJGVFN4RFFXMURWaXhWUVVGVkxFRkJaME5RTEV0QlFVc3NRVUZEU0N4UFFVRlBMRU5CUVVNN1JVRkRVQ3hUUVVGVExFVkJRVVVzWVVGQllUdERRVU42UWpzN1FVRjBSVkFzUVVGMVJVMHNXVUYyUlUwc1EwRnRRMVlzVlVGQlZTeEJRV2REVUN4TFFVRkxMRUZCU1Vnc1RVRkJUU3hEUVVGRE8wVkJRMDRzVTBGQlV5eEZRVUZGTEdOQlFXTTdRMEZETVVJN08wRkJla1ZRTEVGQk1FVk5MRmxCTVVWTkxFTkJiVU5XTEZWQlFWVXNRVUZuUTFBc1MwRkJTeXhEUVU5S0xFbEJRVWtzUTBGQlF6dEZRVU5JTEU5QlFVOHNSVUZCUlN4RFFVRkRPME5CUTFnN08wRkJSVVFzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1VVRkJVVHRGUVRsRk5VTXNRVUVyUlZFc1dVRXZSVWtzUTBGdFExWXNWVUZCVlN4QlFXZERVQ3hMUVVGTExFZEJXVUVzUjBGQlJ5eERRVUZETzBsQlEwb3NVMEZCVXl4RlFVRkZMR2RDUVVGblFqdEhRVU0xUWpzN08wRkJha1pVTEVGQmVVWkZMRmxCZWtaVkxFTkJlVVpXTEVOQlFVTXNRMEZCUXp0RlFVTkJMRXRCUVVzc1JWQnNSa01zVDBGQlR6dEZUMjFHWWl4bFFVRmxMRVZCUVVVc1NVRkJTVHREUVV0MFFqczdRVUZvUjBnc1FVNVBSU3haVFZCVkxFTkJlVVpXTEVOQlFVTXNRVTVzUmtFc1RVRkJUU3hGVFZCVUxGbEJRVmtzUTBGNVJsWXNRMEZCUXl4QlRtcEdRU3hOUVVGTkxFTkJRVU03UlUxelJrb3NTMEZCU3l4RlVISkdReXhQUVVGUE8wTkRRMmhDT3p0QlRWWklMRUZEUVVFc1dVUkJXU3hEUTBGYUxFZEJRVWNzUTBGQlF6dEZRVU5HTEZkQlFWY3NSVkpoUkN4bFFVRmxMRVZCUVVVc1QwRkJUenRGVVZwc1F5eFRRVUZUTEVWQlFVVXNTVUZCU1R0RlFVTm1MRkZCUVZFc1JVRkJSU3hSUVVGUk8wTkJkVXB1UWpzN1FVUXhTa1FzUVVOTFJTeFpSRXhWTEVORFFWb3NSMEZCUnl4RFFVdEVMRU5CUVVNc1EwRkJRenRGUVVOQkxFdEJRVXNzUlZKRlF5eFBRVUZQTzBWUlJHSXNaVUZCWlN4RlFVRkZMRWxCUVVrN1EwRlZkRUk3TzBGRWFrSklMRUZPVDBVc1dVMVFWU3hEUTBGYUxFZEJRVWNzUTBGTFJDeERRVUZETEVGUVJVRXNUVUZCVFN4RlRWQlVMRmxCUVZrc1EwTkJXaXhIUVVGSExFTkJTMFFzUTBGQlF5eEJVRWRCTEUxQlFVMHNRMEZCUXp0RlQwVktMRXRCUVVzc1JWSkVReXhQUVVGUE8wTkRRMmhDT3p0QlQwbERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVVJrZUVNc1FVTkxSU3haUkV4VkxFTkRRVm9zUjBGQlJ5eERRVXRFTEVOQlFVTXNRMEZCUXp0SlFWVkZMRTlCUVU4c1JVRkJSU3hOUVVGTk8wZEJSV3hDT3pzN1FVRkRSQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZFYkVKMFF5eEJRMEZCTEZsRVFWa3NRME5CV2l4SFFVRkhMRU5CUVVNN1NVRnRRa0VzVFVGQlRTeEZRVUZGTEU5QlFVODdSMEYxU1d4Q096czdRVUZ3U1VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNVVUZCVVR0RlJIUkNlRU1zUVVOQlFTeFpSRUZaTEVORFFWb3NSMEZCUnl4RFFVRkRPMGxCZFVKQkxGRkJRVkVzUlVGQlJTeExRVUZMTzBsQlEyWXNSMEZCUnl4RlFVRkZMRU5CUVVNN1NVRkRUaXhKUVVGSkxFVkJRVVVzU1VGQlNUdEpRVU5XTEU5QlFVOHNSVUZCUlN4RlFVRkZPMGxCUTFnc1MwRkJTeXhGUVVGRkxFdEJRVXM3U1VGRFdpeE5RVUZOTEVWQlFVVXNTMEZCU3p0SlFVTmlMRlZCUVZVc1JWSjJRazRzVDBGQlR6dEpVWGRDV0N4UFFVRlBMRVZCUVVVc1UwRkJVenRKUVVOc1FpeFRRVUZUTEVWQlFVVXNTVUZCU1R0SlFVTm1MRlZCUVZVc1JVRkJSU3hSUVVGUk8wZEJNRWgyUWp0RlJERktSQ3hCUTJ0RFNTeFpSR3hEVVN4RFEwRmFMRWRCUVVjc1IwRnJRMGNzUjBGQlJ5eERRVUZETzBsQlEwb3NUVUZCVFN4RlFVRkZMRWxCUVVrN1NVRkRXaXhSUVVGUkxFVkJRVVVzU1VGQlNUdEhRVU5tTzBWRWNrTk1MRUZEZFVOSkxGbEVka05STEVORFFWb3NSMEZCUnl4RFFYVkRReXhUUVVGVExFTkJRVU03U1VGRFVpeFBRVUZQTEVWQlFVVXNTVUZCU1R0SlFVTmlMRXRCUVVzc1JVRkJSU3hKUVVGSk8wbEJRMWdzVTBGQlV5eEZRVUZGTEVsQlFVazdSMEZQYUVJN1JVUnFSRXdzUVVNMFEwMHNXVVExUTAwc1EwTkJXaXhIUVVGSExFTkJkVU5ETEZOQlFWTXNRMEZMVUN4RFFVRkRPMFZFTlVOUUxGbEJRVmtzUTBOQldpeEhRVUZITEVOQmRVTkRMRk5CUVZNc1EwRk5VQ3hKUVVGSkxFTkJRVU03U1VGRFNDeFBRVUZQTEVWQlFVVXNTMEZCU3p0SlFVTmtMRTlCUVU4c1JVRkJSU3hSUVVGUk8wZEJRMnhDTzBWRWFFUlFMRUZEYjBSTkxGbEVjRVJOTEVORFFWb3NSMEZCUnl4RFFXMUVReXhMUVVGTExFZEJRMFFzUlVGQlJTeERRVUZETzBsQlEwZ3NUMEZCVHl4RlFVRkZMRWxCUVVrN1NVRkRZaXhsUVVGbExFVkJRVVVzWVVGQllUdEpRVU01UWl4VFFVRlRMRVZCUVVVc1NVRkJTVHRKUVVObUxFMUJRVTBzUlVGQlJTeE5RVUZOTzBkQk5rTm1PMFZFY2tkUUxFRkRNRVJSTEZsRU1VUkpMRU5EUVZvc1IwRkJSeXhEUVcxRVF5eExRVUZMTEVkQlEwUXNSVUZCUlN4SFFVMUJMRU5CUVVNc1EwRkJRenRKUVVOR0xGTkJRVk1zUlVGQlJTeERRVUZETzBkQlEySTdSVVExUkZRc1FVTTRSRkVzV1VRNVJFa3NRME5CV2l4SFFVRkhMRU5CYlVSRExFdEJRVXNzUjBGRFJDeEZRVUZGTEVkQlZVRXNUVUZCVFN4RFFVRkRPMGxCUTFBc1MwRkJTeXhGUVVGRkxFbEJRVWs3U1VGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0SlFVTmFMRkZCUVZFc1JVRkJSU3hSUVVGUk8wbEJRMnhDTEdkQ1FVRm5RaXhGUVVGRkxGZEJRVmM3U1VGRE4wSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1IwRnhRbFk3UlVSNFJsUXNRVU54UlZVc1dVUnlSVVVzUTBOQldpeEhRVUZITEVOQmJVUkRMRXRCUVVzc1IwRkRSQ3hGUVVGRkxFZEJWVUVzVFVGQlRTeEJRVTlNTEU5QlFVOHNSVVJ5Uld4Q0xGbEJRVmtzUTBOQldpeEhRVUZITEVOQmJVUkRMRXRCUVVzc1IwRkRSQ3hGUVVGRkxFZEJWVUVzVFVGQlRTeEJRVkZNTEUxQlFVMHNRMEZCUXp0SlFVTk9MRXRCUVVzc1JVRkJSU3hKUVVGSk8wbEJRMWdzVFVGQlRTeEZRVUZGTEVkQlFVYzdTVUZEV0N4UlFVRlJMRVZCUVVVc1VVRkJVVHRKUVVOc1FpeEhRVUZITEVWQlFVVXNTVUZCU1R0SlFVTlVMRWxCUVVrc1JVRkJSU3hIUVVGSE8wbEJRMVFzVDBGQlR5eEZRVUZGTEVWQlFVVTdTVUZEV0N4VlFVRlZMRVZTY2tWYUxFOUJRVTg3U1ZGelJVd3NWVUZCVlN4RlFVRkZMRkZCUVZFN1IwRkRja0k3UlVRdlJWZ3NRVU5wUmxVc1dVUnFSa1VzUTBOQldpeEhRVUZITEVOQmJVUkRMRXRCUVVzc1IwRkRSQ3hGUVVGRkxFZEJWVUVzVFVGQlRTeEJRVzFDVEN4TlFVRk5MRU5CUVVNN1NVRkRUaXhUUVVGVExFVkJRVVVzWVVGQllUdEhRVU42UWp0RlJHNUdXQ3hCUTNGR1ZTeFpSSEpHUlN4RFEwRmFMRWRCUVVjc1EwRnRSRU1zUzBGQlN5eEhRVU5FTEVWQlFVVXNSMEZWUVN4TlFVRk5MRU5CZFVKT0xFbEJRVWtzUTBGQlF6dEpVSFpGWWl4UlFVRlJMRVZCUVVVc1VVRkJVVHRKUVVOc1FpeExRVUZMTEVWQlFVVXNSMEZCUnp0SlFVTldMRTFCUVUwc1JVRkJSU3hIUVVGSE8wbEJRMWdzVDBGQlR5eEZRVUZGTEVOQlFVTTdTVUZEVml4TlFVRk5MRVZCUVVVc1NVRkJTVHRKUVVOYUxGRkJRVkVzUlVGQlJTeE5RVUZOTzBsQlEyaENMRWxCUVVrc1JVRkJSU3huUWtGQllUdEpRVU51UWl4TlFVRk5MRVZCUVVVc1EwRkJRenRIVDJ0RlFUdEZSSFpHV0N4QlF6UkdXU3haUkRWR1FTeERRMEZhTEVkQlFVY3NRMEZ0UkVNc1MwRkJTeXhIUVVORUxFVkJRVVVzUVVGelEwUXNhMEpCUVd0Q0xFZEJRMllzVFVGQlRTeEJRVU5NTEUxQlFVMHNRMEZCUXp0SlFVTk9MRk5CUVZNc1JVRkJSU3haUVVGWk8wZEJRM2hDTzBWRU9VWmlMRUZEYVVkVkxGbEVha2RGTEVORFFWb3NSMEZCUnl4RFFXMUVReXhMUVVGTExFZEJRMFFzUlVGQlJTeEJRWE5EUkN4clFrRkJhMElzUTBGUGFrSXNVMEZCVXl4RFFVRkRPMGxCUTFJc1QwRkJUeXhGUVVGRkxFdEJRVXM3UjBGRFpqczdPMEZCVDFBc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlJERkhlRU1zUVVONVIwVXNXVVI2UjFVc1EwTkJXaXhIUVVGSExFTkJlVWRFTEVWQlFVVXNRVUZCUVN4TFFVRkxMRU5CUVVNN1NVRkZTaXhQUVVGUExFVkJRVVVzU1VGQlNUdEpRVU5pTEdWQlFXVXNSVUZCUlN4UlFVRlJPMGRCTkVJMVFqczdPMEZFZUVsSUxFRkRaMGhOTEZsRWFFaE5MRU5EUVZvc1IwRkJSeXhEUVhsSFJDeEZRVUZGTEVGQlFVRXNTMEZCU3l4SFFVMUlMRVZCUVVVc1IwRkRRU3hEUVVGRExFTkJRVU03UlVGRFJpeGpRVUZqTEVWQlFVVXNVMEZCVXp0RlFVTjZRaXhqUVVGakxFVkJRVVVzVFVGQlRUdERRVU4yUWpzN1FVRkZSQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZFY2tneFF5eEJRM2xJVlN4WlJIcElSU3hEUTBGYUxFZEJRVWNzUTBGNVIwUXNSVUZCUlN4QlFVRkJMRXRCUVVzc1IwRk5TQ3hGUVVGRkxFRkJUME1zVFVGQlRTeERRVWRNTEZOQlFWTXNSVVI2U0c1Q0xGbEJRVmtzUTBOQldpeEhRVUZITEVOQmVVZEVMRVZCUVVVc1FVRkJRU3hMUVVGTExFZEJUVWdzUlVGQlJTeEJRVkZETEd0Q1FVRnJRaXhEUVVWcVFpeFRRVUZUTEVWRWVraHVRaXhaUVVGWkxFTkRRVm9zUjBGQlJ5eERRWGxIUkN4RlFVRkZMRUZCUVVFc1MwRkJTeXhIUVUxSUxFVkJRVVVzUVVGVFF5eHpRa0ZCYzBJc1EwRkRja0lzVTBGQlV5eERRVUZETzBsQlExSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1IwRkRaRHM3TzBGRU0waFlMRUZEYlVsUkxGbEVia2xKTEVORFFWb3NSMEZCUnl4RFFYbEhSQ3hGUVVGRkxFRkJRVUVzUzBGQlN5eERRWFZDVEN4RlFVRkZMRUZCUTBNc2EwSkJRV3RDTEVkQlJXWXNRMEZCUXl4RlJHNUpXQ3haUVVGWkxFTkRRVm9zUjBGQlJ5eERRWGxIUkN4RlFVRkZMRUZCUVVFc1MwRkJTeXhEUVhWQ1RDeEZRVUZGTEVGQlJVTXNjMEpCUVhOQ0xFZEJRMjVDTEVOQlFVTXNRMEZCUXp0RlFVTkdMRmRCUVZjc1JVRkJSU3hIUVVGSE8wTkJRMnBDT3p0QlFVMU1MRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVVF6U1hoRExFRkRkVU5KTEZsRWRrTlJMRU5EUVZvc1IwRkJSeXhEUVhWRFF5eFRRVUZUTEVOQmJVZEVPMGxCUlU0c1QwRkJUeXhGUVVGRkxFbEJRVWs3U1VGRFlpeGxRVUZsTEVWQlFVVXNVVUZCVVR0SlFVTjZRaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEpRVU5zUWl4SFFVRkhMRVZCUVVVc1NVRkJTVHRKUVVOVUxFdEJRVXNzUlVGQlJTeERRVUZETzBsQlExSXNVMEZCVXl4RlFVRkZMRWxCUVVrN1IwRlJiRUk3UlVSNlNrZ3NRVU0wUTAwc1dVUTFRMDBzUTBOQldpeEhRVUZITEVOQmRVTkRMRk5CUVZNc1EwRkxVQ3hEUVVGRE8wVkVOVU5RTEZsQlFWa3NRME5CV2l4SFFVRkhMRU5CZFVORExGTkJRVk1zUTBGTlVDeEpRVUZKTEVOQmRVZERPMGxCUTBnc1QwRkJUeXhGUVVGRkxGZEJRVmM3U1VGRGNFSXNUMEZCVHl4RlFVRkZMRXRCUVVzN1IwRkRaanM3TzBGRGRrcFFMRUZCUVVFc1dVRkJXU3hEUVVGRE8wVkJRMWdzVDBGQlR5eEZWRU5CTEVsQlFVa3NRMU5FVFN4RFFVRkRPME5CYTBSdVFqczdRVUZ1UkVRc1FVRkhSU3haUVVoVkxFTkJSMVlzUTBGQlF5eERRVUZETzBWQlEwRXNTMEZCU3l4RlZFbERMRTlCUVU4N1JWTklZaXhsUVVGbExFVkJRVVVzU1VGQlNUdERRVWwwUWpzN1FVRlVTQ3hCVWs5RkxGbFJVRlVzUTBGSFZpeERRVUZETEVGU1NVRXNUVUZCVFN4RlVWQlVMRmxCUVZrc1EwRkhWaXhEUVVGRExFRlNTMEVzVFVGQlRTeERRVUZETzBWUlJFb3NaVUZCWlN4RlFVRkZMRk5CUVZNN1ExSkhOMEk3TzBGUlZrZ3NRVUZWUlN4WlFWWlZMRWRCVlZJc1IwRkJSeXhEUVVGRE8wVlNWRTRzVTBGQlV5eEZSRUZNTEUxQlFVMDdSVU5EVml4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETEVORVJFZ3NTVUZCU1R0RlUxVlVMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzWlVGQlpTeEZRVUZGTEdGQlFXRTdRMEZETDBJN08wRkJaRWdzUVVGblFrVXNXVUZvUWxVc1EwRm5RbFlzVVVGQlVTeERRVUZETzBWQlExQXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhWUVVGVkxFVkJRVVVzVFVGQlRUdEZRVU5zUWl4VFFVRlRMRVZCUVVVc1NVRkJTVHRGUVVObUxHTkJRV01zUlVGQlJTeFRRVUZUTzBWQlEzcENMR05CUVdNc1JVRkJSU3hOUVVGTk8wVkJRM1JDTEV0QlFVc3NSVlJrUXl4UFFVRlBPME5UYjBKa096dEJRVFZDU0N4QlFYZENTU3haUVhoQ1VTeERRV2RDVml4UlFVRlJMRU5CVVU0c1EwRkJReXhEUVVGRE8wVkJRMEVzVFVGQlRTeEZRVUZGTEVOQlFVTTdSVUZEVkN4VFFVRlRMRVZCUVVVc1NVRkJTVHREUVVOb1FqczdRVUV6UWt3c1FVRnJRMFVzV1VGc1ExVXNRMEZyUTFZc1QwRkJUeXhEUVVGRE8wVkJRMDRzVDBGQlR5eEZRVUZGTEVsQlFVazdRMEZsWkRzN1FVRnNSRWdzUVVGdlEwa3NXVUZ3UTFFc1EwRnJRMVlzVDBGQlR5eERRVVZNTEVOQlFVTXNRMEZCUXp0RlFVTkJMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4WFFVRlhMRVZCUVVVc1NVRkJTVHREUVZWc1FqczdRVUZxUkV3c1FVRjVRMDBzV1VGNlEwMHNRMEZyUTFZc1QwRkJUeXhEUVVWTUxFTkJRVU1zUTBGTFF5eEhRVUZITEVOQlFVTTdSVUZEUml4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBOQlEySTdPMEZCTlVOUUxFRkJPRU5OTEZsQk9VTk5MRU5CYTBOV0xFOUJRVThzUTBGRlRDeERRVUZETEVOQlZVTXNTVUZCU1N4RFFVRkRPMFZTYUVOVUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVkQlFVYzdSVUZEV0N4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzU1VGQlNTeEZRVUZGTEdkQ1FVRmhPMFZCUTI1Q0xFMUJRVTBzUlVGQlJTeERRVUZETzBOUk1rSktPenRCUVV0UUxFRkJRMFVzV1VGRVZTeERRVU5XTEVkQlFVY3NRMEZCUXp0RlFVTkdMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4SlFVRkpMRVZVT1VOSExFOUJRVTg3UlZNclEyUXNUMEZCVHl4RlFVRkZMRXRCUVVzN1EwRkRaanM3UVVNelJFZ3NRVUZEUlN4SlFVUkZMRWRCUTBFc1NVRkJTU3hEUVVGRE8wVkJRMHdzVDBGQlR5eEZRVUZGTEUxQlFVMDdRMEZqYUVJN08wRkJhRUpJTEVGQlIwa3NTVUZJUVN4SFFVTkJMRWxCUVVrc1IwRkZSaXhQUVVGUExFTkJRVU03UlVGTFVpeExRVUZMTEVWV1FVUXNUMEZCVHp0RFZVOWFPenRCUVdaTUxFRkJTVTBzU1VGS1JpeEhRVU5CTEVsQlFVa3NSMEZGUml4UFFVRlBMRWRCUTB3c1IwRkJSeXhEUVVGRE8wVlVTRllzVTBGQlV5eEZSRUZNTEUxQlFVMDdSVU5EVml4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETEVORVJFZ3NTVUZCU1R0RFZVbE9PenRCUVU1UUxFRkJWVTBzU1VGV1JpeEhRVU5CTEVsQlFVa3NSMEZGUml4UFFVRlBMRUZCVDA0c1YwRkJWeXhEUVVGRE8wVkJRMWdzVlVGQlZTeEZWa2hTTEU5QlFVODdSVlZKVkN4TFFVRkxMRVZXVGt3c1QwRkJUenRGVlU5UUxFOUJRVThzUlVGQlJTeE5RVUZOTzBOQlEyaENPenRCUVZkUUxFRkJRVUVzWTBGQll5eERRVUZETzBWQlEySXNUMEZCVHl4RlFVRkZMRTFCUVUwN1EwRkxhRUk3TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRVWgwUXl4QlFVRkJMR05CUVdNc1EwRkJRenRKUVVsWUxFOUJRVThzUlVGQlJTeE5RVUZOTzBkQlJXeENPenM3UVVNMVFrUXNRVUZJUVN4aFFVZGhMRU5CU1Znc1dVRkJXU3hEUVVOV0xGTkJRVk1zUTBGUlVDeEhRVUZITEVWQkswUlVMR05CUVdNc1EwRkRXaXhEUVVGRExFTkJPRUpETEVkQlFVY3NRMEU1UjBjN1JWWjVRbElzVlVGQlZTeEZRVUZGTEVsQlFVazdSVUZEYUVJc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVDBGQlR5eEZRVUZGTEV0QlFVczdSVUZEWkN4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVWVUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRWRCUVVjc1JVRkJSU3hIUVVGSE8wVkJRMUlzU1VGQlNTeEZRVUZGTEVkQlFVYzdSVUZEVkN4VFFVRlRMRVZCUVVVc2NVSkJRVzlDTzBOVmFrTm9RenM3UVZadFF6aENMRk5CUVVNc1JVRkJia0lzVlVGQlZTeEZRVUZGTEV0QlFVczdSVlZzUXpsQ0xFRkJTRUVzWVVGSFlTeERRVWxZTEZsQlFWa3NRMEZEVml4VFFVRlRMRU5CVVZBc1IwRkJSeXhGUVN0RVZDeGpRVUZqTEVOQlExb3NRMEZCUXl4RFFUaENReXhIUVVGSExFTkJPVWRITzBsV2MwTk9MRXRCUVVzc1JVRkJSU3hKUVVGSk8wbEJRMWdzVFVGQlRTeEZRVUZGTEVsQlFVazdTVUZEV2l4VlFVRlZMRVZCUVVVc1MwRkJTenRIVlhSRGNFSTdPenRCUVVORUxFRkJRVUVzWVVGQllTeERRVUZETzBWQlExb3NUVUZCVFN4RlFVRkZMRXRCUVVzN1JVRkRZaXhSUVVGUkxFVkJRVVVzVVVGQlVUdERRWGRGYmtJN08wRkJNVVZFTEVGQlMwa3NZVUZNVXl4RFFVbFlMRmxCUVZrc1EwRkRWaXhUUVVGVExFTkJRVU03UlVGRFVpeE5RVUZOTEVWQlFVVXNTMEZCU3p0RFFWVmtPenRCUVdoQ1RDeEJRVkZOTEdGQlVrOHNRMEZKV0N4WlFVRlpMRU5CUTFZc1UwRkJVeXhIUVVkTUxFZEJRVWNzUTBGQlF6dEZRVU5LTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1VVRkJVU3hGUVVGRkxGRkJRVkU3UTBGRGJrSTdPMEZCV0ZBc1FVRnRRazBzWVVGdVFrOHNRMEZKV0N4WlFVRlpMRU5CWTFZc1VVRkJVU3hEUVVOT0xFMUJRVTBzUTBGQlF6dEZRVU5NTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFZEJRVWNzUlVGQlJTeG5Ra0ZCWjBJN1JVRkRja0lzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxHZENRVUZuUWl4RlFVRkZMREJDUVVFd1FqdEZRVU0xUXl4bFFVRmxMRVZCUVVVc1QwRkJUenRGUVVONFFpeHBRa0ZCYVVJc1JVRkJSU3hUUVVGVE8wVkJRelZDTEZWQlFWVXNSVUZCUlN4UlFVRlJPME5CWlhKQ096dEJRVEZEVUN4QlFUWkNVU3hoUVRkQ1N5eERRVWxZTEZsQlFWa3NRMEZqVml4UlFVRlJMRU5CUTA0c1RVRkJUU3hEUVZWS0xFbEJRVWtzUTBGQlF6dEZWbXhDV0N4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeExRVUZMTEVWQlFVVXNSMEZCUnp0RlFVTldMRTFCUVUwc1JVRkJSU3hIUVVGSE8wVkJRMWdzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZEVml4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxGRkJRVkVzUlVGQlJTeE5RVUZOTzBWQlEyaENMRWxCUVVrc1JVRkJSU3huUWtGQllUdEZRVU51UWl4TlFVRk5MRVZCUVVVc1EwRkJRenREVldGR096dEJRUzlDVkN4QlFXbERVU3hoUVdwRFN5eERRVWxZTEZsQlFWa3NRMEZqVml4UlFVRlJMRU5CUTA0c1RVRkJUU3hCUVdOSUxFMUJRVTBzUlVGcVEyWXNZVUZCWVN4RFFVbFlMRmxCUVZrc1EwRmpWaXhSUVVGUkxFTkJRMDRzVFVGQlRTeEJRV1ZJTEU5QlFVOHNRMEZCUXp0RlFVTlFMRTFCUVUwc1JVRkJSU3hEUVVGRE8wVkJRMVFzVDBGQlR5eEZRVUZGTEVsQlFVazdRMEZEWkRzN1FVRnlRMVFzUVZaSlJTeGhWVXBYTEVOQlNWZ3NXVUZCV1N4RFFXTldMRkZCUVZFc1EwRkRUaXhOUVVGTkxFRldabFFzVFVGQlRTeEZWVXBVTEdGQlFXRXNRMEZKV0N4WlFVRlpMRU5CWTFZc1VVRkJVU3hEUVVOT0xFMUJRVTBzUVZaa1ZDeE5RVUZOTEVOQlFVTTdSVlZ0UTBFc1QwRkJUeXhGUVVGRkxFVkJRVVU3UTFacVEyeENPenRCVlZCSUxFRkJORU5OTEdGQk5VTlBMRU5CU1Znc1dVRkJXU3hEUVdOV0xGRkJRVkVzUTBFd1FrNHNVMEZCVXl4RFFVRkRPMFZCUTFJc1NVRkJTU3hGV0RsRFNDeEpRVUZKTzBWWEswTk1MRk5CUVZNc1JVRkJSU3hqUVVGak8wTkJRekZDT3p0QlFTOURVQ3hCUVdsRVRTeGhRV3BFVHl4RFFVbFlMRmxCUVZrc1EwRmpWaXhSUVVGUkxFTkJLMEpPTEZOQlFWTXNRMEZCUXp0RlFVTlNMRXRCUVVzc1JWaHVSRW9zU1VGQlNUdERWMjlFVGpzN1FVRnVSRkFzUVVGMVJFVXNZVUYyUkZjc1EwRjFSRmdzV1VGQldTeERRVUZETzBWQlExZ3NTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFMUJRVTBzUlZnMVJFUXNTVUZCU1R0RlZ6WkVWQ3hKUVVGSkxFVkJRVVVzWjBKQlFXZENPMFZCUTNSQ0xFOUJRVThzUlVGQlJTeEZRVUZGTzBWQlExZ3NaMEpCUVdkQ0xFVkJRVVVzTUVKQlFUQkNPMFZCUXpWRExHVkJRV1VzUlVGQlJTeFBRVUZQTzBWQlEzaENMR2xDUVVGcFFpeEZRVUZGTEZOQlFWTTdSVUZETlVJc1ZVRkJWU3hGUVVGRkxGRkJRVkU3UlVGRGNFSXNVMEZCVXl4RlFVRkZMR0ZCUVdFN1JVRkRlRUlzVVVGQlVTeEZRVUZGTEUxQlFVMDdSVUZEYUVJc1YwRkJWeXhGUVVGRkxGTkJRVk03UTBGTGRrSTdPMEZCZWtWSUxFRldTVVVzWVZWS1Z5eERRWFZFV0N4WlFVRlpMRUZXYmtSWUxFMUJRVTBzUlZWS1ZDeGhRVUZoTEVOQmRVUllMRmxCUVZrc1FWWnNSRmdzVFVGQlRTeERRVUZETzBWVmEwVktMRTlCUVU4c1JVRkJSU3hGUVVGRk8wTldhRVZrT3p0QlZYRkZTQ3hCUVVORkxHTkJSRmtzUTBGRFdpeERRVUZETEVOQlFVTTdSVUZEUVN4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxHTkJRV01zUlVGQlJTeE5RVUZOTzBWQlEzUkNMR1ZCUVdVc1JVRkJSU3hOUVVGTk8wVkJRM1pDTEZkQlFWY3NSVUZCUlN4TlFVRk5PMFZCUTI1Q0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRTFCUVUwc1JVRkJSU3hMUVVGTE8wVkJRMklzVVVGQlVTeEZRVUZGTEUxQlFVMDdSVUZEYUVJc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeExRVUZMTEVWWWJrWkVMRTlCUVU4N1JWZHZSbGdzVlVGQlZTeEZRVUZGTEUxQlFVMDdSVUZEYkVJc1YwRkJWeXhGUVVGRkxFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFdHeEdhRUlzVDBGQlR6dEZWMjFHWml4bFFVRmxMRVZCUVVVc1NVRkJTVHRGUVVOeVFpeFhRVUZYTEVWWUwwVklMR1ZCUVdVc1JVRkJSU3hQUVVGUE8wVlhaMFpvUXl4WFFVRlhMRVZCUVVVc1IwRkJSenRGUVVOb1FpeFZRVUZWTEVWWWRrWktMRTlCUVU4N1ExZDFTR1E3TzBGQk9VSkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZzUW5aRExFRkJRMFVzWTBGRVdTeERRVU5hTEVOQlFVTXNRMEZCUXp0SlFXdENSU3hUUVVGVExFVkJRVVVzU1VGQlNUdEhRVFpDYkVJN096dEJRVEZDUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQmRFSjRReXhCUVVORkxHTkJSRmtzUTBGRFdpeERRVUZETEVOQlFVTTdTVUZ6UWtVc1UwRkJVeXhGUVVGRkxFdEJRVXM3UjBGNVFtNUNPenM3UVVGb1JFZ3NRVUV3UWtrc1kwRXhRbFVzUTBGRFdpeERRVUZETEVOQmVVSkRMRWxCUVVrc1EwRkJRenRGUVVOSUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRTlCUVU4c1JVRkJSU3hEUVVGRE8wTkJRMWc3TzBGQk4wSk1MRUZCSzBKSkxHTkJMMEpWTEVOQlExb3NRMEZCUXl4RFFUaENReXhIUVVGSExFTkJRVU03UlVGRlJpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRlZCUVZVc1JVRkJSU3hSUVVGUk8wVkJRM0JDTEUxQlFVMHNSVUZCUlN4VlFVRlZPME5CVFc1Q096dEJRVW80UWl4VFFVRkRMRVZCUVc1Q0xGVkJRVlVzUlVGQlJTeExRVUZMTzBWQmNrTnNReXhCUVN0Q1NTeGpRUzlDVlN4RFFVTmFMRU5CUVVNc1EwRTRRa01zUjBGQlJ5eERRVUZETzBsQlQwRXNTMEZCU3l4RlFVRkZMRWxCUVVrN1NVRkRXQ3hOUVVGTkxFVkJRVVVzU1VGQlNUdEhRVVZtT3pzN1FVRjZRMHdzUVVFMFEwMHNZMEUxUTFFc1EwRkRXaXhEUVVGRExFRkJNRU5GTEUxQlFVMHNRMEZEVEN4SFFVRkhMRU5CUVVNN1JVRkRSaXhOUVVGTkxFVkJRVVVzVDBGQlR6dERRVU5vUWpzN1FVTTNTRkFzUVVGQlFTeGhRVUZoTEVOQlFVTTdSVUZEV2l4TlFVRk5MRVZCUVVVc1RVRkJUVHREUVcxRFpqczdRVUZxUTBNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFVaHlReXhCUVVGQkxHRkJRV0VzUTBGQlF6dEpRVWxXTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGxCUTJJc1pVRkJaU3hGUVVGRkxGVkJRVlU3U1VGRE0wSXNVMEZCVXl4RlFVRkZMRWxCUVVrN1IwRTRRbXhDT3pzN1FVRXpRa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1RVRkJUVHRGUVZSMFF5eEJRVUZCTEdGQlFXRXNRMEZCUXp0SlFWVldMRTFCUVUwc1JVRkJSU3hOUVVGTk8wZEJNRUpxUWpzN08wRkJjRU5FTEVGQllVVXNZVUZpVnl4RlFXRllMRUZCUVVFc1MwRkJReXhGUVVGUExFdEJRVXNzUVVGQldpeEZRVUZqTzBWQlEySXNUMEZCVHl4RlFVRkZMRWRCUVVjN1EwRkxZanM3UVVGSVF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hOUVVGTk8wVkJhRUo0UXl4QlFXRkZMR0ZCWWxjc1JVRmhXQ3hCUVVGQkxFdEJRVU1zUlVGQlR5eExRVUZMTEVGQlFWb3NSVUZCWXp0SlFVbFlMRTlCUVU4c1JVRkJSU3hKUVVGSk8wZEJSV2hDT3pzN1FVRnVRa2dzUVVGeFFrVXNZVUZ5UWxjc1EwRnhRbGdzUjBGQlJ5eERRVUZETzBWQlEwWXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEU5QlFVOHNSVUZCUlN4TFFVRkxPME5CUTJZN08wRkJSVVFzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1QwRkJUenRGUVROQ2RrTXNRVUUyUWswc1lVRTNRazhzUTBFMFFsUXNUVUZCVFN4RFFVTktMRWRCUVVjc1EwRkJRenRKUVVOR0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBsQlExZ3NWVUZCVlN4RlFVRkZMRXRCUVVzN1NVRkRha0lzVFVGQlRTeEZRVUZGTEVsQlFVazdSMEZEWWpzN08wRkJTMUFzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVVOcVF5eEJRVUZCTEUxQlFVMHNRMEZCUXp0SlFVTk1MRXRCUVVzc1JVRkJSU3hOUVVGTk8wbEJRMklzU1VGQlNTeEZRVUZGTEZWQlFWVTdSMEZEYWtJN1JVRkZSQ3hCUVVGQkxFMUJRVTBzUTBGQlF6dEpRVU5NTEV0QlFVc3NSVUZCUlN4TlFVRk5PMGxCUTJJc1NVRkJTU3hGUVVGRkxGVkJRVlU3UjBGRGFrSTdSVUZGUkN4QlFVRkJMRTFCUVUwc1EwRkJRenRKUVVOTUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBsQlExZ3NTVUZCU1N4RlFVRkZMRkZCUVZFN1IwRkRaanM3TzBGRGNrTklMRUZCUVVFc1NVRkJTU3hEUVVGRE8wVkJRMGdzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4alFVRmpMRVZCUVVVc1IwRkJSenRGUVVOdVFpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RFFWTnVRanM3UVVGYVJDeEJRVXRGTEVsQlRFVXNRMEZMUml4TlFVRk5MRU5CUVVNN1JVRkRUQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNTVUZCU1N4RlFVRkZMRU5CUVVNN1JVRkRVQ3hIUVVGSExFVkJRVVVzUTBGQlF6dERRVU5RT3p0QlEzcENTQ3hCUVVGQkxHRkJRV0VzUTBGQlF6dEZRVU5hTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xGVkJRVlVzUlVGQlJTeExRVUZMTzBWQlEycENMRkZCUVZFc1JVRkJSU3hOUVVGTk8wVkJRMmhDTEdGQlFXRXNSVUZCUlN4SlFVRkpPME5CSzBKd1FqczdRVUZ1UTBRc1FVRk5SU3hoUVU1WExFTkJUVmdzUjBGQlJ5eERRVUZETzBWQlEwWXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEU5QlFVOHNSVUZCUlN4TFFVRkxPME5CUTJZN08wRkJWa2dzUVVGWlJTeGhRVnBYTEVOQldWZ3NZMEZCWXl4RFFVRkRPMFZCUTJJc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhKUVVGSkxFVkJRVVVzUTBGQlF6dEZRVU5RTEUxQlFVMHNSVUZCUlN4RFFVRkRPMFZCUTFRc1MwRkJTeXhGWkZwRUxFOUJRVTg3UldOaFdDeFhRVUZYTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhIUVVGSExFTmtaR2hDTEU5QlFVODdSV05sV0N4alFVRmpMRVZCUVVVc1NVRkJTVHREUVdWeVFqczdRVUZzUTBnc1FVRnhRa2tzWVVGeVFsTXNRMEZaV0N4alFVRmpMRU5CVTFvc1NVRkJTVHRCUVhKQ1VpeGhRVUZoTEVOQldWZ3NZMEZCWXl4RFFWVmFMRXRCUVVzc1EwRkJRenRGUVVOS0xFOUJRVThzUlVGQlJTeExRVUZMTzBOQlEyWTdPMEZCZUVKTUxFRkJNRUpKTEdGQk1VSlRMRU5CV1Znc1kwRkJZeXhEUVdOYUxFdEJRVXNzUTBGQlF6dEZRVU5LTEZOQlFWTXNSVUZCUlN4SFFVRkhPMFZCUTJRc1kwRkJZeXhGUVVGRkxFbEJRVWs3UTBGRGNrSTdPMEZCTjBKTUxFRkJLMEpKTEdGQkwwSlRMRU5CV1Znc1kwRkJZeXhIUVcxQ1ZpeEhRVUZITEVOQlFVTTdSV0l2UWxJc1UwRkJVeXhGUkVGTUxFMUJRVTA3UlVORFZpeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRTlCUVU4c1JVRkJSU3hEUVVGRExFTkVSRWdzU1VGQlNUdERZMmREVWpzN1FVRkpUQ3hCUVVGQkxGZEJRVmNzUTBGQlF6dEZRVU5XTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFbEJRVWtzUlVGQlJTeERRVUZETzBWQlExQXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEU5QlFVOHNSVUZCUlN4blFrRkJaMEk3UlVGRGVrSXNTMEZCU3l4RlpIUkRReXhQUVVGUE8wVmpkVU5pTEZWQlFWVXNSVUZCUlN4UlFVRlJPMFZCUTNCQ0xGZEJRVmNzUlVGQlJTeEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1EyUjZRMnhDTEU5QlFVODdRMk13UkdRN08wRkJla0pFTEVGQlZVVXNWMEZXVXl4RFFWVlVMRVZCUVVVc1EwRkJRenRGUVVORUxGTkJRVk1zUlVGQlJTeEpRVUZKTzBWQlEyWXNZMEZCWXl4RlFVRkZMRk5CUVZNN1EwRkxNVUk3TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRV1I0UXl4QlFWVkZMRmRCVmxNc1EwRlZWQ3hGUVVGRkxFTkJRVU03U1VGTFF5eFRRVUZUTEVWQlFVVXNTVUZCU1R0SFFVVnNRanM3TzBGQmFrSklMRUZCYlVKRkxGZEJia0pUTEVOQmJVSlVMRXRCUVVzc1EwRkJRenRGUVVOS0xGZEJRVmNzUldRMVEwZ3NaVUZCWlN4RlFVRkZMRTlCUVU4N1JXTTJRMmhETEZkQlFWY3NSVUZCUlN4VFFVRmxPMFZCUXpWQ0xGZEJRVmNzUldReFExSXNSMEZCUnp0Rll6SkRUaXhUUVVGVExFVkJRVVVzVFVGQlpUdERRVU16UWpzN1FVRkhTQ3hCUVVORkxHRkJSRmNzUjBGRFZDeEhRVUZITEVOQlFVTTdSV0pxUlU0c1UwRkJVeXhGUkVGTUxFMUJRVTA3UlVORFZpeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRTlCUVU4c1JVRkJSU3hEUVVGRExFTkVSRWdzU1VGQlNUdERZMnRGVmpzN1FVRkhTQ3hCUVVGQkxHTkJRV01zUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4SlFVRkpPMFZCUTJJc2NVSkJRWEZDTEVWQlFVVXNVVUZCVVR0RlFVTXZRaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4VlFVRlZMRVZCUVVVc1IwRkJSenREUVV0b1FqczdRVUZVUkN4QlFVMUZMR05CVGxrc1EwRk5XaXhGUVVGRkxFTkJRVU03UlVGRFJDeGpRVUZqTEVWQlFVVXNVMEZCVXp0RFFVTXhRanM3UVVGSlNDeEJRVUZCTEdsQ1FVRnBRaXhEUVVGRE8wVkJRMmhDTEU5QlFVOHNSVUZCUlN4TlFVRk5PME5CUTJoQ096dEJRVVZFTEVGQlFVRXNZVUZCWVN4RFFVRkRPMFZCUTFvc1YwRkJWeXhGWkRGRlJDeGxRVUZsTEVWQlFVVXNUMEZCVHp0RFkzZEpia003TzBGQkwwUkVMRUZCUlVVc1lVRkdWeXhIUVVWVUxFZEJRVWNzUTBGQlF6dEZZbmhHVGl4VFFVRlRMRVZFUVV3c1RVRkJUVHRGUTBOV0xFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NUMEZCVHl4RlFVRkZMRU5CUVVNc1EwUkVTQ3hKUVVGSk8wTmplVVpXT3p0QlFVcElMRUZCVFVVc1lVRk9WeXhEUVUxWUxFZEJRVWNzUTBGQlF6dEZRVU5HTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RFFVTm1PenRCUVZaSUxFRkJXVVVzWVVGYVZ5eERRVmxZTEU5QlFVOHNRMEZCUXp0RlFVTk9MRTlCUVU4c1JVRkJSU3hIUVVGSE8wTkJiVUppT3p0QlFXcENReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCWm5aRExFRkJXVVVzWVVGYVZ5eERRVmxZTEU5QlFVOHNRMEZCUXp0SlFVbEtMRXRCUVVzc1JVRkJSU3hOUVVGTk8wbEJRMklzU1VGQlNTeEZRVUZGTEZWQlFWVTdSMEZsYmtJN096dEJRVnBETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVGd1FuaERMRUZCV1VVc1lVRmFWeXhEUVZsWUxFOUJRVThzUTBGQlF6dEpRVk5LTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGRCVjJoQ096czdRVUZRUnl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmVrSjZReXhCUVhkQ1NTeGhRWGhDVXl4RFFWbFlMRTlCUVU4c1FVRlpTaXhWUVVGWExFTkJRVUVzVFVGQlRTeEZRVUZGTzBsQlJXaENMRk5CUVZNc1JVRkJSU3hwUWtGQmFVSTdSMEZMTDBJN096dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVFMVFqRkRMRUZCZDBKSkxHRkJlRUpUTEVOQldWZ3NUMEZCVHl4QlFWbEtMRlZCUVZjc1EwRkJRU3hOUVVGTkxFVkJRVVU3U1VGTGFFSXNVMEZCVXl4RlFVRkZMR2xDUVVGcFFqdEhRVVV2UWpzN08wRkJMMEpNTEVGQmEwTkZMR0ZCYkVOWExFTkJhME5ZTEVOQlFVTXNRMEZCUXp0RlFVTkJMRTlCUVU4c1JVRkJSU3hMUVVGTE8wVkJRMlFzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1MwRkJTeXhGWkhSSVJDeFBRVUZQTzBOamEwbGFPenRCUVdwRVNDeEJRWFZEU1N4aFFYWkRVeXhEUVd0RFdDeERRVUZETEVGQlMwVXNUMEZCVHl4RFFVRkRPMFZCUTFBc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTMEZCU3p0RlFVTmlMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEUxQlFVMHNSVUZCUlN4RFFVRkRPMFZCUTFRc1NVRkJTU3hGUVVGRkxFTkJRVU03UlVGRFVDeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRTlCUVU4c1JVRkJSU3hGUVVGRk8wVkJRMWdzVlVGQlZTeEZRVUZGTEcxRlFVRTJSRHREUVVNeFJUczdRVUZvUkV3c1FVRnRSRVVzWVVGdVJGY3NRMEZ0UkZnc1MwRkJTeXhEUVVGRE8wVkJRMG9zVTBGQlV5eEZRVUZGTEVsQlFVazdRMEZEYUVJN08wRkJja1JJTEVGQmRVUkZMR0ZCZGtSWExFTkJkVVJZTEZkQlFWY3NRMEZCUXp0RlFVTldMR05CUVdNc1JVRkJSU3hKUVVGSk8wTkJRM0pDT3p0QlFYcEVTQ3hCUVRKRVJTeGhRVE5FVnl4QlFUSkVWaXhSUVVGUkxFTkJRVU03UlVGRFVpeFZRVUZWTEVWa00wbEtMRTlCUVU4N1JXTTBTV0lzUzBGQlN5eEZaRGxKUkN4UFFVRlBPME5qSzBsYU96dEJRVWRJTEVGQlFVRXNiVUpCUVcxQ0xFTkJRVU03UlVGRGJFSXNUMEZCVHl4RlFVRkZMRkZCUVZFN1JVRkRha0lzVlVGQlZTeEZRVUZGTEUxQlFVMDdSVUZEYkVJc1RVRkJUU3hGUVVGRkxFMUJRVTA3UTBGaFpqczdRVUZZUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQlRISkRMRUZCUVVFc2JVSkJRVzFDTEVOQlFVTTdTVUZOYUVJc1QwRkJUeXhGUVVGRkxFbEJRVWs3U1VGRFlpeFRRVUZUTEVWQlFVVXNTVUZCU1R0SlFVTm1MR1ZCUVdVc1JVRkJSU3hWUVVGVk8wbEJRek5DTEZkQlFWY3NSVUZCUlN4SlFVRkpPMGRCVDNCQ096czdRVUZLUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQlduUkRMRUZCUVVFc2JVSkJRVzFDTEVOQlFVTTdTVUZoYUVJc1RVRkJUU3hGUVVGRkxFMUJRVTA3U1VGRFpDeFhRVUZYTEVWQlFVVXNTVUZCU1R0SFFVVndRanM3TzBGRGVFdEVMRUZCUVVFc1kwRkJZeXhEUVVGRE8wVkJRMklzVDBGQlR5eEZRVUZGTEUxQlFVMDdRMEU0UW1oQ096dEJRUzlDUkN4QlFVZEZMR05CU0Zrc1IwRkhWaXhIUVVGSExFTkJRVU03UldSR1RpeFRRVUZUTEVWRVFVd3NUVUZCVFR0RlEwTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVDBGQlR5eEZRVUZGTEVOQlFVTXNRMFJFU0N4SlFVRkpPME5sVDFZN08wRkJTa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVV4MlF5eEJRVWRGTEdOQlNGa3NSMEZIVml4SFFVRkhMRU5CUVVNN1NVRkhSaXhQUVVGUExFVkJRVVVzU1VGQlNUdEpRVU5pTEdWQlFXVXNSVUZCUlN4aFFVRmhPMGRCUldwRE96czdRVUZVU0N4QlFWZEZMR05CV0Zrc1EwRlhXaXhUUVVGVExFTkJRVU03UlVGRFVpeFRRVUZUTEVWQlFVVXNTVUZCU1R0RFFXdENhRUk3TzBGQk9VSklMRUZCWVVrc1kwRmlWU3hEUVZkYUxGTkJRVk1zUTBGRlVDeFBRVUZQTEVOQlFVTTdSVUZEVGl4aFFVRmhMRVZCUVVVc1MwRkJTenREUVVseVFqczdRVUZzUWt3c1FVRmxUU3hqUVdaUkxFTkJWMW9zVTBGQlV5eERRVVZRTEU5QlFVOHNRMEZGVEN4SlFVRkpMRU5CUVVNN1JVRkRTQ3hQUVVGUExFVkJRVVVzUzBGQlN6dERRVU5tT3p0QlFXcENVQ3hCUVc5Q1NTeGpRWEJDVlN4RFFWZGFMRk5CUVZNc1EwRlRVQ3hEUVVGRExFTkJRVU03UlVGRFFTeExRVUZMTEVWbVlrUXNUMEZCVHp0RlpXTllMR1ZCUVdVc1JVRkJSU3hKUVVGSk8wTkJUM1JDT3p0QlFUZENUQ3hCUVhsQ1VTeGpRWHBDVFN4RFFWZGFMRk5CUVZNc1EwRlRVQ3hEUVVGRExFRmtZa1lzVFVGQlRTeERZMnRDUkN4SlFVRkpMRUZCUVVFc1YwRkJWeXhGUVhwQ2RrSXNZMEZCWXl4RFFWZGFMRk5CUVZNc1EwRlRVQ3hEUVVGRExFRmtXa1lzVFVGQlRTeERZMmxDUkN4SlFVRkpMRUZCUVVFc1YwRkJWeXhEUVVGRE8wVkJRMlFzWlVGQlpTeEZRVUZGTEZOQlFWTTdRMEZETTBJN08wRkJUMUFzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVVSeVF5eEJRVUZCTEZsQlFWa3NRMEZCUXp0SlFVVlVMRXRCUVVzc1JVRkJSU3hIUVVGSE8wZEJNRVJpTzBWQk5VUkVMRUZCU1Vrc1dVRktVU3hEUVVsU0xFZEJRVWNzUTBGQlF6dEpRVU5HTEZGQlFWRXNSVUZCUlN4TlFVRk5PMGxCUTJoQ0xFZEJRVWNzUldaVVRTeEpRVUZKTzBkbFZXUTdPenRCUVZCTUxFRkJWVVVzV1VGV1ZTeERRVlZXTEVWQlFVVXNRMEZCUXp0RlFVTkVMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzVTBGQlV5eEZRVUZGTEVsQlFVazdSVUZEWml4TlFVRk5MRVZCUVVVc1MwRkJTenREUVVOa096dEJRV1JJTEVGQlowSkZMRmxCYUVKVkxFTkJaMEpXTEVWQlFVVXNRMEZCUXp0RlFVTkVMRWxCUVVrc1JVRkJSU3hQUVVGUE8wVkJRMklzUzBGQlN5eEZRVUZGTEVkQlFVYzdSVUZEVml4UFFVRlBMRVZCUVVVc1NVRkJTVHREUVUxa096dEJRVXBETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGeVFuWkRMRUZCWjBKRkxGbEJhRUpWTEVOQlowSldMRVZCUVVVc1EwRkJRenRKUVUxRExFbEJRVWtzUlVGQlJTeFBRVUZQTzBsQlEySXNTMEZCU3l4RlFVRkZMRWRCUVVjN1IwRkZZanM3TzBGQmVrSklMRUZCTWtKRkxGbEJNMEpWTEVOQk1rSldMRWRCUVVjc1EwRkJRenRGUVVOR0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhQUVVGUExFVkJRVVVzUzBGQlN6dERRVU5tT3p0QlFTOUNTQ3hCUVdsRFJTeFpRV3BEVlN4RFFXbERWaXhKUVVGSkxFTkJRVU03UldSd1JFd3NVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzUzBGQlN5eEZRVUZGTEVkQlFVYzdSVUZEVml4TlFVRk5MRVZCUVVVc1IwRkJSenRGUVVOWUxFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhSUVVGUkxFVkJRVVVzVFVGQlRUdEZRVU5vUWl4SlFVRkpMRVZCUVVVc1owSkJRV0U3UlVGRGJrSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1EyTXJRMUk3TzBGQmJrTklMRUZCY1VORkxGbEJja05WTEVOQmNVTldMRU5CUVVNc1EwRkJRenRGUVVOQkxGVkJRVlVzUlVGQlJTeFJRVUZSTzBWQlEzQkNMRTlCUVU4c1JVRkJSU3hMUVVGTE8wVkJRMlFzVFVGQlRTeEZRVUZGTEdsQ1FVRnBRanREUVVzeFFqczdRVUUzUTBnc1FXUXhRa1VzV1dNd1FsVXNRMEZ4UTFZc1EwRkJReXhCWkM5RVFTeE5RVUZOTEVWak1FSlVMRmxCUVZrc1EwRnhRMVlzUTBGQlF5eEJaRGxFUVN4TlFVRk5MRU5CUVVNN1JXTnZSVW9zVDBGQlR5eEZRVUZGTEVkQlFVYzdRMlJzUldZN08wRmpkVUpJTEVGQlowUkpMRmxCYUVSUkxFRkJLME5VTEZsQlFWa3NRMEZEV0N4RFFVRkRMRU5CUVVNN1JVRkRRU3hQUVVGUExFVkJRVVVzUjBGQlJ6dERRVXRpT3p0QlFYUkVUQ3hCWkRGQ1JTeFpZekJDVlN4QlFTdERWQ3haUVVGWkxFTkJRMWdzUTBGQlF5eEJaREZGUml4TlFVRk5MRVZqTUVKVUxGbEJRVmtzUVVFclExUXNXVUZCV1N4RFFVTllMRU5CUVVNc1FXUjZSVVlzVFVGQlRTeERRVUZETzBWak5rVkdMRTlCUVU4c1JVRkJSU3hIUVVGSE8wTmtNMFZxUWpzN1FXTjFRa2dzUVVGM1JFa3NXVUY0UkZFc1FVRXJRMVFzV1VGQldTeERRVk5ZTEVWQlFVVXNRVUZCUVN4UFFVRlBMRU5CUVVNc1EwRkJReXhEUVVGRE8wVkJRMVlzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZEV0RzN1FVRkxTQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCUkhKRExFRkJRVUVzVTBGQlV5eERRVUZETzBsQlJVNHNTVUZCU1N4RlFVRkZMRTlCUVU4N1NVRkRZaXhMUVVGTExFVkJRVVVzUjBGQlJ6dEhRVVZpT3pzN1FVRkZSQ3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5PTEU5QlFVOHNSVUZCUlN4TlFVRk5PME5CUTJoQ096dEJRVU5FTEVGQlEwVXNZMEZFV1N4RFFVTmFMRTlCUVU4c1EwRkJRenRGUVVOT0xGTkJRVk1zUlVGQlJTeEpRVUZKTzBWQlEyWXNUMEZCVHl4RlFVRkZMRWRCUVVjN1EwRmpZanM3UVVGcVFrZ3NRVUZMU1N4alFVeFZMRU5CUTFvc1QwRkJUeXhEUVVsTUxFTkJRVU1zUTBGQlF6dEZRVU5CTEV0QlFVc3NSV1oyUjBRc1QwRkJUenRGWlhkSFdDeFBRVUZQTEVWQlFVVXNTMEZCU3p0RlFVTmtMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVDBGQlR5eEZRVUZGTEVsQlFVazdSVUZEWWl4TlFVRk5MRVZCUVVVc1IwRkJSeXhEUVVGRExFdEJRVXNzUTJZelIySXNUMEZCVHp0RlpUUkhXQ3hsUVVGbExFVkJRVVVzU1VGQlNUdERRVXQwUWpzN1FVRm9Ra3dzUVdSc1IwVXNZMk5yUjFrc1EwRkRXaXhQUVVGUExFTkJTVXdzUTBGQlF5eEJaSFpIUml4TlFVRk5MRVZqYTBkVUxHTkJRV01zUTBGRFdpeFBRVUZQTEVOQlNVd3NRMEZCUXl4QlpIUkhSaXhOUVVGTkxFTkJRVU03UldNclIwWXNWVUZCVlN4RlppOUhVaXh4UWtGQlR6dERRMFZrT3p0Qll5dEdTQ3hCUVhGQ1VTeGpRWEpDVFN4RFFXdENXaXhUUVVGVExFRkJRMDRzVlVGQlZ5eERRVUZCTEVWQlFVVXNSVUZEV2l4UFFVRlBMRU5CUTB3c1EwRkJReXhEUVVGRE8wVkJRMEVzUzBGQlN5eEZabnBJVUN4UFFVRlBPMFZsTUVoTUxGVkJRVlVzUldaNFNGWXNUMEZCVHp0RFpUaElVanM3UVVFM1FsUXNRV1JzUjBVc1kyTnJSMWtzUTBGclFsb3NVMEZCVXl4QlFVTk9MRlZCUVZjc1EwRkJRU3hGUVVGRkxFVkJRMW9zVDBGQlR5eERRVU5NTEVOQlFVTXNRV1IyU0U0c1RVRkJUU3hGWTJ0SFZDeGpRVUZqTEVOQmEwSmFMRk5CUVZNc1FVRkRUaXhWUVVGWExFTkJRVUVzUlVGQlJTeEZRVU5hTEU5QlFVOHNRMEZEVEN4RFFVRkRMRUZrZEVoT0xFMUJRVTBzUTBGQlF6dEZZekpJUlN4TFFVRkxMRVZtTTBoUUxFOUJRVTg3UldVMFNFd3NWVUZCVlN4RlpqVklXaXh4UWtGQlR6dERRMFZrT3p0Qll5dEdTQ3hCUVd0RFJTeGpRV3hEV1N4RFFXdERXaXhWUVVGVkxFTkJRVU03UlVGRFZDeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMRmRCUVZjc1JVRkJSU3hQUVVGUE8wTkJRM0pDT3p0QlFYSkRTQ3hCUVhWRFJTeGpRWFpEV1N4RFFYVkRXaXhQUVVGUE8wRkJka05VTEdOQlFXTXNRMEYzUTFvc1EwRkJReXhEUVVGRE8wVkJRMEVzVFVGQlRTeEZRVUZGTEVsQlFVazdRMEZEWWpzN1FVRXhRMGdzUVVFMFEwVXNZMEUxUTFrc1EwRTBRMW9zUzBGQlN5eERRVUZETzBWQlEwb3NZVUZCWVN4RlFVRkZMRWxCUVVrN1EwRkRjRUk3TzBGRGRrcElMRUZCUVVFc1QwRkJUeXhIUVVGSExFbEJRVWtzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4TlFVRk5PME5CUTJoQ096dEJRVU5FTEVGQlEwVXNXVUZFVlN4RFFVTldMRVZCUVVVc1EwRkJRenRGUVVORUxGZEJRVmNzUldoQ1UwZ3NaVUZCWlN4RlFVRkZMRTlCUVU4N1EyZENVbXBET3p0QlFVaElMRUZCU1VVc1dVRktWU3hIUVVsU0xFZEJRVWNzUTBGQlF6dEZaazVPTEZOQlFWTXNSVVJCVEN4TlFVRk5PMFZEUTFZc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVVXNRMEZCUXl4RFJFUklMRWxCUVVrN1EyZENUMVk3TzBGQlRrZ3NRVUZSUlN4WlFWSlZMRU5CVVZZc1IwRkJSeXhEUVVGRE8wVkJRMFlzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeExRVUZMTzBOQlEyWTdPMEZCV2tnc1FVRmpSU3haUVdSVkxFTkJZMVlzVjBGQlZ5eERRVUZETzBWQlExWXNUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRXRHM3UVVGb1FrZ3NRVUZyUWtVc1dVRnNRbFVzUTBGclFsWXNUMEZCVHl4RFFVRkRPMFZCUTA0c1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNUMEZCVHl4RlFVRkZMRWRCUVVjN1EwRjFRMkk3TzBGQk0wUklMRUZCYzBKSkxGbEJkRUpSTEVOQmEwSldMRTlCUVU4c1EwRkpUQ3hEUVVGRExFTkJRVU03UlVGTlFTeFBRVUZQTEVWQlFVVXNTMEZCU3p0RlFVTmtMRkZCUVZFc1JVRkJSU3hSUVVGUk8wTkJWMjVDT3p0QlFYaERUQ3hCUVhkQ1VTeFpRWGhDU1N4RFFXdENWaXhQUVVGUExFTkJTVXdzUTBGQlF5eEJabXhDUml4TlFVRk5MRU5sYjBKRUxGZEJRVmNzUlVGNFFtNUNMRmxCUVZrc1EwRnJRbFlzVDBGQlR5eERRVWxNTEVOQlFVTXNRV1pxUWtZc1RVRkJUU3hEWlcxQ1JDeFhRVUZYTEVOQlFVTTdSVUZEVml4UFFVRlBMRVZCUVVVc1EwRkJRenREUVVOWU96dEJRVEZDVkN4QlFUaENUU3haUVRsQ1RTeERRV3RDVml4UFFVRlBMRU5CU1V3c1EwRkJReXhCUVZGRkxFOUJRVThzUTBGQlF6dEZRVU5RTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1RVRkJUU3hGUVVGRkxFdEJRVXM3UlVGRFlpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVU5VTEVsQlFVa3NSVUZCUlN4RFFVRkRPMFZCUTFBc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeFBRVUZQTEVWQlFVVXNSVUZCUlR0RlFVTllMRlZCUVZVc1JVRkJSU3h0UlVGQk5rUTdRMEZETVVVN08wRkJSMGdzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRGRGRrTXNRVUZyUWtVc1dVRnNRbFVzUTBGclFsWXNUMEZCVHl4RFFVRkRPMGxCZVVKS0xFdEJRVXNzUlVGQlJTeE5RVUZOTzBsQlEySXNTVUZCU1N4RlFVRkZMRlZCUVZVN1IwRmxia0k3T3p0QlFWcERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVUV2UTNoRExFRkJhMEpGTEZsQmJFSlZMRU5CYTBKV0xFOUJRVThzUTBGQlF6dEpRVGhDU2l4UFFVRlBMRVZCUVVVc1NVRkJTVHRIUVZkb1FqczdPMEZCVUVjc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFYQkVla01zUVVGdFJFa3NXVUZ1UkZFc1EwRnJRbFlzVDBGQlR5eEJRV2xEU2l4VlFVRlhMRU5CUVVFc1RVRkJUU3hGUVVGRk8wbEJSV2hDTEZOQlFWTXNSVUZCUlN4cFFrRkJhVUk3UjBGTEwwSTdPenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRTFCUVUwN1JVRjJSREZETEVGQmJVUkpMRmxCYmtSUkxFTkJhMEpXTEU5QlFVOHNRVUZwUTBvc1ZVRkJWeXhEUVVGQkxFMUJRVTBzUlVGQlJUdEpRVXRvUWl4VFFVRlRMRVZCUVVVc2FVSkJRV2xDTzBkQlJTOUNPenM3UVVGSlRDeEJRVUZCTEd0Q1FVRnJRaXhEUVVGRE8wVkJRMnBDTEU5QlFVOHNSVUZCUlN4WFFVRlhPMFZCUTNCQ0xFMUJRVTBzUlVGQlJTeE5RVUZOTzBOQlYyWTdPMEZCVkVNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFVcHlReXhCUVVGQkxHdENRVUZyUWl4RFFVRkRPMGxCUzJZc1QwRkJUeXhGUVVGRkxFbEJRVWs3U1VGRFlpeFRRVUZUTEVWQlFVVXNTVUZCU1R0SlFVTm1MR1ZCUVdVc1JVRkJSU3hWUVVGVk8wZEJUVGxDT3pzN1FVRklReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZCVm5SRExFRkJRVUVzYTBKQlFXdENMRU5CUVVNN1NVRlhaaXhOUVVGTkxFVkJRVVVzVFVGQlRUdEhRVVZxUWpzN08wRkJSVVFzUVVGQlFTeFhRVUZYTEVOQlFVTTdSVUZEVml4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxGVkJRVlVzUlVGQlJTeEpRVUZKTzBWQlEyaENMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVsQlFVa3NSVUZCUlN4SlFVRkpPMFZCUTFZc1IwRkJSeXhGUVVGRkxFTkJRVU03UlVGRFRpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMRTlCUVU4c1JVRkJSU3hKUVVGSk8wTkJlVVJrT3p0QlFXaEZSQ3hCUVZORkxGZEJWRk1zUTBGVFZDeERRVUZETEVOQlFVTTdSVUZEUVN4TFFVRkxMRVZvUW5CR1JDeFBRVUZQTzBWblFuRkdXQ3hUUVVGVExFVkJRVVVzU1VGQlNUdEZRVU5tTEZkQlFWY3NSVUZCUlN4VFFVRmxPME5CUXpkQ096dEJRV0pJTEVGQlpVVXNWMEZtVXl4SFFXVlFMRWRCUVVjc1EwRkJRenRGUVVOS0xGVkJRVlVzUlVGQlJTeEpRVUZKTzBWQlEyaENMRlZCUVZVc1JXaENla1pLTEU5QlFVODdSV2RDTUVaaUxFOUJRVThzUlVGQlJTeEpRVUZKTzBOQlEyUTdPMEZCYmtKSUxFRkJjVUpGTEZkQmNrSlRMRU5CY1VKVUxFMUJRVTBzUTBGQlF6dEZRVU5NTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhIUVVGSExFVkJRVVVzU1VGQlV6dEZRVU5rTEV0QlFVc3NSVUZCUlN4SlFVRlRPMFZCUldoQ0xFMUJRVTBzUlVGQlJTeEhRVUZITEVOQlFVTXNTMEZCU3l4RGFFSjBSMklzVDBGQlR6dEZaMEoxUjFnc1owSkJRV2RDTEVWQlFVVXNWMEZCVnp0RlFVTTNRaXhYUVVGWExFVkJRVVVzVDBGQlR6dEZRVU53UWl4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeE5RVUZOTEVWQlFVVXNUMEZCVHp0RlFVTm1MRlZCUVZVc1JVRkJSU3hSUVVGUk8wTkJPRUp5UWpzN1FVRXZSRWdzUVVGdFEwa3NWMEZ1UTA4c1EwRnhRbFFzVFVGQlRTeEJRV05JTEU5QlFVOHNSVUZ1UTFvc1YwRkJWeXhEUVhGQ1ZDeE5RVUZOTEVGQlpVZ3NUVUZCVFN4RFFVRkRPMFZCUTA0c1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNSMEZCUnp0RlFVTllMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVkQlFVY3NSVUZCUlN4SFFVRkhPMFZCUTFJc1NVRkJTU3hGUVVGRkxFZEJRVWM3UlVGRFZDeFBRVUZQTEVWQlFVVXNSVUZCUlR0RlFVTllMRlZCUVZVc1JXaENja2hTTEU5QlFVODdSV2RDYzBoVUxGVkJRVlVzUlVGQlJTeFJRVUZSTzBOQlEzSkNPenRCUVRkRFRDeEJRU3REU1N4WFFTOURUeXhEUVhGQ1ZDeE5RVUZOTEVGQk1FSklMRTlCUVU4c1EwRkJRenRGUVVOUUxGTkJRVk1zUlVGQlJTeG5Ra0ZCWjBJc1EwRkJReXhoUVVGaE8wTkJRekZET3p0QlFXcEVUQ3hCUVd0RVNTeFhRV3hFVHl4RFFYRkNWQ3hOUVVGTkxFRkJOa0pJTEUxQlFVMHNRMEZCUXp0RlFVTk9MRk5CUVZNc1JVRkJSU3huUWtGQlowSXNRMEZCUXl4alFVRmpPME5CUXpORE96dEJRWEJFVEN4QlpucEZSU3hYWlhsRlV5eERRWEZDVkN4TlFVRk5MRUZtT1VaTUxFMUJRVTBzUldWNVJWUXNWMEZCVnl4RFFYRkNWQ3hOUVVGTkxFRm1OMFpNTEUxQlFVMHNRMEZCUXp0RlpTdElTaXhWUVVGVkxFVm9RbXBKVWl4M1FrRkJUenRGWjBKclNWUXNXVUZCV1N4RmFFSm9TVklzVDBGQlR6dERRMFZrT3p0QlpYTkZTQ3hCUVRCRVRTeFhRVEZFU3l4RFFYRkNWQ3hOUVVGTkxFRm1PVVpNTEUxQlFVMHNRV1Z0U1VZc1QwRkJUeXhGUVRGRVpDeFhRVUZYTEVOQmNVSlVMRTFCUVUwc1FXWTVSa3dzVFVGQlRTeEJaVzlKUml4TlFVRk5MRVZCTTBSaUxGZEJRVmNzUTBGeFFsUXNUVUZCVFN4QlpqZEdUQ3hOUVVGTkxFRmxhMGxHTEU5QlFVOHNSVUV4UkdRc1YwRkJWeXhEUVhGQ1ZDeE5RVUZOTEVGbU4wWk1MRTFCUVUwc1FXVnRTVVlzVFVGQlRTeERRVUZETzBWQlEwNHNaMEpCUVdkQ0xFVm9RbkJKWkN4UFFVRlBPME5uUW5GSlZqczdRVUZMVUN4QlFVRkJMRlZCUVZVc1EwRkJRenRGUVVOVUxFdEJRVXNzUlVGQlJTeHBRa0ZCYVVJN1EwRlBla0k3TzBGQlVrUXNRVUZIU1N4VlFVaE5MRU5CUlZJc1EwRkJReXhCUVVORkxGbEJRVmtzUTBGQlF6dEZRVU5hTEdOQlFXTXNSVUZCUlN4VFFVRlRPMFZCUTNwQ0xFMUJRVTBzUlVGQlJTeERRVUZETzBOQlExWTdPMEZCU1V3c1FVRkhTU3haUVVoUkxFTkJRVU1zVDBGQlR5eEJRVU5xUWl4VlFVRlhMRU5CUVVFc1JVRkJSU3hGUVVWYUxGZEJRVmNzUlVGSVppeFpRVUZaTEVOQlFVTXNUMEZCVHl4QlFVVnFRaXhWUVVGWExFTkJRVUVzU1VGQlNTeEZRVU5rTEZkQlFWY3NRMEZCUXp0RlFVTldMRWRCUVVjc1JVRkJSU3hMUVVGTE8wTkJRMWc3TzBGQlRFd3NRVUZUU1N4WlFWUlJMRU5CUVVNc1QwRkJUeXhCUVZGcVFpeFZRVUZYTEVOQlFVRXNTVUZCU1N4RlFVTmtMRmRCUVZjc1EwRkJRenRGUVVOV0xFZEJRVWNzUlVGQlJTeEpRVUZKTzBOQlExWTdPMEZCV0V3c1FVRmxTU3haUVdaUkxFTkJRVU1zVDBGQlR5eEJRV05xUWl4VlFVRlhMRU5CUVVFc1JVRkJSU3hGUVVOYUxGZEJRVmNzUTBGQlF6dEZRVU5XTEVsQlFVa3NSVUZCUlN4SlFVRkpPMFZCUTFZc1MwRkJTeXhGUVVGRkxFbEJRVWs3UTBGRFdqczdRVUZzUWt3c1FVRnZRa1VzV1VGd1FsVXNRMEZCUXl4UFFVRlBMRUZCYjBKcVFpeExRVUZMTEVOQlFVTTdSVUZEVEN4UFFVRlBMRVZCUVVVc1JVRkJSVHREUVV0YU96dEJRVEZDU0N4QlFYVkNTU3haUVhaQ1VTeERRVUZETEU5QlFVOHNRVUZ2UW1wQ0xFdEJRVXNzUTBGSFNpeFhRVUZYTEVOQlFVTTdSVUZEVml4UFFVRlBMRVZCUVVVc1NVRkJTVHREUVVOa0luMD0gKi9cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm1haW4taGVhZGVyID4gZGl2IHtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogZW5kO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogZW5kO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICB9XG5cbiAgLmhwLW5hdmlnYXRpb24gYSB7XG4gICAgZm9udC1zaXplOiA4MHB4O1xuICB9XG5cbiAgLmNvbnRlbnQtZ3JpZCB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBzdGFydDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG5cbiAgLmNvbC0xIHtcbiAgICB3aWR0aDogMzMuMzMlO1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgICAgIC1tcy1mbGV4OiAwIDAgMzMuMzMlO1xuICAgICAgICAgICAgZmxleDogMCAwIDMzLjMzJTtcbiAgfVxuXG4gIC5jb2wtMiB7XG4gICAgd2lkdGg6IDY2LjY3JTtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDY2LjY3JTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCA2Ni42NyU7XG4gIH1cblxuICAuY29sLTMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgICAgIC1tcy1mbGV4OiAwIDAgMTAwJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlO1xuICB9XG5cbiAgLnByb2plY3QtZ3JpZCBhcnRpY2xlIHtcbiAgICB3aWR0aDogMzMuMzMlO1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgICAgIC1tcy1mbGV4OiAwIDAgMzMuMzMlO1xuICAgICAgICAgICAgZmxleDogMCAwIDMzLjMzJTtcbiAgfVxuXG4gIC5wcm9qZWN0LWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24gKyAyKSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTM1cHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zNXB4KTtcbiAgfVxuXG4gIC5wcm9qZWN0LWdyaWQtaW5uZXIge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBzdGFydDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBwYWRkaW5nLXRvcDogNzBweDtcbiAgfVxuXG4gIC5wcmVzcy1saXN0aW5nID4gZGl2IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cblxuICAub3V0bGV0LWdyaWQge1xuICAgIHdpZHRoOiA3NSU7XG4gIH1cblxuICAub3V0bGV0LWdyaWQgbmF2IHtcbiAgICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XG4gICAgcG9zaXRpb246IHN0aWNreTtcbiAgICB0b3A6IDcwcHg7XG4gIH1cblxuICAub3V0bGV0LWdyaWQgbGkge1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgICAgIC1tcy1mbGV4OiAwIDAgMjUlO1xuICAgICAgICAgICAgZmxleDogMCAwIDI1JTtcbiAgICB3aWR0aDogMjUlO1xuICB9XG5cbiAgLmFydGljbGVzIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDIwJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAyMCU7XG4gICAgd2lkdGg6IDIwJTtcbiAgfVxuXG4gIC5wZW9wbGUtZ3JpZCBhcnRpY2xlIHtcbiAgICB3aWR0aDogMzMuMzMlO1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgICAgIC1tcy1mbGV4OiAwIDAgMzMuMzMlO1xuICAgICAgICAgICAgZmxleDogMCAwIDMzLjMzJTtcbiAgfVxuXG4gIC5wZW9wbGUtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbiArIDIpIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzVweCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTM1cHgpO1xuICB9XG5cbiAgLnBlb3BsZS1ncmlkLWlubmVyIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBzdGFydDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIGJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgYSxcbiAgYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlciBzcGFuLFxuICBib2R5LnByb2plY3QtZGV0YWlsIC5tYWluLWhlYWRlciBhLFxuICBib2R5LnByb2plY3QtZGV0YWlsIC5tYWluLWhlYWRlciBzcGFuIHtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgfVxuXG4gIGJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgYTpob3ZlcixcbiAgYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlciBhOmZvY3VzLFxuICBib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIHNwYW46aG92ZXIsXG4gIGJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgc3Bhbjpmb2N1cyxcbiAgYm9keS5wcm9qZWN0LWRldGFpbCAubWFpbi1oZWFkZXIgYTpob3ZlcixcbiAgYm9keS5wcm9qZWN0LWRldGFpbCAubWFpbi1oZWFkZXIgYTpmb2N1cyxcbiAgYm9keS5wcm9qZWN0LWRldGFpbCAubWFpbi1oZWFkZXIgc3Bhbjpob3ZlcixcbiAgYm9keS5wcm9qZWN0LWRldGFpbCAubWFpbi1oZWFkZXIgc3Bhbjpmb2N1cyB7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBidXR0b24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IGEge1xuICAgIHBhZGRpbmc6IDAgMTJweDtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYge1xuICAgIG1hcmdpbjogMCAtMTJweDtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgdWwubWVudSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IHVsLm1lbnUgPiBsaTpob3ZlciAuc3ViLW1lbnUsXG4gIC5tYWluLWhlYWRlciBuYXYgdWwubWVudSA+IGxpLmN1cnJlbnQtbWVudS1pdGVtIC5zdWItbWVudSxcbiAgLm1haW4taGVhZGVyIG5hdiB1bC5tZW51ID4gbGkuY3VycmVudC1tZW51LWFuY2VzdG9yIC5zdWItbWVudSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgLnN1Yi1tZW51IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMDAlO1xuICAgIHJpZ2h0OiAwO1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgLnN1Yi1tZW51IGEsXG4gIC5tYWluLWhlYWRlciBuYXYgLnN1Yi1tZW51IHNwYW4ge1xuICAgIHBhZGRpbmc6IDEwcHggMTJweCAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLnNlY3Rpb24taW5uZXIge1xuICAgIHBhZGRpbmc6IDAgOTJweDtcbiAgfVxuXG4gIC5ocC1uYXZpZ2F0aW9uIGEge1xuICAgIGZvbnQtc2l6ZTogMTU1cHg7XG4gIH1cblxuICAuY29udGVudC1ncmlkIHtcbiAgICBtYXJnaW46IDAgNjBweDtcbiAgfVxuXG4gIC5jb250ZW50LWdyaWQgW2NsYXNzXj1cImNvbFwiXSB7XG4gICAgcGFkZGluZzogMTJweDtcbiAgfVxuXG4gIC5ncmlkLXRpdGxlIGg0IHtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gIH1cblxuICAucHJvamVjdC1ncmlkIGFydGljbGUge1xuICAgIHBhZGRpbmc6IDEycHg7XG4gIH1cblxuICAucHJvamVjdC1ncmlkIGFydGljbGU6bnRoLWNoaWxkKDNuICsgMikge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MHB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNzBweCk7XG4gIH1cblxuICAucHJvamVjdC1ncmlkLWlubmVyIHtcbiAgICBtYXJnaW46IDAgNjBweDtcbiAgICBwYWRkaW5nLXRvcDogMzVweDtcbiAgfVxuXG4gIC5wZW9wbGUtZ3JpZCBhcnRpY2xlIHtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICB9XG5cbiAgLnBlb3BsZS1ncmlkIGFydGljbGU6bnRoLWNoaWxkKDNuICsgMikge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MHB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNzBweCk7XG4gIH1cblxuICAucGVvcGxlLWdyaWQtaW5uZXIge1xuICAgIG1hcmdpbjogMCA2MHB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjQuOXB4KSB7XG4gIGJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgLm9wZW4gaDEgYSxcbiAgYm9keS5wcm9qZWN0LWRldGFpbCAubWFpbi1oZWFkZXIgLm9wZW4gaDEgYSB7XG4gICAgY29sb3I6ICMxRTMxNDE7XG4gIH1cblxuICBib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIC5vcGVuIGgxIGE6aG92ZXIsXG4gIGJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgLm9wZW4gaDEgYTpmb2N1cyxcbiAgYm9keS5wcm9qZWN0LWRldGFpbCAubWFpbi1oZWFkZXIgLm9wZW4gaDEgYTpob3ZlcixcbiAgYm9keS5wcm9qZWN0LWRldGFpbCAubWFpbi1oZWFkZXIgLm9wZW4gaDEgYTpmb2N1cyB7XG4gICAgY29sb3I6IHJnYmEoMzAsIDQ5LCA2NSwgMC40KTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciAuaGFtYnVyZ2VyLm9wZW4gKyBuYXYge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMCUpO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAxMDAlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gICAgcGFkZGluZzogNjBweCAyMHB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiA+IGRpdiB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiAuc3ViLW1lbnUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiAuc3ViLW1lbnUgYSxcbiAgLm1haW4taGVhZGVyIG5hdiAuc3ViLW1lbnUgc3BhbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogNXB4IDEwcHg7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IC5tZW51ID4gbGkge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luOiAxMHB4IDA7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IC5tZW51ID4gbGkgPiBhIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAxO1xuICAgICAgICAtbXMtZmxleC1wb3NpdGl2ZTogMTtcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgLm1lbnUgPiBsaSA+IGJ1dHRvbiB7XG4gICAgd2lkdGg6IDMycHg7XG4gICAgaGVpZ2h0OiAzMnB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXI6IDA7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IC5tZW51ID4gbGkgPiBidXR0b246YmVmb3JlLFxuICAubWFpbi1oZWFkZXIgbmF2IC5tZW51ID4gbGkgPiBidXR0b246YWZ0ZXIge1xuICAgIHdpZHRoOiAxNnB4O1xuICAgIGhlaWdodDogMnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDE1cHg7XG4gICAgbGVmdDogOHB4O1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZDogIzFFMzE0MTtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiAubWVudSA+IGxpID4gYnV0dG9uOmFmdGVyIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgLm1lbnUgPiBsaSA+IGJ1dHRvbiBzcGFuIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDFweDtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogLTFweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gICAgYm9yZGVyOiAwO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiAubWVudSA+IGxpLmN1cnJlbnQtbWVudS1pdGVtID4gYnV0dG9uOmFmdGVyIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IC5tZW51ID4gbGkuY3VycmVudC1tZW51LWl0ZW0gLnN1Yi1tZW51IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjcuOXB4KSB7XG4gIC5jb250ZW50LWdyaWQgLmNvbC0xIGltZyB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWF4LWhlaWdodDogNTIwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuICB9XG59IiwiLypcbiAqICBPd2wgQ2Fyb3VzZWwgLSBBbmltYXRlIFBsdWdpblxuICovXG4ub3dsLWNhcm91c2Vse1xuXHQuYW5pbWF0ZWQge1xuXHRcdGFuaW1hdGlvbi1kdXJhdGlvbjogMTAwMG1zO1xuXHRcdGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG5cdH1cblx0Lm93bC1hbmltYXRlZC1pbiB7XG5cdFx0ei1pbmRleDogMDtcblx0fVxuXHQub3dsLWFuaW1hdGVkLW91dCB7XG5cdFx0ei1pbmRleDogMTtcblx0fVxuXHQuZmFkZU91dCB7XG5cdFx0YW5pbWF0aW9uLW5hbWU6IGZhZGVPdXQ7XG5cdH1cbn1cblxuQGtleWZyYW1lcyBmYWRlT3V0IHtcblx0MCUge1xuXHRcdG9wYWNpdHk6IDE7XG5cdH1cblxuXHQxMDAlIHtcblx0XHRvcGFjaXR5OiAwO1xuXHR9XG59XG4iLCIvKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBBdXRvIEhlaWdodCBQbHVnaW5cbiAqL1xuXG4ub3dsLWhlaWdodCB7XG5cdHRyYW5zaXRpb246IGhlaWdodCA1MDBtcyBlYXNlLWluLW91dDtcbn1cbiIsIi8qXG4gKiBcdE93bCBDYXJvdXNlbCAtIExhenkgTG9hZCBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIHtcblx0Lm93bC1pdGVtIHtcblx0XHQub3dsLWxhenkge1xuXHRcdFx0XHRvcGFjaXR5OiAwO1xuXHRcdFx0XHR0cmFuc2l0aW9uOiBvcGFjaXR5IDQwMG1zIGVhc2U7XG5cdFx0fVxuXG5cdFx0LyoqXG5cdFx0XHRUaGlzIGlzIGludHJvZHVjZWQgZHVlIHRvIGEgYnVnIGluIElFMTEgd2hlcmUgbGF6eSBsb2FkaW5nIGNvbWJpbmVkIHdpdGggYXV0b2hlaWdodCBwbHVnaW4gY2F1c2VzIGEgd3Jvbmdcblx0XHRcdGNhbGN1bGF0aW9uIG9mIHRoZSBoZWlnaHQgb2YgdGhlIG93bC1pdGVtIHRoYXQgYnJlYWtzIHBhZ2UgbGF5b3V0c1xuXHRcdCAqL1xuXHRcdC5vd2wtbGF6eVtzcmNePVwiXCJdLCAub3dsLWxhenk6bm90KFtzcmNdKSB7XG5cdFx0XHRtYXgtaGVpZ2h0OiAwO1xuXHRcdH1cblxuXHRcdGltZy5vd2wtbGF6eSB7XG5cdFx0XHR0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuXHRcdH1cblx0fVxufVxuXG4iLCIkb3dsLWltYWdlLXBhdGg6IFwiXCIgIWRlZmF1bHQ7XG5cbi8qXG4gKiBcdE93bCBDYXJvdXNlbCAtIFZpZGVvIFBsdWdpblxuICovXG5cbi5vd2wtY2Fyb3VzZWx7XG5cdC5vd2wtdmlkZW8td3JhcHBlciB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRiYWNrZ3JvdW5kOiAjMDAwO1xuXHR9XG5cblx0Lm93bC12aWRlby1wbGF5LWljb24ge1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRoZWlnaHQ6IDgwcHg7XG5cdFx0d2lkdGg6IDgwcHg7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHRvcDogNTAlO1xuXHRcdG1hcmdpbi1sZWZ0OiAtNDBweDtcblx0XHRtYXJnaW4tdG9wOiAtNDBweDtcblx0XHRiYWNrZ3JvdW5kOiB1cmwoXCIjeyRvd2wtaW1hZ2UtcGF0aH1vd2wudmlkZW8ucGxheS5wbmdcIikgbm8tcmVwZWF0O1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHR6LWluZGV4OiAxO1xuXHRcdC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdHRyYW5zaXRpb246IHRyYW5zZm9ybSAxMDBtcyBlYXNlO1xuXHR9XG5cblx0Lm93bC12aWRlby1wbGF5LWljb246aG92ZXIge1xuXHRcdHRyYW5zZm9ybTogc2NhbGUoMS4zLCAxLjMpO1xuXHR9XG5cblx0Lm93bC12aWRlby1wbGF5aW5nIC5vd2wtdmlkZW8tdG4sXG5cdC5vd2wtdmlkZW8tcGxheWluZyAub3dsLXZpZGVvLXBsYXktaWNvbiB7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0fVxuXG5cdC5vd2wtdmlkZW8tdG4ge1xuXHRcdG9wYWNpdHk6IDA7XG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG5cdFx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcblx0XHRiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG5cdFx0dHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBlYXNlO1xuXHR9XG5cblx0Lm93bC12aWRlby1mcmFtZSB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG59XG4iLCIvKlxuICogXHREZWZhdWx0IHRoZW1lIC0gT3dsIENhcm91c2VsIENTUyBGaWxlXG4gKi9cblxuJGNvbG9yLWJhc2U6XHRcdFx0Izg2OTc5MSAhZGVmYXVsdDtcbiRjb2xvci13aGl0ZTpcdFx0XHQjRkZGICFkZWZhdWx0O1xuJGNvbG9yLWdyYXk6XHRcdFx0I0Q2RDZENiAhZGVmYXVsdDtcblxuLy9uYXZcblxuJG5hdi1jb2xvcjogXHRcdFx0JGNvbG9yLXdoaXRlICFkZWZhdWx0O1xuJG5hdi1jb2xvci1ob3ZlcjpcdFx0JGNvbG9yLXdoaXRlICFkZWZhdWx0O1xuJG5hdi1mb250LXNpemU6IFx0XHQxNHB4ICFkZWZhdWx0O1xuJG5hdi1yb3VuZGVkOiBcdFx0XHQzcHggIWRlZmF1bHQ7XG4kbmF2LW1hcmdpbjogXHRcdFx0NXB4ICFkZWZhdWx0O1xuJG5hdi1wYWRkaW5nOiBcdFx0XHQ0cHggN3B4ICFkZWZhdWx0O1xuJG5hdi1iYWNrZ3JvdW5kOiBcdFx0JGNvbG9yLWdyYXkgIWRlZmF1bHQ7XG4kbmF2LWJhY2tncm91bmQtaG92ZXI6XHQkY29sb3ItYmFzZSAhZGVmYXVsdDtcbiRuYXYtZGlzYWJsZWQtb3BhY2l0eTogXHQwLjUgIWRlZmF1bHQ7XG5cbi8vZG90c1xuXG4kZG90LXdpZHRoOlx0XHRcdFx0MTBweCAhZGVmYXVsdDtcbiRkb3QtaGVpZ2h0Olx0XHRcdDEwcHggIWRlZmF1bHQ7XG4kZG90LXJvdW5kZWQ6XHRcdFx0MzBweCAhZGVmYXVsdDtcbiRkb3QtbWFyZ2luOiBcdFx0XHQ1cHggN3B4ICFkZWZhdWx0O1xuJGRvdC1iYWNrZ3JvdW5kOlx0XHQkY29sb3ItZ3JheSAhZGVmYXVsdDtcbiRkb3QtYmFja2dyb3VuZC1hY3RpdmU6XHQkY29sb3ItYmFzZSAhZGVmYXVsdDtcblxuQGltcG9ydCAndGhlbWUnO1xuIiwiXG4ub3dsLXRoZW1lIHtcblx0Ly8gU3R5bGluZyBOZXh0IGFuZCBQcmV2IGJ1dHRvbnNcblx0Lm93bC1uYXYge1xuXHRcdG1hcmdpbi10b3A6IDEwcHg7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cblx0XHRbY2xhc3MqPSdvd2wtJ10ge1xuXHRcdFx0Y29sb3I6ICRuYXYtY29sb3I7XG5cdFx0XHRmb250LXNpemU6ICRuYXYtZm9udC1zaXplO1xuXHRcdFx0bWFyZ2luOiAkbmF2LW1hcmdpbjtcblx0XHRcdHBhZGRpbmc6ICRuYXYtcGFkZGluZztcblx0XHRcdGJhY2tncm91bmQ6ICRuYXYtYmFja2dyb3VuZDtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHRcdGJvcmRlci1yYWRpdXM6IDNweDtcblxuXHRcdFx0Jjpob3ZlciB7XG5cdFx0XHRcdGJhY2tncm91bmQ6ICRuYXYtYmFja2dyb3VuZC1ob3Zlcjtcblx0XHRcdFx0Y29sb3I6JG5hdi1jb2xvci1ob3Zlcjtcblx0XHRcdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdFx0fVxuXHRcdH1cblx0XHQuZGlzYWJsZWQge1xuXHRcdFx0b3BhY2l0eTogJG5hdi1kaXNhYmxlZC1vcGFjaXR5O1xuXHRcdFx0Y3Vyc29yOiBkZWZhdWx0O1xuXHRcdH1cblx0fVxuXG5cdC8vIFN0eWxpbmcgZG90c1xuXHQub3dsLW5hdi5kaXNhYmxlZCArIC5vd2wtZG90cyB7XG5cdFx0bWFyZ2luLXRvcDogMTBweDtcblx0fVxuXG5cdC5vd2wtZG90cyB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cblx0XHQub3dsLWRvdCB7XG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0XHR6b29tOiAxO1xuXHRcdFx0KmRpc3BsYXk6IGlubGluZTtcblxuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdHdpZHRoOiAkZG90LXdpZHRoO1xuXHRcdFx0XHRoZWlnaHQ6ICRkb3QtaGVpZ2h0O1xuXHRcdFx0XHRtYXJnaW46ICRkb3QtbWFyZ2luO1xuXHRcdFx0XHRiYWNrZ3JvdW5kOiAkZG90LWJhY2tncm91bmQ7XG5cdFx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdFx0XHQtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IHZpc2libGU7XG5cdFx0XHRcdHRyYW5zaXRpb246IG9wYWNpdHkgMjAwbXMgZWFzZTtcblx0XHRcdFx0Ym9yZGVyLXJhZGl1czogJGRvdC1yb3VuZGVkO1xuXHRcdFx0fVxuXG5cdFx0XHQmLmFjdGl2ZSxcblx0XHRcdCY6aG92ZXIge1xuXHRcdFx0XHRzcGFuIHtcblx0XHRcdFx0XHRiYWNrZ3JvdW5kOiAkZG90LWJhY2tncm91bmQtYWN0aXZlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG4iLCIqIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbnVsLFxub2wge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5hIHtcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIC8vIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLnNyLW9ubHkge1xuICBAaW5jbHVkZSBzck9ubHk7XG59XG5cbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiAkYm9sZDtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAkY29weUZGO1xufVxuIiwiQG1peGluIGNvbnRlbnRXaWR0aCB7XG4gIG1heC13aWR0aDogJG14VztcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwICRndXR0ZXI7XG59XG5cbkBtaXhpbiBob3ZlciB7XG4gICY6aG92ZXIsXG4gICY6Zm9jdXMge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBzck9ubHkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwwLDAsMCk7XG4gIGJvcmRlcjogMDtcbn1cblxuQG1peGluIGltZ0NvdmVyIHtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgbWluLXdpZHRoOiAxMDAlO1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwO1xuXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcblxuICBAc3VwcG9ydHMgKG9iamVjdC1maXQ6IGNvdmVyKSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB9XG59XG4iLCJib2R5IHtcbiAgJi5mcm9udC1wYWdlLFxuICAmLnByb2plY3QtZGV0YWlsIHtcbiAgICAgPiBtYWluIHtcbiAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgei1pbmRleDogMDtcbiAgICAgfVxuXG4gICAgIC5tYWluLWhlYWRlciB7XG4gICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgPiBkaXYge1xuICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICB9XG4gICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICBoZWlnaHQ6IDE1MXB4O1xuICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgIHotaW5kZXg6IDA7XG4gICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDBkZWcscmdiYSgkYmxhY2ssMCkgMCUsIHJnYmEoJGJsYWNrLC4zKSAxMDAlKTtcbiAgICAgICB9XG5cbiAgICAgICBoMSBhIHtcbiAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG5cbiAgICAgICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgICAgICAgY29sb3I6IHJnYmEoJHdoaXRlLC40KTtcbiAgICAgICAgIH1cbiAgICAgICB9XG5cbiAgICAgICBAbWVkaWEgI3skbWVkaWFUb2dnbGVIZWFkZXJ9IHtcbiAgICAgICAgICAub3BlbiBoMSBhIHtcbiAgICAgICAgICAgIGNvbG9yOiAkcHJpbWFyeTtcblxuICAgICAgICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAgICAgICBjb2xvcjogcmdiYSgkcHJpbWFyeSwuNCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgIH1cblxuICAgICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgICAgIGEsXG4gICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcblxuICAgICAgICAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICAgICAgICAgY29sb3I6IHJnYmEoJHdoaXRlLC40KTtcbiAgICAgICAgICAgfVxuICAgICAgICAgfVxuICAgICAgIH1cblxuICAgICAgIC5oYW1idXJnZXI6bm90KC5vcGVuKSB7XG4gICAgICAgICBzcGFuLFxuICAgICAgICAgJjpiZWZvcmUsXG4gICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICAgfVxuICAgICAgIH1cblxuXG4gICAgIH1cbiAgIH1cblxuICAgJi5mcm9udC1wYWdlIHtcbiAgICAgID4gbWFpbiA+IHNlY3Rpb24gPiBkaXYge1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgfVxuICAgfVxufVxuXG5AaW1wb3J0ICdjb3B5L19iYXNlJztcbkBpbXBvcnQgJ2hlYWRlci9faGVhZGVyJztcbkBpbXBvcnQgJ2Zvb3Rlci9fZm9vdGVyJztcbkBpbXBvcnQgJ19wYWdlJztcbkBpbXBvcnQgJ19mcm9udC1wYWdlJztcbiIsIi8vIFNQQUNJTkdcbiRteFc6IDE2MDBweDtcbiRndXR0ZXI6IDIwcHg7XG5cbi8vIENPTE9SU1xuJGJsYWNrOiAjMDAwMDAwO1xuJHdoaXRlOiAjRkZGRkZGO1xuXG4kcHJpbWFyeTogIzFFMzE0MTtcbiRzZWNvbmRhcnk6ICM3MDcwNzA7XG5cbiRhY2NlbnQtMTogIzA3MTQ0RTtcblxuLy8gRk9OVFNcbiRoZWFkaW5nRkY6ICdFeHBsZXR1cyBTYW5zJywgY3Vyc2l2ZTtcbiRjb3B5RkY6ICdBc3Npc3RhbnQnLCBzYW5zLXNlcmlmO1xuJGx0OiAzMDA7XG4kcmVnOiA0MDA7XG4kYm9sZDogNzAwO1xuXG4vLyBCUkVBS1BPSU5UU1xuJG1lZGlhWHM6IFwic2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweClcIjtcbiRtZWRpYVBob25lOiBcInNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3LjlweClcIjtcbiRtZWRpYVRhYmxldDogXCJzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KVwiO1xuJG1lZGlhVGFibGV0T25seTogXCJzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNC45cHgpXCI7XG4kbWVkaWFUb2dnbGVIZWFkZXI6IFwic2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI0LjlweClcIjtcbiRtZWRpYURlc2t0b3A6IFwic2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpXCI7XG4kbWVkaWFGdWxsOiBcInNjcmVlbiBhbmQgKG1pbi13aWR0aDogI3skbXhXfSlcIjtcblxuLy8gRElNRU5TSU9OU1xuJGhlYWRlckhlaWdodDogNzBweDtcbiIsImgxLC5oMSB7XG4gIGZvbnQtZmFtaWx5OiAkY29weUZGO1xuICBmb250LXdlaWdodDogJGx0O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDI1cHg7XG59XG5cbmgyLC5oMiB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICBmb250LXNpemU6IDMwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxpbmUtaGVpZ2h0OiAoNDAgLyAzMCkgKiAxZW07XG4gIGZvbnQtd2VpZ2h0OiAkYm9sZDtcbn1cbmgzLC5oMyB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICBmb250LXNpemU6IDI0cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxpbmUtaGVpZ2h0OiAoNDAgLyAzMCkgKiAxZW07XG4gIGZvbnQtd2VpZ2h0OiAkYm9sZDtcbn1cbmg1LC5oNSB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICBmb250LXNpemU6IDE4cHg7XG59XG4iLCJAaW1wb3J0ICdoZWFkaW5ncyc7XG5cbnAge1xuICAvL2NvbG9yOiAkcHJpbWFyeTtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogKDI3IC8gMjEpICogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG4iLCIubWFpbi1oZWFkZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAkaGVhZGVySGVpZ2h0O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogMTA7XG4gIGJhY2tncm91bmQ6IHJnYmEoJHdoaXRlLC45OSk7XG5cbiAgLmxvZ2dlZGluICYge1xuICAgIHRvcDogMzJweDtcbiAgfVxuXG4gIGgxIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMjA7XG4gIH1cblxuICA+IGRpdiB7XG4gICAgQGluY2x1ZGUgY29udGVudFdpZHRoO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICB9XG4gIH1cbiAgYnV0dG9uIHtcbiAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIC5oYW1idXJnZXIge1xuICAgIHdpZHRoOiAzMnB4O1xuICAgIGhlaWdodDogMzJweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgei1pbmRleDogMjA7XG5cbiAgICBzcGFuIHtcblxuICAgIH1cblxuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIsXG4gICAgc3BhbiB7XG4gICAgICB3aWR0aDogMTZweDtcbiAgICAgIGhlaWdodDogMnB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAxNXB4O1xuICAgICAgbGVmdDogOHB4O1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuICAgICAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gICAgICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xuICAgIH1cblxuICAgICY6YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNnB4KTtcbiAgICB9XG4gICAgJjphZnRlciB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNnB4KTtcbiAgICB9XG5cbiAgICAmLm9wZW4ge1xuICAgICAgJjpiZWZvcmUge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICB9XG4gICAgICAmOmFmdGVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgIH1cbiAgICAgIHNwYW4ge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgI3skbWVkaWFUb2dnbGVIZWFkZXJ9IHtcbiAgICAgICAgKyBuYXYge1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBoMSB7XG5cbiAgfVxuXG4gIGEge1xuICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICBjb2xvcjogJHNlY29uZGFyeTtcbiAgICB9XG4gIH1cblxuICBAaW1wb3J0ICdfbmF2Jztcbn1cbiIsIm5hdiB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICBmb250LXNpemU6IDE1cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICBhIHtcbiAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgY29sb3I6ICRzZWNvbmRhcnk7XG4gICAgICAvL3RleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB9XG5cbiAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICBwYWRkaW5nOiAwIDEycHg7XG4gICAgfVxuICB9XG4gIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICBtYXJnaW46IDAgLTEycHg7XG4gIH1cblxuICBAbWVkaWEgI3skbWVkaWFUb2dnbGVIZWFkZXJ9IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDEwMCU7XG4gICAgei1pbmRleDogMTA7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgIHBhZGRpbmc6IDYwcHggMjBweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG5cbiAgICA+IGRpdiB7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBvdmVyZmxvdzogYXV0bztcbiAgICB9XG5cbiAgICAuc3ViLW1lbnUge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuXG4gICAgICBhLFxuICAgICAgc3BhbiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAubWVudSB7XG4gICAgICA+IGxpIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIG1hcmdpbjogMTBweCAwO1xuXG4gICAgICAgID4gYSB7XG4gICAgICAgICAgZmxleC1ncm93OiAxO1xuICAgICAgICB9XG5cbiAgICAgICAgPiBidXR0b24ge1xuICAgICAgICAgIHdpZHRoOiAzMnB4O1xuICAgICAgICAgIGhlaWdodDogMzJweDtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgYm9yZGVyOiAwO1xuXG4gICAgICAgICAgJjpiZWZvcmUsXG4gICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICB3aWR0aDogMTZweDtcbiAgICAgICAgICAgIGhlaWdodDogMnB4O1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAxNXB4O1xuICAgICAgICAgICAgbGVmdDogOHB4O1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICBAaW5jbHVkZSBzck9ubHk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi5jdXJyZW50LW1lbnUtaXRlbSB7XG4gICAgICAgICAgPiBidXR0b24ge1xuICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC5zdWItbWVudSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB1bC5tZW51IHtcbiAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICB9XG5cbiAgICA+IGxpIHtcbiAgICAgID4gYSB7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxLjEzcHg7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgICAgJjpob3ZlcixcbiAgICAgICAgJi5jdXJyZW50LW1lbnUtaXRlbSxcbiAgICAgICAgJi5jdXJyZW50LW1lbnUtYW5jZXN0b3Ige1xuICAgICAgICAgIC5zdWItbWVudSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGxpIHtcbiAgICAgICYuY3VycmVudC1tZW51LWl0ZW0sXG4gICAgICAmLmN1cnJlbnQtbWVudS1hbmNlc3RvciB7XG4gICAgICAgID4gYSB7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5zdWItbWVudSB7XG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDEwMCU7XG4gICAgICByaWdodDogMDtcbiAgICAgIG1pbi13aWR0aDogMTAwJTtcblxuICAgICAgYSxcbiAgICAgIHNwYW4ge1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDEycHggMDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIubWFpbi1mb290ZXIge1xuICBwYWRkaW5nOiAkZ3V0dGVyIDA7XG5cbiAgYSB7XG4gICAgY29sb3I6ICRwcmltYXJ5O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gIH1cbiAgPiBkaXYge1xuICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuXG4gIC5jb250YWN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMS43M3B4O1xuICAgIGNvbG9yOiAkcHJpbWFyeTtcblxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgfVxuXG4gID4gZGl2IHtcblxuICB9XG5cbiAgLnNvY2lhbCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhIHtcbiAgICAgIHdpZHRoOiAyNHB4O1xuICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB9XG5cbiAgICAgIHNwYW4ge1xuICAgICAgICBAaW5jbHVkZSBzck9ubHk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5mb290ZXItbG9nbyB7XG4gIHN2ZyB7XG4gICAgd2lkdGg6IDg1cHg7XG4gICAgaGVpZ2h0OiA5OXB4O1xuICAgIGZpbGw6ICRhY2NlbnQtMTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuIiwiYm9keSB7XG4gID4gbWFpbiB7XG4gICAgcGFkZGluZzogNzBweCAwO1xuICAgID4gc2VjdGlvbiB7XG4gICAgICA+IGRpdiB7XG4gICAgICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcbiAgICAgIH1cblxuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuXG4gICAgICAmLmJnLXByaW1hcnkge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgcGFkZGluZzogNjBweCAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBib2R5LnByb2plY3QtZGV0YWlsIHtcbi8vICAgPiBtYWluIHtcbi8vICAgICBwYWRkaW5nOiAwO1xuLy8gICB9XG4vLyB9XG5cbi5zZWN0aW9uLWlubmVyIHtcbiAgcGFkZGluZzogMCAyMHB4O1xuXG4gIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICBwYWRkaW5nOiAwIDkycHg7XG4gIH1cbn1cbiIsIiVpbWdDb3ZlciB7XG4gIEBpbmNsdWRlIGltZ0NvdmVyO1xufVxuLmhwLXNsaWRlc2hvdyB7XG4gIGhlaWdodDogMTAwdmg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAuanMtY2Fyb3VzZWwge1xuICAgIC5vd2wtaXRlbSB7XG4gICAgICBoZWlnaHQ6IDEwMHZoO1xuXG4gICAgICA+IGRpdiB7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgfVxuXG4gICAgICBpbWcge1xuICAgICAgICBAZXh0ZW5kICVpbWdDb3ZlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAub3dsLW5hdiB7XG4gICAgICBidXR0b24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogY2FsYyg1MCUgLSA0N3B4KTtcbiAgICAgICAgd2lkdGg6IDQ2cHg7XG4gICAgICAgIGhlaWdodDogOTVweDtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWFnZXMvYXJyb3cuc3ZnJyk7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG5cbiAgICAgICAgc3BhbiB7XG4gICAgICAgICAgQGluY2x1ZGUgc3JPbmx5O1xuICAgICAgICB9XG5cbiAgICAgICAgJjpmb2N1cyxcbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAgIG9wYWNpdHk6IC41O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC5vd2wtcHJldiB7XG4gICAgICAgIGxlZnQ6ICRndXR0ZXI7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gICAgICB9XG5cbiAgICAgIC5vd2wtbmV4dCB7XG4gICAgICAgIHJpZ2h0OiAkZ3V0dGVyO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5zY3JvbGwtZG93biB7XG4gICAgd2lkdGg6IDQ2cHg7XG4gICAgaGVpZ2h0OiA5NXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206ICRndXR0ZXI7XG4gICAgbGVmdDogY2FsYyg1MCUgLSAxOHB4KTtcbiAgICB6LWluZGV4OiAxMDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltYWdlcy9hcnJvdy5zdmcnKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgb3BhY2l0eTogLjU7XG4gICAgfVxuICB9XG59XG5cbi5ocC1uYXZpZ2F0aW9uIHtcbiAgYSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBmb250LXNpemU6IDUwcHg7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC1zaGFkb3c6IDBweCA0cHggN3B4ICRzZWNvbmRhcnk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgYmFja2dyb3VuZDogJHByaW1hcnk7XG5cbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIGZvbnQtc2l6ZTogODBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICBmb250LXNpemU6IDE1NXB4O1xuICAgIH1cblxuICAgIHNwYW4ge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgei1pbmRleDogMTtcbiAgICB9XG5cbiAgICBpbWcge1xuICAgICAgQGV4dGVuZCAlaW1nQ292ZXI7XG4gICAgICB6LWluZGV4OiAwO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gICAgICBmaWx0ZXI6IGJsdXIoMThweCk7XG5cbiAgICAgIEBzdXBwb3J0cyAob2JqZWN0LWZpdDogY292ZXIpIHtcbiAgICAgICAgd2lkdGg6IDEwMyU7XG4gICAgICAgIGhlaWdodDogMTAzJTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGltZyB7XG4gICAgICAgIGZpbHRlcjogYmx1cigwKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5jb250ZW50LWdyaWQge1xuICBtYXJnaW46IDAgLTZweDtcblxuICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cblxuICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgbWFyZ2luOiAwIDYwcHg7XG4gIH1cblxuICBbY2xhc3NePVwiY29sXCJdIHtcbiAgICBwYWRkaW5nOiA2cHg7XG5cbiAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICBwYWRkaW5nOiAxMnB4O1xuICAgIH1cbiAgfVxuXG4gIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgQG1lZGlhICN7JG1lZGlhUGhvbmV9IHtcbiAgICAuY29sLTEge1xuICAgICAgaW1nIHtcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIG1heC1oZWlnaHQ6IDUyMHB4O1xuICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAuY29sLTEge1xuICAgIHdpZHRoOiAzMy4zMyU7XG4gICAgZmxleDogMCAwIDMzLjMzJTtcbiAgfVxuXG4gIC5jb2wtMiB7XG4gICAgd2lkdGg6IDY2LjY3JTtcbiAgICBmbGV4OiAwIDAgNjYuNjclO1xuICB9XG5cbiAgLmNvbC0zIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBmbGV4OiAwIDAgMTAwJTtcbiAgfVxufVxuIiwiLy8gLm1hcC13cmFwcGVyIHtcbi8vICAgd2lkdGg6IDEwMCU7XG4vLyAgIHBhZGRpbmctYm90dG9tOiA3NSU7XG4vLyAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbi8vICAgYm9yZGVyOiAxcHggc29saWQgI0FBQTtcbi8vXG4vLyAgID4gZGl2IHtcbi8vICAgICB3aWR0aDogMTAwJTtcbi8vICAgICBoZWlnaHQ6IDEwMCU7XG4vLyAgICAgcG9zaXRpb246IGFic29sdXRlO1xuLy8gICAgIHRvcDogMDtcbi8vICAgICBsZWZ0OiAwO1xuLy8gICB9XG4vLyB9XG5cbi5tYXAge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1ib3R0b206IDcyJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gIGlmcmFtZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgfVxufVxuIiwiLy8gU0lOR0xFIFBST0pFQ1Rcbi5wcm9qZWN0LWhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC1oZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuXG4gIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLnByb2plY3QtdGl0bGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHRleHQtc2hhZG93OiAwIDAgMnB4ICRibGFjaztcbiAgICBwYWRkaW5nLWJvdHRvbTogNDVweDtcblxuICAgIHNwYW4sXG4gICAgc21hbGwge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgc21hbGwge1xuICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICB9XG5cbiAgICA+IGRpdiB7XG4gICAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gICAgfVxuICB9XG59XG5cbi5ncmlkLXRpdGxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwIDI0cHggMzhweCAyNHB4O1xuICBjb2xvcjogJHdoaXRlO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdGV4dC1zaGFkb3c6IDBweCAwcHggMnB4ICRibGFjaztcblxuICBoNCB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgfVxuICB9XG5cbiAgc21hbGwge1xuICAgIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICAgIGxpbmUtaGVpZ2h0OiAoNDAgLyAzMCkgKiAxZW07XG4gICAgZm9udC13ZWlnaHQ6ICRib2xkO1xuICAgIGZvbnQtc2l6ZTogKDMwIC8gMjQpICogMWVtO1xuICB9XG59XG5cbi5wcm9qZWN0LW1haW4ge1xuICA+IGRpdiB7XG4gICAgQGluY2x1ZGUgY29udGVudFdpZHRoO1xuICB9XG59XG5cbi5wcm9qZWN0LXN0YXRzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIDFmcjtcbiAgZ3JpZC1nYXA6IDVweCAyMHB4O1xuICBtYXJnaW4tdG9wOiAzZW07XG5cbiAgZHQge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIH1cbn1cblxuLy8gUFJPSkVDVCBHUklEXG4ucmVsYXRlZC1wcm9qZWN0cyB7XG4gIHBhZGRpbmc6IDcwcHggMDtcbn1cblxuLnByb2plY3QtZ3JpZCB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICA+IGRpdiB7XG4gICAgQGluY2x1ZGUgY29udGVudFdpZHRoO1xuICB9XG5cbiAgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICBhcnRpY2xlIHtcbiAgICBwYWRkaW5nOiA2cHg7XG5cbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIHdpZHRoOiAzMy4zMyU7XG4gICAgICBmbGV4OiAwIDAgMzMuMzMlO1xuICAgIH1cblxuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIHBhZGRpbmc6IDEycHg7XG4gICAgfVxuXG4gICAgJjpudGgtY2hpbGQoM24gKyAyKSB7XG4gICAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zNXB4KTtcbiAgICAgIH1cbiAgICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MHB4KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBhIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY29sb3I6ICR3aGl0ZTtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxNTFweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB6LWluZGV4OiAwO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLHJnYmEoJGJsYWNrLC4zKSAwJSwgcmdiYSgkYmxhY2ssMCkgMTAwJSk7XG4gICAgfVxuICB9XG5cbiAgc21hbGwge1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgfVxuXG4gIC5ncmlkLXRpdGxlIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNDhweDtcbiAgfVxuXG4gICYuYXJjaGl2ZSB7XG4gICAgYmFja2dyb3VuZDogJHByaW1hcnk7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgfVxufVxuXG4ucHJvamVjdC1ncmlkLWlubmVyIHtcbiAgcGFkZGluZzogMCAwIDcwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAwIC02cHg7XG5cbiAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIHBhZGRpbmctdG9wOiA3MHB4O1xuICB9XG5cbiAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgIG1hcmdpbjogMCA2MHB4O1xuICAgIHBhZGRpbmctdG9wOiAzNXB4O1xuICB9XG59XG5cblxuLy8gQGtleWZyYW1lcyB3ZWUge1xuLy8gICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO31cbi8vICAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7fVxuLy8gfVxuLy9cbi8vIGJvZHkge1xuLy8gICBhbmltYXRpb246IHdlZSAxMHMgaW5maW5pdGUgbGluZWFyO1xuLy8gfVxuIiwiLnByZXNzLWxpc3Rpbmcge1xuICBwYWRkaW5nOiA3MHB4IDA7XG5cbiAgPiBkaXYge1xuICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgfVxuICB9XG5cbiAgLmFydGljbGVzIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgYXJ0aWNsZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxLjRlbTtcbiAgICAgIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICBzcGFuOmxhc3QtY2hpbGQge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5vdXRsZXQtZ3JpZCB7XG4gIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgIHdpZHRoOiA3NSU7XG5cbiAgICBuYXYge1xuICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgIHRvcDogJGhlYWRlckhlaWdodDtcbiAgICB9XG4gIH1cblxuICB1bCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luOiAtMTJweDtcbiAgfVxuXG4gIGxpIHtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZzogMTJweDtcblxuICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgZmxleDogMCAwIDI1JTtcbiAgICAgIHdpZHRoOiAyNSU7XG4gICAgfVxuICB9XG5cbiAgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICBzcGFuIHtcbiAgICBAaW5jbHVkZSBzck9ubHk7XG4gIH1cblxuICBhIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjREREREREO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgb3BhY2l0eTogLjI1O1xuICAgIH1cbiAgfVxuXG4gICYudGF4LWFyY2hpdmUge1xuICAgIGEge1xuICAgICAgb3BhY2l0eTogLjI1O1xuXG4gICAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IC43NTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsaS5hY3RpdmUgYSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgfVxufVxuXG4uYXJ0aWNsZXMge1xuICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICBmbGV4OiAwIDAgMjAlO1xuICAgIHdpZHRoOiAyMCU7XG4gIH1cbn1cblxuLnMtbmV3cyB7XG4gIHBhZGRpbmc6IDc1cHggMDtcbn1cbi5uZXdzLWNhcm91c2VsIHtcbiAgYXJ0aWNsZSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHBhZGRpbmc6IDFweDtcblxuICAgIGEge1xuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgJHByaW1hcnk7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgkcHJpbWFyeSwuMik7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC5vd2wtaXRlbSB7XG4gICAgJjpudGgtY2hpbGQoMm4pIHtcbiAgICAgIGFydGljbGUge1xuICAgICAgICBhIHtcbiAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuXG4gICAgICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgkcHJpbWFyeSwuMik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm93bC1zdGFnZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgfVxuXG4gIGFydGljbGUsXG4gIGEge1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuXG4gIC5kYXRlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xuICB9XG59XG4iLCIucGVvcGxlID4gbWFpbiB7XG4gIHBhZGRpbmc6IDcwcHggMDtcbn1cbi5wZW9wbGUtZ3JpZCB7XG4gIGg0IHtcbiAgICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgfVxuICA+IGRpdiB7XG4gICAgQGluY2x1ZGUgY29udGVudFdpZHRoO1xuICB9XG5cbiAgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICAuZ3JpZC10aXRsZSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuXG4gIGFydGljbGUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiA2cHg7XG5cbiAgICBhIHtcbiAgICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgICAgLmdyaWQtdGl0bGUge1xuICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgJjpiZWZvcmUge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxNTFweDtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHotaW5kZXg6IDA7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLHJnYmEoJGJsYWNrLC4zKSAwJSwgcmdiYSgkYmxhY2ssMCkgMTAwJSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICB3aWR0aDogMzMuMzMlO1xuICAgICAgZmxleDogMCAwIDMzLjMzJTtcbiAgICB9XG5cbiAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICBwYWRkaW5nOiAxMnB4O1xuICAgIH1cblxuICAgICY6bnRoLWNoaWxkKDNuICsgMikge1xuICAgICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzVweCk7XG4gICAgICB9XG4gICAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNzBweCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5wZW9wbGUtZ3JpZC1pbm5lciB7XG4gIHBhZGRpbmc6IDY4cHggMCA3MHB4O1xuICBtYXJnaW46IDAgLTZweDtcblxuICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cblxuICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgbWFyZ2luOiAwIDYwcHg7XG4gIH1cbn1cblxuLnBlb3BsZS1iaW8ge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAxMDAlO1xuICB0b3A6IDA7XG4gIHBhZGRpbmc6IDEycHg7XG4gIGRpc3BsYXk6IG5vbmU7XG5cbiAgcCB7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBmb250LXNpemU6IDIxcHg7XG4gICAgbGluZS1oZWlnaHQ6ICgyNyAvIDIxKSAqIDFlbTtcbiAgfVxuXG4gID4gZGl2IHtcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuICAgIHBhZGRpbmc6IDE4cHg7XG4gIH1cblxuICBidXR0b24ge1xuICAgIHdpZHRoOiAyNXB4O1xuICAgIGhlaWdodDogMjVweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyNXB4ICsgMTI7XG4gICAgcmlnaHQ6IDI1cHggKyAxMjtcblxuICAgIGJvcmRlcjogMXB4IHNvbGlkICR3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB0ZXh0LWluZGVudDogLTk5OTlweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcblxuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgd2lkdGg6IDE0MCU7XG4gICAgICBoZWlnaHQ6IDFweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgIH1cblxuICAgICY6YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoNDVkZWcpO1xuICAgIH1cbiAgICAmOmFmdGVyIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKCR3aGl0ZSwuOSk7XG4gICAgICBib3JkZXItY29sb3I6ICRwcmltYXJ5O1xuXG4gICAgICAmOmJlZm9yZSxcbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLmJpby10aXRsZSB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAzNXB4KTtcbiAgcCB7XG4gICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZSB7XG4gICY6bnRoLWNoaWxkKDNuKSxcbiAgJjpudGgtY2hpbGQoM24rMSkge1xuICAgIC5wZW9wbGUtYmlvIHtcbiAgICAgIHRvcDogLTcwcHg7XG4gICAgfVxuICB9XG5cbiAgJjpudGgtY2hpbGQoM24rMikge1xuICAgIC5wZW9wbGUtYmlvIHtcbiAgICAgIHRvcDogNzBweDtcbiAgICB9XG4gIH1cblxuICAmOm50aC1jaGlsZCgzbikge1xuICAgIC5wZW9wbGUtYmlvIHtcbiAgICAgIGxlZnQ6IGF1dG87XG4gICAgICByaWdodDogMTAwJTtcbiAgICB9XG4gIH1cbiAgJi5vcGVuIHtcbiAgICB6LWluZGV4OiAxMDtcblxuICAgIC5wZW9wbGUtYmlvIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuICB9XG59XG4iXX0= */