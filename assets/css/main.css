/*
 *  Owl Carousel - Core
 */

@import url("https://fonts.googleapis.com/css?family=Assistant:300,400,700|Expletus+Sans:400,700&display=swap");

.owl-carousel {
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1;
}

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden;
  /* fix firefox animation glitch */
}

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  /* fix for flashing background */
  -webkit-transform: translate3d(0px, 0px, 0px);
}

.owl-carousel .owl-wrapper,
.owl-carousel .owl-item {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
}

.owl-carousel .owl-item {
  position: relative;
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

.owl-carousel .owl-item img {
  display: block;
  width: 100%;
}

.owl-carousel .owl-nav.disabled,
.owl-carousel .owl-dots.disabled {
  display: none;
}

.owl-carousel .owl-nav .owl-prev,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-dot {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel .owl-nav button.owl-prev,
.owl-carousel .owl-nav button.owl-next,
.owl-carousel button.owl-dot {
  background: none;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit;
}

.owl-carousel.owl-loaded {
  display: block;
}

.owl-carousel.owl-loading {
  opacity: 0;
  display: block;
}

.owl-carousel.owl-hidden {
  opacity: 0;
}

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden;
}

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
      touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel.owl-grab {
  cursor: move;
  cursor: -webkit-grab;
  cursor: grab;
}

.owl-carousel.owl-rtl {
  direction: rtl;
}

.owl-carousel.owl-rtl .owl-item {
  float: right;
}

/* No Js */

.no-js .owl-carousel {
  display: block;
}

/*
 *  Owl Carousel - Animate Plugin
 */

.owl-carousel .animated {
  -webkit-animation-duration: 1000ms;
          animation-duration: 1000ms;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.owl-carousel .owl-animated-in {
  z-index: 0;
}

.owl-carousel .owl-animated-out {
  z-index: 1;
}

.owl-carousel .fadeOut {
  -webkit-animation-name: fadeOut;
          animation-name: fadeOut;
}

@-webkit-keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

/*
 * 	Owl Carousel - Auto Height Plugin
 */

.owl-height {
  -webkit-transition: height 500ms ease-in-out;
  transition: height 500ms ease-in-out;
}

/*
 * 	Owl Carousel - Lazy Load Plugin
 */

.owl-carousel .owl-item {
  /**
			This is introduced due to a bug in IE11 where lazy loading combined with autoheight plugin causes a wrong
			calculation of the height of the owl-item that breaks page layouts
		 */
}

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-item .owl-lazy[src^=""],
.owl-carousel .owl-item .owl-lazy:not([src]) {
  max-height: 0;
}

.owl-carousel .owl-item img.owl-lazy {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

/*
 * 	Owl Carousel - Video Plugin
 */

.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000;
}

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 5rem;
  width: 5rem;
  left: 50%;
  top: 50%;
  margin-left: -2.5rem;
  margin-top: -2.5rem;
  background: url("owl.video.play.png") no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  -webkit-transition: -webkit-transform 100ms ease;
  transition: -webkit-transform 100ms ease;
  transition: transform 100ms ease;
  transition: transform 100ms ease, -webkit-transform 100ms ease;
}

.owl-carousel .owl-video-play-icon:hover {
  -webkit-transform: scale(1.3, 1.3);
          transform: scale(1.3, 1.3);
}

.owl-carousel .owl-video-playing .owl-video-tn,
.owl-carousel .owl-video-playing .owl-video-play-icon {
  display: none;
}

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%;
}

/*
 * 	Default theme - Owl Carousel CSS File
 */

.owl-theme .owl-nav {
  margin-top: 0.625rem;
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-nav [class*='owl-'] {
  color: #FFF;
  font-size: 0.875rem;
  margin: 0.3125rem;
  padding: 0.25rem 0.4375rem;
  background: #D6D6D6;
  display: inline-block;
  cursor: pointer;
  border-radius: 0.1875rem;
}

.owl-theme .owl-nav [class*='owl-']:hover {
  background: #869791;
  color: #FFF;
  text-decoration: none;
}

.owl-theme .owl-nav .disabled {
  opacity: 0.5;
  cursor: default;
}

.owl-theme .owl-nav.disabled + .owl-dots {
  margin-top: 0.625rem;
}

.owl-theme .owl-dots {
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-dots .owl-dot {
  display: inline-block;
  zoom: 1;
  *display: inline;
}

.owl-theme .owl-dots .owl-dot span {
  width: 0.625rem;
  height: 0.625rem;
  margin: 0.3125rem 0.4375rem;
  background: #D6D6D6;
  display: block;
  -webkit-backface-visibility: visible;
  -webkit-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  border-radius: 1.875rem;
}

.owl-theme .owl-dots .owl-dot.active span,
.owl-theme .owl-dots .owl-dot:hover span {
  background: #869791;
}

* {
  margin: 0;
  padding: 0;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

ul,
ol {
  list-style: none;
}

a {
  -webkit-transition: all .25s;
  transition: all .25s;
}

.sr-only {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

strong {
  font-weight: 700;
}

body {
  font-family: "Assistant", sans-serif;
}

body.front-page > main,
body.projects:not(.project-archive) > main {
  margin-top: 0;
  position: relative;
  z-index: 0;
}

body.front-page .main-header,
body.projects:not(.project-archive) .main-header {
  background: transparent;
}

body.front-page .main-header > div,
body.projects:not(.project-archive) .main-header > div {
  position: relative;
  z-index: 1;
}

body.front-page .main-header:before,
body.projects:not(.project-archive) .main-header:before {
  width: 100%;
  height: 9.4375rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  content: "";
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.3)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.3) 100%);
}

body.front-page .main-header a,
body.projects:not(.project-archive) .main-header a {
  color: #FFFFFF;
}

body.front-page .main-header a:hover,
body.front-page .main-header a:focus,
body.projects:not(.project-archive) .main-header a:hover,
body.projects:not(.project-archive) .main-header a:focus {
  color: rgba(255, 255, 255, 0.4);
}

h1,
.h1 {
  font-family: "Assistant", sans-serif;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 1.5625rem;
}

h2,
.h2 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.875rem;
  text-transform: uppercase;
  line-height: 1.33333em;
  font-weight: 700;
}

h3,
.h3 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.5rem;
  text-transform: uppercase;
  line-height: 1.33333em;
  font-weight: 700;
}

p {
  font-size: 1.125rem;
  line-height: 1.28571em;
  margin-bottom: 1em;
}

.main-header {
  width: 100%;
  height: 4.375rem;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  background: rgba(255, 255, 255, 0.99);
}

.loggedin .main-header {
  top: 2rem;
}

.main-header > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.main-header a {
  color: #1E3141;
  text-decoration: none;
}

.main-header a:hover,
.main-header a:focus {
  color: #707070;
  text-decoration: underline;
}

.main-header nav {
  font-family: "Expletus Sans", cursive;
  font-size: 0.9375rem;
  position: relative;
}

.main-header nav a {
  color: #1E3141;
  text-decoration: none;
}

.main-header nav a:hover,
.main-header nav a:focus {
  color: #707070;
}

.main-header nav ul.menu > li > a {
  text-transform: uppercase;
  letter-spacing: 1.13px;
}

.main-footer > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.main-footer .contact {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-style: normal;
  font-size: 0.9375rem;
  text-transform: uppercase;
  letter-spacing: 1.73px;
  color: #1E3141;
}

.main-footer .contact p {
  margin: 0;
}

.footer-logo svg {
  width: 5.3125rem;
  height: 6.1875rem;
  fill: #07144E;
  display: block;
}

body.page:not(.front-page) > main {
  padding: 4.375rem 0;
}

body.page:not(.front-page) > main > section {
  color: #1E3141;
}

body.page:not(.front-page) > main > section > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

body.page:not(.front-page) > main > section.bg-primary {
  background: #1E3141;
  color: #FFFFFF;
  padding: 3.75rem 0;
}

.section-inner {
  padding: 0 1.25rem;
}

.hp-slideshow .owl-carousel .owl-item img,
.hp-navigation a img {
  min-height: 100%;
  min-width: 100%;
  width: auto;
  height: auto;
  display: block;
  margin: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .hp-slideshow .owl-carousel .owl-item img,
  .hp-navigation a img {
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }
}

.hp-slideshow {
  height: 100vh;
  position: relative;
}

.hp-slideshow .owl-carousel .owl-item {
  height: 100vh;
}

.hp-slideshow .owl-carousel .owl-item > div {
  height: 100%;
  position: relative;
}

.hp-slideshow .owl-carousel .owl-nav button {
  position: absolute;
  top: 50%;
  width: 3.125rem;
  height: 3.125rem;
  border-top: 1px solid #FFFFFF;
  border-right: 1px solid #FFFFFF;
}

.hp-slideshow .owl-carousel .owl-nav button span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.hp-slideshow .owl-carousel .owl-nav .owl-prev {
  left: 0;
}

.hp-slideshow .owl-carousel .owl-nav .owl-next {
  right: 0;
}

.hp-navigation a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
  height: 100vh;
  overflow: hidden;
  font-size: 3.125rem;
  color: #FFFFFF;
  text-align: center;
  text-shadow: 0px 4px 7px #707070;
  text-decoration: none;
  font-family: "Expletus Sans", cursive;
  font-weight: 700;
  background: #1E3141;
}

.hp-navigation a span {
  position: relative;
  z-index: 1;
}

.hp-navigation a img {
  z-index: 0;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-filter: blur(18px);
          filter: blur(18px);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .hp-navigation a img {
    width: 103%;
    height: 103%;
  }
}

.hp-navigation a:hover img {
  -webkit-filter: blur(0);
          filter: blur(0);
}

.content-grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: 0 -0.75rem;
}

.content-grid [class^="col"] {
  padding: 0.75rem;
}

.content-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.col-1 {
  width: 33.33%;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 33.33%;
          flex: 0 0 33.33%;
}

.col-2 {
  width: 66.67%;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 66.67%;
          flex: 0 0 66.67%;
}

.col-3 {
  width: 100%;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
}

.project-hero {
  position: relative;
  max-height: 100vh;
  overflow: hidden;
  margin-bottom: 0.75rem;
}

.project-hero img {
  width: 100%;
  height: auto;
  display: block;
}

.project-hero > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.grid-title {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  padding: 0 1.5rem 2.375rem 1.5rem;
  color: #FFFFFF;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.grid-title small {
  font-family: "Expletus Sans", cursive;
  line-height: 1.33333em;
  font-weight: 700;
  font-size: 1.5rem;
}

.project-main > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.related-projects {
  padding: 4.375rem 0;
}

.project-grid > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.project-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.project-grid article {
  padding: 0.75rem;
  width: 33.33%;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 33.33%;
          flex: 0 0 33.33%;
}

.project-grid article:nth-child(3n + 2) {
  -webkit-transform: translateY(-70px);
          transform: translateY(-70px);
}

.project-grid a {
  display: block;
  position: relative;
  color: #FFFFFF;
}

.project-grid small {
  font-size: 1.3125rem;
}

.project-grid .grid-title {
  padding-bottom: 3rem;
}

.project-grid.archive {
  background: #1E3141;
  color: #FFFFFF;
}

.project-grid-inner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  margin: 0 -0.75rem;
  padding: 4.25rem 0 4.375rem;
  text-align: center;
}

.press-listing {
  padding: 4.375rem 0;
}

.press-listing > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.press-listing .articles {
  font-size: 1.125rem;
}

.press-listing .articles article {
  margin-bottom: 1.4em;
}

.press-listing .articles article span {
  display: block;
}

.press-listing .articles a {
  color: #1E3141;
  text-decoration: none;
}

.press-listing .articles a:hover span:last-child,
.press-listing .articles a:focus span:last-child {
  text-decoration: underline;
}

.outlet-grid ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: -0.75rem;
}

.outlet-grid li {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
  width: 50%;
  padding: 0.75rem;
}

.outlet-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.outlet-grid span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.outlet-grid a {
  -webkit-transition: all .5s;
  transition: all .5s;
  display: block;
  border: 0.0625rem solid #DDDDDD;
}

.outlet-grid a:hover,
.outlet-grid a:focus {
  opacity: .25;
}

.outlet-grid.tax-archive a {
  opacity: .25;
}

.outlet-grid.tax-archive a:hover,
.outlet-grid.tax-archive a:focus {
  opacity: .75;
}

.outlet-grid.tax-archive li.active a {
  opacity: 1;
}

.people > main {
  padding: 4.375rem 0;
}

.people-grid > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.people-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.people-grid .grid-title {
  opacity: 0;
}

.people-grid article {
  padding: 0.75rem;
  width: 33.33%;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 33.33%;
          flex: 0 0 33.33%;
  position: relative;
}

.people-grid article:nth-child(3n + 2) {
  -webkit-transform: translateY(-70px);
          transform: translateY(-70px);
}

.people-grid article a:hover .grid-title,
.people-grid article a:focus .grid-title {
  opacity: 1;
}

.people-grid-inner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  margin: 0 -0.75rem;
  padding: 4.25rem 0 4.375rem;
}

.people-bio {
  width: 100%;
  min-height: 100%;
  position: absolute;
  left: 100%;
  top: 0;
  padding: 0.75rem;
  display: none;
}

.people-bio p {
  color: #FFFFFF;
  font-size: 1.3125rem;
  line-height: 1.28571em;
}

.people-bio > div {
  min-height: 100%;
  background: #1E3141;
  padding: 1.125rem;
}

.people-bio button {
  width: 1.5625rem;
  height: 1.5625rem;
  position: absolute;
  top: 2.3125rem;
  right: 2.3125rem;
  border: 0.0625rem solid #FFFFFF;
  background-color: transparent;
  text-indent: -9999px;
  overflow: hidden;
  cursor: pointer;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio button:before,
.people-bio button:after {
  width: 140%;
  height: 0.0625rem;
  position: absolute;
  top: 50%;
  left: 50%;
  content: "";
  background: #FFFFFF;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio button:before {
  -webkit-transform: translateX(-50%) rotate(45deg);
          transform: translateX(-50%) rotate(45deg);
}

.people-bio button:after {
  -webkit-transform: translateX(-50%) rotate(-45deg);
          transform: translateX(-50%) rotate(-45deg);
}

.people-bio button:hover,
.people-bio button:focus {
  background: rgba(255, 255, 255, 0.9);
  border-color: #1E3141;
}

.people-bio button:hover:before,
.people-bio button:hover:after,
.people-bio button:focus:before,
.people-bio button:focus:after {
  background-color: #1E3141;
}

.bio-title {
  width: calc(100% - 2.1875rem);
}

.bio-title p:first-child {
  text-transform: uppercase;
  margin: 0;
}

.people-grid article:nth-child(3n) .people-bio,
.people-grid article:nth-child(3n+1) .people-bio {
  top: -4.375rem;
}

.people-grid article:nth-child(3n+2) .people-bio {
  top: 4.375rem;
}

.people-grid article:nth-child(3n) .people-bio {
  left: auto;
  right: 100%;
}

.people-grid article.open {
  z-index: 10;
}

.people-grid article.open .people-bio {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media screen and (min-width: 768px) {
  .main-header > div {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }

  .hp-navigation a {
    font-size: 5rem;
  }

  .press-listing > div {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }

  .outlet-grid {
    width: 56.5%;
  }

  .outlet-grid nav {
    position: -webkit-sticky;
    position: sticky;
    top: 4.375rem;
  }

  .outlet-grid li {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.3%;
            flex: 0 0 33.3%;
    width: 33.3%;
  }

  .articles {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 32.2%;
            flex: 0 0 32.2%;
    width: 32.2%;
  }
}

@media screen and (min-width: 1025px) {
  .main-header button {
    display: none;
  }

  .main-header nav a {
    padding: 0 0.75rem;
  }

  .main-header nav {
    margin: 0 -0.75rem;
  }

  .main-header nav ul.menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
  }

  .main-header nav ul.menu > li:hover .sub-menu,
  .main-header nav ul.menu > li:focus .sub-menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }

  .main-header nav .sub-menu {
    display: none;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    position: absolute;
    top: 100%;
    right: 0;
    min-width: 100%;
  }

  .main-header nav .sub-menu a {
    padding-top: 0.625rem;
    display: block;
  }

  .hp-navigation a {
    font-size: 9.6875rem;
  }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3MvX2NvcmUuc2NzcyIsIm1haW4uY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fYW5pbWF0ZS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fYXV0b2hlaWdodC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fbGF6eWxvYWQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3MvX3ZpZGVvLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL190aGVtZS5kZWZhdWx0LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL190aGVtZS5zY3NzIiwiYmFzZS9fcmVzZXQuc2NzcyIsImJhc2UvX21peGlucy5zY3NzIiwic3RydWN0dXJlL19iYXNlLnNjc3MiLCJzdHJ1Y3R1cmUvY29weS9faGVhZGluZ3Muc2NzcyIsImJhc2UvX3ZhcmlhYmxlcy5zY3NzIiwic3RydWN0dXJlL2NvcHkvX2Jhc2Uuc2NzcyIsInN0cnVjdHVyZS9oZWFkZXIvX2hlYWRlci5zY3NzIiwic3RydWN0dXJlL2hlYWRlci9fbmF2LnNjc3MiLCJzdHJ1Y3R1cmUvZm9vdGVyL19mb290ZXIuc2NzcyIsInN0cnVjdHVyZS9fcGFnZS5zY3NzIiwic3RydWN0dXJlL19mcm9udC1wYWdlLnNjc3MiLCJjb21wb25lbnRzL19ncmlkLnNjc3MiLCJmZWVkcy9wcm9qZWN0cy9fYmFzZS5zY3NzIiwiZmVlZHMvcHJlc3MvX2Jhc2Uuc2NzcyIsImZlZWRzL3Blb3BsZS9fYmFzZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHOztBQUNILGdIQUFjOztBQ0dkO0VEQUMsY0FBQTtFQUNBLFlB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WUFDaEIsZ0JBQWdCO0lBQ3hCLGFBQWE7R0FDZDs7RUFFRDtJQUNFLG9CQUFvQjtRQUNoQixvQkFBb0I7WUFDaEIsZ0JBQWdCO0lBQ3hCLGFBQWE7R0FDZDtDQUNGOztBQUVEO0VBQ0U7SUFDRSxjQUFjO0dBQ2Y7O0VBRUQ7SUFDRSxtQkFBZ0I7R0FDakI7O0VBRUQ7SUFDRSxtQkFBZ0I7R0FDakI7O0VBRUQ7SUFDRSxxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCxzQkFBc0I7UUFDbEIsbUJBQW1CO1lBQ2YsMEJBQTBCO0dBQ25DOztFQUVEOztJQUVFLHFCQUFxQjtJQUNyQixxQkFBcUI7SUFDckIsY0FBYztHQUNmOztFQUVEO0lBQ0UsY0FBYztJQUNkLHNCQUFzQjtRQUNsQixtQkFBbUI7WUFDZiwwQkFBMEI7SUFDbEMsbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0dBQ2pCOztFQUVEO0lBQ0Usc0JBQWtCO0lBQ2xCLGVBQWU7R0FDaEI7O0VBRUQ7SUFDRSxxQkFBaUI7R0FDbEI7Q0FDRiIsImZpbGUiOiJ0by5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogIE93bCBDYXJvdXNlbCAtIENvcmVcbiAqL1xuLm93bC1jYXJvdXNlbCB7XG5cdGRpc3BsYXk6IG5vbmU7XG5cdHdpZHRoOiAxMDAlO1xuXHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHQvKiBwb3NpdGlvbiByZWxhdGl2ZSBhbmQgei1pbmRleCBmaXggd2Via2l0IHJlbmRlcmluZyBmb250cyBpc3N1ZSAqL1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHotaW5kZXg6IDE7XG5cblx0Lm93bC1zdGFnZSB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdC1tcy10b3VjaC1hY3Rpb246IHBhbi1ZO1xuXHRcdHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuXHRcdC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyAvKiBmaXggZmlyZWZveCBhbmltYXRpb24gZ2xpdGNoICovXG5cdH1cblxuXHQub3dsLXN0YWdlOmFmdGVyIHtcblx0XHRjb250ZW50OiBcIi5cIjtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRjbGVhcjogYm90aDtcblx0XHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0bGluZS1oZWlnaHQ6IDA7XG5cdFx0aGVpZ2h0OiAwO1xuXHR9XG5cblx0Lm93bC1zdGFnZS1vdXRlciB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0LyogZml4IGZvciBmbGFzaGluZyBiYWNrZ3JvdW5kICovXG5cdFx0LXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpO1xuXHR9XG5cblx0Lm93bC13cmFwcGVyLFxuXHQub3dsLWl0ZW17XG5cdFx0LXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0LW1vei1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0LW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcblx0XHQtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuXHRcdC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLDAsMCk7XG5cdFx0LW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuXHR9XG5cblx0Lm93bC1pdGVtIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0bWluLWhlaWdodDogMXB4O1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHRcdC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0LXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuXHR9XG5cdC5vd2wtaXRlbSBpbWcge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG5cblx0Lm93bC1uYXYuZGlzYWJsZWQsXG5cdC5vd2wtZG90cy5kaXNhYmxlZCB7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0fVxuXG5cdC5vd2wtbmF2IC5vd2wtcHJldixcblx0Lm93bC1uYXYgLm93bC1uZXh0LFxuXHQub3dsLWRvdCB7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LWtodG1sLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LW1zLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdHVzZXItc2VsZWN0OiBub25lO1xuXHR9XG5cblx0Lm93bC1uYXYgYnV0dG9uLm93bC1wcmV2LFxuXHQub3dsLW5hdiBidXR0b24ub3dsLW5leHQsXG5cdGJ1dHRvbi5vd2wtZG90IHtcblx0XHRiYWNrZ3JvdW5kOiBub25lO1xuXHRcdGNvbG9yOiBpbmhlcml0O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRwYWRkaW5nOjAhaW1wb3J0YW50O1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdH1cblxuXHQmLm93bC1sb2FkZWQge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHR9XG5cblx0Ji5vd2wtbG9hZGluZyB7XG5cdFx0b3BhY2l0eTogMDtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0fVxuXG5cdCYub3dsLWhpZGRlbiB7XG5cdFx0b3BhY2l0eTogMDtcblx0fVxuXG5cdCYub3dsLXJlZnJlc2ggLm93bC1pdGVtIHtcblx0XHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdH1cblxuXHQmLm93bC1kcmFnIC5vd2wtaXRlbSB7XG5cdFx0dG91Y2gtYWN0aW9uOiBwYW4teTtcblx0XHQtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LW1zLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdHVzZXItc2VsZWN0OiBub25lO1xuXHR9XG5cblx0Ji5vd2wtZ3JhYiB7XG5cdFx0Y3Vyc29yOiBtb3ZlO1xuXHRcdGN1cnNvcjogZ3JhYjtcblx0fVxuXG5cdCYub3dsLXJ0bCB7XG5cdFx0ZGlyZWN0aW9uOiBydGw7XG5cdH1cblxuXHQmLm93bC1ydGwgLm93bC1pdGVtIHtcblx0XHRmbG9hdDogcmlnaHQ7XG5cdH1cbn1cblxuLyogTm8gSnMgKi9cbi5uby1qcyAub3dsLWNhcm91c2VsIHtcblx0ZGlzcGxheTogYmxvY2s7XG59XG4iLCIvKlxuICogIE93bCBDYXJvdXNlbCAtIENvcmVcbiAqL1xuXG5AaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Bc3Npc3RhbnQ6MzAwLDQwMCw3MDB8RXhwbGV0dXMrU2Fuczo0MDAsNzAwJmRpc3BsYXk9c3dhcFwiKTtcblxuLm93bC1jYXJvdXNlbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHdpZHRoOiAxMDAlO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiBwb3NpdGlvbiByZWxhdGl2ZSBhbmQgei1pbmRleCBmaXggd2Via2l0IHJlbmRlcmluZyBmb250cyBpc3N1ZSAqL1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1zdGFnZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLXRvdWNoLWFjdGlvbjogcGFuLVk7XG4gIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLyogZml4IGZpcmVmb3ggYW5pbWF0aW9uIGdsaXRjaCAqL1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtc3RhZ2U6YWZ0ZXIge1xuICBjb250ZW50OiBcIi5cIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNsZWFyOiBib3RoO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBoZWlnaHQ6IDA7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1zdGFnZS1vdXRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgLyogZml4IGZvciBmbGFzaGluZyBiYWNrZ3JvdW5kICovXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDBweCwgMHB4KTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXdyYXBwZXIsXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSB7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWluLWhlaWdodDogMXB4O1xuICBmbG9hdDogbGVmdDtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2LmRpc2FibGVkLFxuLm93bC1jYXJvdXNlbCAub3dsLWRvdHMuZGlzYWJsZWQge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2IC5vd2wtcHJldixcbi5vd2wtY2Fyb3VzZWwgLm93bC1uYXYgLm93bC1uZXh0LFxuLm93bC1jYXJvdXNlbCAub3dsLWRvdCB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLW5hdiBidXR0b24ub3dsLXByZXYsXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbi5vd2wtbmV4dCxcbi5vd2wtY2Fyb3VzZWwgYnV0dG9uLm93bC1kb3Qge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLWxvYWRlZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1sb2FkaW5nIHtcbiAgb3BhY2l0eTogMDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLWhpZGRlbiB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLXJlZnJlc2ggLm93bC1pdGVtIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1kcmFnIC5vd2wtaXRlbSB7XG4gIC1tcy10b3VjaC1hY3Rpb246IHBhbi15O1xuICAgICAgdG91Y2gtYWN0aW9uOiBwYW4teTtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtZ3JhYiB7XG4gIGN1cnNvcjogbW92ZTtcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG4gIGN1cnNvcjogZ3JhYjtcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtcnRsIHtcbiAgZGlyZWN0aW9uOiBydGw7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLXJ0bCAub3dsLWl0ZW0ge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi8qIE5vIEpzICovXG5cbi5uby1qcyAub3dsLWNhcm91c2VsIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiAgT3dsIENhcm91c2VsIC0gQW5pbWF0ZSBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIC5hbmltYXRlZCB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAxMDAwbXM7XG4gICAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMDAwbXM7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtYW5pbWF0ZWQtaW4ge1xuICB6LWluZGV4OiAwO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtYW5pbWF0ZWQtb3V0IHtcbiAgei1pbmRleDogMTtcbn1cblxuLm93bC1jYXJvdXNlbCAuZmFkZU91dCB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IGZhZGVPdXQ7XG4gICAgICAgICAgYW5pbWF0aW9uLW5hbWU6IGZhZGVPdXQ7XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlT3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgZmFkZU91dCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG4vKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBBdXRvIEhlaWdodCBQbHVnaW5cbiAqL1xuXG4ub3dsLWhlaWdodCB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogaGVpZ2h0IDUwMG1zIGVhc2UtaW4tb3V0O1xuICB0cmFuc2l0aW9uOiBoZWlnaHQgNTAwbXMgZWFzZS1pbi1vdXQ7XG59XG5cbi8qXG4gKiBcdE93bCBDYXJvdXNlbCAtIExhenkgTG9hZCBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSB7XG4gIC8qKlxuXHRcdFx0VGhpcyBpcyBpbnRyb2R1Y2VkIGR1ZSB0byBhIGJ1ZyBpbiBJRTExIHdoZXJlIGxhenkgbG9hZGluZyBjb21iaW5lZCB3aXRoIGF1dG9oZWlnaHQgcGx1Z2luIGNhdXNlcyBhIHdyb25nXG5cdFx0XHRjYWxjdWxhdGlvbiBvZiB0aGUgaGVpZ2h0IG9mIHRoZSBvd2wtaXRlbSB0aGF0IGJyZWFrcyBwYWdlIGxheW91dHNcblx0XHQgKi9cbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gLm93bC1sYXp5IHtcbiAgb3BhY2l0eTogMDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDQwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gLm93bC1sYXp5W3NyY149XCJcIl0sXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSAub3dsLWxhenk6bm90KFtzcmNdKSB7XG4gIG1heC1oZWlnaHQ6IDA7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIGltZy5vd2wtbGF6eSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbiAgICAgICAgICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xufVxuXG4vKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBWaWRlbyBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tcGxheS1pY29uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDgwcHg7XG4gIHdpZHRoOiA4MHB4O1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTQwcHg7XG4gIG1hcmdpbi10b3A6IC00MHB4O1xuICBiYWNrZ3JvdW5kOiB1cmwoXCJvd2wudmlkZW8ucGxheS5wbmdcIikgbm8tcmVwZWF0O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHotaW5kZXg6IDE7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDEwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDEwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxMDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMTAwbXMgZWFzZSwgLXdlYmtpdC10cmFuc2Zvcm0gMTAwbXMgZWFzZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXZpZGVvLXBsYXktaWNvbjpob3ZlciB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjMsIDEuMyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjMsIDEuMyk7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby1wbGF5aW5nIC5vd2wtdmlkZW8tdG4sXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tcGxheWluZyAub3dsLXZpZGVvLXBsYXktaWNvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby10biB7XG4gIG9wYWNpdHk6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBlYXNlO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tZnJhbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi8qXG4gKiBcdERlZmF1bHQgdGhlbWUgLSBPd2wgQ2Fyb3VzZWwgQ1NTIEZpbGVcbiAqL1xuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IFtjbGFzcyo9J293bC0nXSB7XG4gIGNvbG9yOiAjRkZGO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbjogNXB4O1xuICBwYWRkaW5nOiA0cHggN3B4O1xuICBiYWNrZ3JvdW5kOiAjRDZENkQ2O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IFtjbGFzcyo9J293bC0nXTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4Njk3OTE7XG4gIGNvbG9yOiAjRkZGO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1uYXYgLmRpc2FibGVkIHtcbiAgb3BhY2l0eTogMC41O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1uYXYuZGlzYWJsZWQgKyAub3dsLWRvdHMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtZG90cyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLm93bC10aGVtZSAub3dsLWRvdHMgLm93bC1kb3Qge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHpvb206IDE7XG4gICpkaXNwbGF5OiBpbmxpbmU7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1kb3RzIC5vd2wtZG90IHNwYW4ge1xuICB3aWR0aDogMTBweDtcbiAgaGVpZ2h0OiAxMHB4O1xuICBtYXJnaW46IDVweCA3cHg7XG4gIGJhY2tncm91bmQ6ICNENkQ2RDY7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IHZpc2libGU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAyMDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDIwMG1zIGVhc2U7XG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1kb3RzIC5vd2wtZG90LmFjdGl2ZSBzcGFuLFxuLm93bC10aGVtZSAub3dsLWRvdHMgLm93bC1kb3Q6aG92ZXIgc3BhbiB7XG4gIGJhY2tncm91bmQ6ICM4Njk3OTE7XG59XG5cbioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbnVsLFxub2wge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5hIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5zci1vbmx5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG59XG5cbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJBc3Npc3RhbnRcIiwgc2Fucy1zZXJpZjtcbn1cblxuYm9keS5mcm9udC1wYWdlID4gbWFpbixcbmJvZHkucHJvamVjdHM6bm90KC5wcm9qZWN0LWFyY2hpdmUpID4gbWFpbiB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMDtcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlcixcbmJvZHkucHJvamVjdHM6bm90KC5wcm9qZWN0LWFyY2hpdmUpIC5tYWluLWhlYWRlciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG5ib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyID4gZGl2LFxuYm9keS5wcm9qZWN0czpub3QoLnByb2plY3QtYXJjaGl2ZSkgLm1haW4taGVhZGVyID4gZGl2IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xufVxuXG5ib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyOmJlZm9yZSxcbmJvZHkucHJvamVjdHM6bm90KC5wcm9qZWN0LWFyY2hpdmUpIC5tYWluLWhlYWRlcjpiZWZvcmUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNTFweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDA7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IGJvdHRvbSwgbGVmdCB0b3AsIGZyb20ocmdiYSgwLCAwLCAwLCAwKSksIHRvKHJnYmEoMCwgMCwgMCwgMC4zKSkpO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiYSgwLCAwLCAwLCAwKSAwJSwgcmdiYSgwLCAwLCAwLCAwLjMpIDEwMCUpO1xufVxuXG5ib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIGEsXG5ib2R5LnByb2plY3RzOm5vdCgucHJvamVjdC1hcmNoaXZlKSAubWFpbi1oZWFkZXIgYSB7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG5ib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIGE6aG92ZXIsXG5ib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIGE6Zm9jdXMsXG5ib2R5LnByb2plY3RzOm5vdCgucHJvamVjdC1hcmNoaXZlKSAubWFpbi1oZWFkZXIgYTpob3ZlcixcbmJvZHkucHJvamVjdHM6bm90KC5wcm9qZWN0LWFyY2hpdmUpIC5tYWluLWhlYWRlciBhOmZvY3VzIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbn1cblxuaDEsXG4uaDEge1xuICBmb250LWZhbWlseTogXCJBc3Npc3RhbnRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAyNXB4O1xufVxuXG5oMixcbi5oMiB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgZm9udC1zaXplOiAzMHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsaW5lLWhlaWdodDogMS4zMzMzM2VtO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5oMyxcbi5oMyB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsaW5lLWhlaWdodDogMS4zMzMzM2VtO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5wIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogMS4yODU3MWVtO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5tYWluLWhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDcwcHg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAxMDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjk5KTtcbn1cblxuLmxvZ2dlZGluIC5tYWluLWhlYWRlciB7XG4gIHRvcDogMzJweDtcbn1cblxuLm1haW4taGVhZGVyID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG4ubWFpbi1oZWFkZXIgYSB7XG4gIGNvbG9yOiAjMUUzMTQxO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5tYWluLWhlYWRlciBhOmhvdmVyLFxuLm1haW4taGVhZGVyIGE6Zm9jdXMge1xuICBjb2xvcjogIzcwNzA3MDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5tYWluLWhlYWRlciBuYXYge1xuICBmb250LWZhbWlseTogXCJFeHBsZXR1cyBTYW5zXCIsIGN1cnNpdmU7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubWFpbi1oZWFkZXIgbmF2IGEge1xuICBjb2xvcjogIzFFMzE0MTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubWFpbi1oZWFkZXIgbmF2IGE6aG92ZXIsXG4ubWFpbi1oZWFkZXIgbmF2IGE6Zm9jdXMge1xuICBjb2xvcjogIzcwNzA3MDtcbn1cblxuLm1haW4taGVhZGVyIG5hdiB1bC5tZW51ID4gbGkgPiBhIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDEuMTNweDtcbn1cblxuLm1haW4tZm9vdGVyID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLm1haW4tZm9vdGVyIC5jb250YWN0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDEuNzNweDtcbiAgY29sb3I6ICMxRTMxNDE7XG59XG5cbi5tYWluLWZvb3RlciAuY29udGFjdCBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uZm9vdGVyLWxvZ28gc3ZnIHtcbiAgd2lkdGg6IDg1cHg7XG4gIGhlaWdodDogOTlweDtcbiAgZmlsbDogIzA3MTQ0RTtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmJvZHkucGFnZTpub3QoLmZyb250LXBhZ2UpID4gbWFpbiB7XG4gIHBhZGRpbmc6IDcwcHggMDtcbn1cblxuYm9keS5wYWdlOm5vdCguZnJvbnQtcGFnZSkgPiBtYWluID4gc2VjdGlvbiB7XG4gIGNvbG9yOiAjMUUzMTQxO1xufVxuXG5ib2R5LnBhZ2U6bm90KC5mcm9udC1wYWdlKSA+IG1haW4gPiBzZWN0aW9uID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG5ib2R5LnBhZ2U6bm90KC5mcm9udC1wYWdlKSA+IG1haW4gPiBzZWN0aW9uLmJnLXByaW1hcnkge1xuICBiYWNrZ3JvdW5kOiAjMUUzMTQxO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgcGFkZGluZzogNjBweCAwO1xufVxuXG4uc2VjdGlvbi1pbm5lciB7XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLmhwLXNsaWRlc2hvdyAub3dsLWNhcm91c2VsIC5vd2wtaXRlbSBpbWcsXG4uaHAtbmF2aWdhdGlvbiBhIGltZyB7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIG1pbi13aWR0aDogMTAwJTtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuXG5Ac3VwcG9ydHMgKCgtby1vYmplY3QtZml0OiBjb3Zlcikgb3IgKG9iamVjdC1maXQ6IGNvdmVyKSkge1xuICAuaHAtc2xpZGVzaG93IC5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIGltZyxcbiAgLmhwLW5hdmlnYXRpb24gYSBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgfVxufVxuXG4uaHAtc2xpZGVzaG93IHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaHAtc2xpZGVzaG93IC5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuLmhwLXNsaWRlc2hvdyAub3dsLWNhcm91c2VsIC5vd2wtaXRlbSA+IGRpdiB7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaHAtc2xpZGVzaG93IC5vd2wtY2Fyb3VzZWwgLm93bC1uYXYgYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNGRkZGRkY7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNGRkZGRkY7XG59XG5cbi5ocC1zbGlkZXNob3cgLm93bC1jYXJvdXNlbCAub3dsLW5hdiBidXR0b24gc3BhbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xufVxuXG4uaHAtc2xpZGVzaG93IC5vd2wtY2Fyb3VzZWwgLm93bC1uYXYgLm93bC1wcmV2IHtcbiAgbGVmdDogMDtcbn1cblxuLmhwLXNsaWRlc2hvdyAub3dsLWNhcm91c2VsIC5vd2wtbmF2IC5vd2wtbmV4dCB7XG4gIHJpZ2h0OiAwO1xufVxuXG4uaHAtbmF2aWdhdGlvbiBhIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmb250LXNpemU6IDUwcHg7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtc2hhZG93OiAwcHggNHB4IDdweCAjNzA3MDcwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgYmFja2dyb3VuZDogIzFFMzE0MTtcbn1cblxuLmhwLW5hdmlnYXRpb24gYSBzcGFuIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xufVxuXG4uaHAtbmF2aWdhdGlvbiBhIGltZyB7XG4gIHotaW5kZXg6IDA7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAtd2Via2l0LWZpbHRlcjogYmx1cigxOHB4KTtcbiAgICAgICAgICBmaWx0ZXI6IGJsdXIoMThweCk7XG59XG5cbkBzdXBwb3J0cyAoKC1vLW9iamVjdC1maXQ6IGNvdmVyKSBvciAob2JqZWN0LWZpdDogY292ZXIpKSB7XG4gIC5ocC1uYXZpZ2F0aW9uIGEgaW1nIHtcbiAgICB3aWR0aDogMTAzJTtcbiAgICBoZWlnaHQ6IDEwMyU7XG4gIH1cbn1cblxuLmhwLW5hdmlnYXRpb24gYTpob3ZlciBpbWcge1xuICAtd2Via2l0LWZpbHRlcjogYmx1cigwKTtcbiAgICAgICAgICBmaWx0ZXI6IGJsdXIoMCk7XG59XG5cbi5jb250ZW50LWdyaWQge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgICAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW46IDAgLTEycHg7XG59XG5cbi5jb250ZW50LWdyaWQgW2NsYXNzXj1cImNvbFwiXSB7XG4gIHBhZGRpbmc6IDEycHg7XG59XG5cbi5jb250ZW50LWdyaWQgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5jb2wtMSB7XG4gIHdpZHRoOiAzMy4zMyU7XG4gIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgICAtbXMtZmxleDogMCAwIDMzLjMzJTtcbiAgICAgICAgICBmbGV4OiAwIDAgMzMuMzMlO1xufVxuXG4uY29sLTIge1xuICB3aWR0aDogNjYuNjclO1xuICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgLW1zLWZsZXg6IDAgMCA2Ni42NyU7XG4gICAgICAgICAgZmxleDogMCAwIDY2LjY3JTtcbn1cblxuLmNvbC0zIHtcbiAgd2lkdGg6IDEwMCU7XG4gIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgICAtbXMtZmxleDogMCAwIDEwMCU7XG4gICAgICAgICAgZmxleDogMCAwIDEwMCU7XG59XG5cbi5wcm9qZWN0LWhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC1oZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xufVxuXG4ucHJvamVjdC1oZXJvIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvamVjdC1oZXJvID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG4uZ3JpZC10aXRsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMCAyNHB4IDM4cHggMjRweDtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xufVxuXG4uZ3JpZC10aXRsZSBzbWFsbCB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgbGluZS1oZWlnaHQ6IDEuMzMzMzNlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xufVxuXG4ucHJvamVjdC1tYWluID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG4ucmVsYXRlZC1wcm9qZWN0cyB7XG4gIHBhZGRpbmc6IDcwcHggMDtcbn1cblxuLnByb2plY3QtZ3JpZCA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLnByb2plY3QtZ3JpZCBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnByb2plY3QtZ3JpZCBhcnRpY2xlIHtcbiAgcGFkZGluZzogMTJweDtcbiAgd2lkdGg6IDMzLjMzJTtcbiAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAgIC1tcy1mbGV4OiAwIDAgMzMuMzMlO1xuICAgICAgICAgIGZsZXg6IDAgMCAzMy4zMyU7XG59XG5cbi5wcm9qZWN0LWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24gKyAyKSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MHB4KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTcwcHgpO1xufVxuXG4ucHJvamVjdC1ncmlkIGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjb2xvcjogI0ZGRkZGRjtcbn1cblxuLnByb2plY3QtZ3JpZCBzbWFsbCB7XG4gIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLnByb2plY3QtZ3JpZCAuZ3JpZC10aXRsZSB7XG4gIHBhZGRpbmctYm90dG9tOiA0OHB4O1xufVxuXG4ucHJvamVjdC1ncmlkLmFyY2hpdmUge1xuICBiYWNrZ3JvdW5kOiAjMUUzMTQxO1xuICBjb2xvcjogI0ZGRkZGRjtcbn1cblxuLnByb2plY3QtZ3JpZC1pbm5lciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gICAgICAtbXMtZmxleC1wYWNrOiBzdGFydDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIG1hcmdpbjogMCAtMTJweDtcbiAgcGFkZGluZzogNjhweCAwIDcwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnByZXNzLWxpc3Rpbmcge1xuICBwYWRkaW5nOiA3MHB4IDA7XG59XG5cbi5wcmVzcy1saXN0aW5nID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMge1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbi5wcmVzcy1saXN0aW5nIC5hcnRpY2xlcyBhcnRpY2xlIHtcbiAgbWFyZ2luLWJvdHRvbTogMS40ZW07XG59XG5cbi5wcmVzcy1saXN0aW5nIC5hcnRpY2xlcyBhcnRpY2xlIHNwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnByZXNzLWxpc3RpbmcgLmFydGljbGVzIGEge1xuICBjb2xvcjogIzFFMzE0MTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMgYTpob3ZlciBzcGFuOmxhc3QtY2hpbGQsXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMgYTpmb2N1cyBzcGFuOmxhc3QtY2hpbGQge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLm91dGxldC1ncmlkIHVsIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW46IC0xMnB4O1xufVxuXG4ub3V0bGV0LWdyaWQgbGkge1xuICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgLW1zLWZsZXg6IDAgMCA1MCU7XG4gICAgICAgICAgZmxleDogMCAwIDUwJTtcbiAgd2lkdGg6IDUwJTtcbiAgcGFkZGluZzogMTJweDtcbn1cblxuLm91dGxldC1ncmlkIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ub3V0bGV0LWdyaWQgc3BhbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xufVxuXG4ub3V0bGV0LWdyaWQgYSB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC41cztcbiAgdHJhbnNpdGlvbjogYWxsIC41cztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNEREREREQ7XG59XG5cbi5vdXRsZXQtZ3JpZCBhOmhvdmVyLFxuLm91dGxldC1ncmlkIGE6Zm9jdXMge1xuICBvcGFjaXR5OiAuMjU7XG59XG5cbi5vdXRsZXQtZ3JpZC50YXgtYXJjaGl2ZSBhIHtcbiAgb3BhY2l0eTogLjI1O1xufVxuXG4ub3V0bGV0LWdyaWQudGF4LWFyY2hpdmUgYTpob3Zlcixcbi5vdXRsZXQtZ3JpZC50YXgtYXJjaGl2ZSBhOmZvY3VzIHtcbiAgb3BhY2l0eTogLjc1O1xufVxuXG4ub3V0bGV0LWdyaWQudGF4LWFyY2hpdmUgbGkuYWN0aXZlIGEge1xuICBvcGFjaXR5OiAxO1xufVxuXG4ucGVvcGxlID4gbWFpbiB7XG4gIHBhZGRpbmc6IDcwcHggMDtcbn1cblxuLnBlb3BsZS1ncmlkID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG4ucGVvcGxlLWdyaWQgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wZW9wbGUtZ3JpZCAuZ3JpZC10aXRsZSB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5wZW9wbGUtZ3JpZCBhcnRpY2xlIHtcbiAgcGFkZGluZzogMTJweDtcbiAgd2lkdGg6IDMzLjMzJTtcbiAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAgIC1tcy1mbGV4OiAwIDAgMzMuMzMlO1xuICAgICAgICAgIGZsZXg6IDAgMCAzMy4zMyU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGU6bnRoLWNoaWxkKDNuICsgMikge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNzBweCk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MHB4KTtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGUgYTpob3ZlciAuZ3JpZC10aXRsZSxcbi5wZW9wbGUtZ3JpZCBhcnRpY2xlIGE6Zm9jdXMgLmdyaWQtdGl0bGUge1xuICBvcGFjaXR5OiAxO1xufVxuXG4ucGVvcGxlLWdyaWQtaW5uZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgICAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBtYXJnaW46IDAgLTEycHg7XG4gIHBhZGRpbmc6IDY4cHggMCA3MHB4O1xufVxuXG4ucGVvcGxlLWJpbyB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgcGFkZGluZzogMTJweDtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBlb3BsZS1iaW8gcCB7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBmb250LXNpemU6IDIxcHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjI4NTcxZW07XG59XG5cbi5wZW9wbGUtYmlvID4gZGl2IHtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogIzFFMzE0MTtcbiAgcGFkZGluZzogMThweDtcbn1cblxuLnBlb3BsZS1iaW8gYnV0dG9uIHtcbiAgd2lkdGg6IDI1cHg7XG4gIGhlaWdodDogMjVweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDM3cHg7XG4gIHJpZ2h0OiAzN3B4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjRkZGRkZGO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdGV4dC1pbmRlbnQ6IC05OTk5cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5wZW9wbGUtYmlvIGJ1dHRvbjpiZWZvcmUsXG4ucGVvcGxlLWJpbyBidXR0b246YWZ0ZXIge1xuICB3aWR0aDogMTQwJTtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5wZW9wbGUtYmlvIGJ1dHRvbjpiZWZvcmUge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoNDVkZWcpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoNDVkZWcpO1xufVxuXG4ucGVvcGxlLWJpbyBidXR0b246YWZ0ZXIge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKC00NWRlZyk7XG59XG5cbi5wZW9wbGUtYmlvIGJ1dHRvbjpob3Zlcixcbi5wZW9wbGUtYmlvIGJ1dHRvbjpmb2N1cyB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTtcbiAgYm9yZGVyLWNvbG9yOiAjMUUzMTQxO1xufVxuXG4ucGVvcGxlLWJpbyBidXR0b246aG92ZXI6YmVmb3JlLFxuLnBlb3BsZS1iaW8gYnV0dG9uOmhvdmVyOmFmdGVyLFxuLnBlb3BsZS1iaW8gYnV0dG9uOmZvY3VzOmJlZm9yZSxcbi5wZW9wbGUtYmlvIGJ1dHRvbjpmb2N1czphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxRTMxNDE7XG59XG5cbi5iaW8tdGl0bGUge1xuICB3aWR0aDogY2FsYygxMDAlIC0gMzVweCk7XG59XG5cbi5iaW8tdGl0bGUgcDpmaXJzdC1jaGlsZCB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbjogMDtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGU6bnRoLWNoaWxkKDNuKSAucGVvcGxlLWJpbyxcbi5wZW9wbGUtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbisxKSAucGVvcGxlLWJpbyB7XG4gIHRvcDogLTcwcHg7XG59XG5cbi5wZW9wbGUtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbisyKSAucGVvcGxlLWJpbyB7XG4gIHRvcDogNzBweDtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGU6bnRoLWNoaWxkKDNuKSAucGVvcGxlLWJpbyB7XG4gIGxlZnQ6IGF1dG87XG4gIHJpZ2h0OiAxMDAlO1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZS5vcGVuIHtcbiAgei1pbmRleDogMTA7XG59XG5cbi5wZW9wbGUtZ3JpZCBhcnRpY2xlLm9wZW4gLnBlb3BsZS1iaW8ge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2liV0ZwYmk1amMzTWlMQ0p6YjNWeVkyVnpJanBiSW0xaGFXNHVjMk56Y3lJc0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXZkMnd1WTJGeWIzVnpaV3d2YzNKakwzTmpjM012YjNkc0xtTmhjbTkxYzJWc0xuTmpjM01pTENJdUxpOHVMaTl1YjJSbFgyMXZaSFZzWlhNdmIzZHNMbU5oY205MWMyVnNMM055WXk5elkzTnpMMTlqYjNKbExuTmpjM01pTENJdUxpOHVMaTl1YjJSbFgyMXZaSFZzWlhNdmIzZHNMbU5oY205MWMyVnNMM055WXk5elkzTnpMMTloYm1sdFlYUmxMbk5qYzNNaUxDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZiM2RzTG1OaGNtOTFjMlZzTDNOeVl5OXpZM056TDE5aGRYUnZhR1ZwWjJoMExuTmpjM01pTENJdUxpOHVMaTl1YjJSbFgyMXZaSFZzWlhNdmIzZHNMbU5oY205MWMyVnNMM055WXk5elkzTnpMMTlzWVhwNWJHOWhaQzV6WTNOeklpd2lMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMMjkzYkM1allYSnZkWE5sYkM5emNtTXZjMk56Y3k5ZmRtbGtaVzh1YzJOemN5SXNJaTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl2ZDJ3dVkyRnliM1Z6Wld3dmMzSmpMM05qYzNNdmIzZHNMblJvWlcxbExtUmxabUYxYkhRdWMyTnpjeUlzSWk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5dmQyd3VZMkZ5YjNWelpXd3ZjM0pqTDNOamMzTXZYM1JvWlcxbExtUmxabUYxYkhRdWMyTnpjeUlzSWk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5dmQyd3VZMkZ5YjNWelpXd3ZjM0pqTDNOamMzTXZYM1JvWlcxbExuTmpjM01pTENKaVlYTmxMMTkyWVhKcFlXSnNaWE11YzJOemN5SXNJbUpoYzJVdlgyMXBlR2x1Y3k1elkzTnpJaXdpWW1GelpTOWZjbVZ6WlhRdWMyTnpjeUlzSW1KaGMyVXZYMlp2Ym5SekxuTmpjM01pTENKemRISjFZM1IxY21VdlgySmhjMlV1YzJOemN5SXNJbk4wY25WamRIVnlaUzlqYjNCNUwxOWlZWE5sTG5OamMzTWlMQ0p6ZEhKMVkzUjFjbVV2WTI5d2VTOWZhR1ZoWkdsdVozTXVjMk56Y3lJc0luTjBjblZqZEhWeVpTOW9aV0ZrWlhJdlgyaGxZV1JsY2k1elkzTnpJaXdpYzNSeWRXTjBkWEpsTDJobFlXUmxjaTlmYm1GMkxuTmpjM01pTENKemRISjFZM1IxY21VdlptOXZkR1Z5TDE5bWIyOTBaWEl1YzJOemN5SXNJbk4wY25WamRIVnlaUzlmY0dGblpTNXpZM056SWl3aWMzUnlkV04wZFhKbEwxOW1jbTl1ZEMxd1lXZGxMbk5qYzNNaUxDSmpiMjF3YjI1bGJuUnpMMTluY21sa0xuTmpjM01pTENKbVpXVmtjeTl3Y205cVpXTjBjeTlmWW1GelpTNXpZM056SWl3aVptVmxaSE12Y0hKbGMzTXZYMkpoYzJVdWMyTnpjeUlzSW1abFpXUnpMM0JsYjNCc1pTOWZZbUZ6WlM1elkzTnpJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWk4dklFVllWRVZTVGtGTUlGTkJVMU5jYmtCcGJYQnZjblFnSnk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5dmQyd3VZMkZ5YjNWelpXd3ZjM0pqTDNOamMzTXZiM2RzTG1OaGNtOTFjMlZzTG5OamMzTW5PMXh1UUdsdGNHOXlkQ0FuTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDI5M2JDNWpZWEp2ZFhObGJDOXpjbU12YzJOemN5OXZkMnd1ZEdobGJXVXVaR1ZtWVhWc2RDNXpZM056Snp0Y2JpOHZJRUpCVTBVZ1NVMVFUMUpVVTF4dVFHbHRjRzl5ZENBblltRnpaUzlmZG1GeWFXRmliR1Z6Snp0Y2JrQnBiWEJ2Y25RZ0oySmhjMlV2WDIxcGVHbHVjeWM3WEc1QWFXMXdiM0owSUNkaVlYTmxMMTl5WlhObGRDYzdYRzVBYVcxd2IzSjBJQ2RpWVhObEwxOW1iMjUwY3ljN1hHNWNiaTh2SUZOVVVsVkRWRlZTUlZ4dVFHbHRjRzl5ZENBbmMzUnlkV04wZFhKbEwxOWlZWE5sSnp0Y2JseHVMeThnUTA5TlVFOU9SVTVVVTF4dVFHbHRjRzl5ZENBblkyOXRjRzl1Wlc1MGN5OWZaM0pwWkNjN1hHNWNiaTh2SUVaRlJVUlRYRzVBYVcxd2IzSjBJQ2RtWldWa2N5OXdjbTlxWldOMGN5OWZZbUZ6WlNjN1hHNUFhVzF3YjNKMElDZG1aV1ZrY3k5d2NtVnpjeTlmWW1GelpTYzdYRzVBYVcxd2IzSjBJQ2RtWldWa2N5OXdaVzl3YkdVdlgySmhjMlVuTzF4dUlpd2lRR2x0Y0c5eWRDQW5ZMjl5WlNjN1hHNUFhVzF3YjNKMElDZGhibWx0WVhSbEp6dGNia0JwYlhCdmNuUWdKMkYxZEc5b1pXbG5hSFFuTzF4dVFHbHRjRzl5ZENBbmJHRjZlV3h2WVdRbk8xeHVRR2x0Y0c5eWRDQW5kbWxrWlc4bk8xeHVJaXdpTHlwY2JpQXFJQ0JQZDJ3Z1EyRnliM1Z6Wld3Z0xTQkRiM0psWEc0Z0tpOWNiaTV2ZDJ3dFkyRnliM1Z6Wld3Z2UxeHVYSFJrYVhOd2JHRjVPaUJ1YjI1bE8xeHVYSFIzYVdSMGFEb2dNVEF3SlR0Y2JseDBMWGRsWW10cGRDMTBZWEF0YUdsbmFHeHBaMmgwTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JseDBMeW9nY0c5emFYUnBiMjRnY21Wc1lYUnBkbVVnWVc1a0lIb3RhVzVrWlhnZ1ptbDRJSGRsWW10cGRDQnlaVzVrWlhKcGJtY2dabTl1ZEhNZ2FYTnpkV1VnS2k5Y2JseDBjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEhSNkxXbHVaR1Y0T2lBeE8xeHVYRzVjZEM1dmQyd3RjM1JoWjJVZ2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JseDBYSFF0YlhNdGRHOTFZMmd0WVdOMGFXOXVPaUJ3WVc0dFdUdGNibHgwWEhSMGIzVmphQzFoWTNScGIyNDZJRzFoYm1sd2RXeGhkR2x2Ymp0Y2JseDBYSFF0Ylc5NkxXSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJqc2dMeW9nWm1sNElHWnBjbVZtYjNnZ1lXNXBiV0YwYVc5dUlHZHNhWFJqYUNBcUwxeHVYSFI5WEc1Y2JseDBMbTkzYkMxemRHRm5aVHBoWm5SbGNpQjdYRzVjZEZ4MFkyOXVkR1Z1ZERvZ1hDSXVYQ0k3WEc1Y2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNWNkRngwWTJ4bFlYSTZJR0p2ZEdnN1hHNWNkRngwZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dVhIUmNkR3hwYm1VdGFHVnBaMmgwT2lBd08xeHVYSFJjZEdobGFXZG9kRG9nTUR0Y2JseDBmVnh1WEc1Y2RDNXZkMnd0YzNSaFoyVXRiM1YwWlhJZ2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JseDBYSFJ2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1WEhSY2RDOHFJR1pwZUNCbWIzSWdabXhoYzJocGJtY2dZbUZqYTJkeWIzVnVaQ0FxTDF4dVhIUmNkQzEzWldKcmFYUXRkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1V6WkNnd2NIZ3NJREJ3ZUN3Z01IQjRLVHRjYmx4MGZWeHVYRzVjZEM1dmQyd3RkM0poY0hCbGNpeGNibHgwTG05M2JDMXBkR1Z0ZTF4dVhIUmNkQzEzWldKcmFYUXRZbUZqYTJaaFkyVXRkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1WEhSY2RDMXRiM290WW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dVhIUmNkQzF0Y3kxaVlXTnJabUZqWlMxMmFYTnBZbWxzYVhSNU9pQm9hV1JrWlc0N1hHNWNkRngwTFhkbFltdHBkQzEwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlROa0tEQXNNQ3d3S1R0Y2JseDBYSFF0Ylc5NkxYUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxNMlFvTUN3d0xEQXBPMXh1WEhSY2RDMXRjeTEwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlROa0tEQXNNQ3d3S1R0Y2JseDBmVnh1WEc1Y2RDNXZkMnd0YVhSbGJTQjdYRzVjZEZ4MGNHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVYSFJjZEcxcGJpMW9aV2xuYUhRNklERndlRHRjYmx4MFhIUm1iRzloZERvZ2JHVm1kRHRjYmx4MFhIUXRkMlZpYTJsMExXSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJqdGNibHgwWEhRdGQyVmlhMmwwTFhSaGNDMW9hV2RvYkdsbmFIUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1WEhSY2RDMTNaV0pyYVhRdGRHOTFZMmd0WTJGc2JHOTFkRG9nYm05dVpUdGNibHgwZlZ4dVhIUXViM2RzTFdsMFpXMGdhVzFuSUh0Y2JseDBYSFJrYVhOd2JHRjVPaUJpYkc5amF6dGNibHgwWEhSM2FXUjBhRG9nTVRBd0pUdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGJtRjJMbVJwYzJGaWJHVmtMRnh1WEhRdWIzZHNMV1J2ZEhNdVpHbHpZV0pzWldRZ2UxeHVYSFJjZEdScGMzQnNZWGs2SUc1dmJtVTdYRzVjZEgxY2JseHVYSFF1YjNkc0xXNWhkaUF1YjNkc0xYQnlaWFlzWEc1Y2RDNXZkMnd0Ym1GMklDNXZkMnd0Ym1WNGRDeGNibHgwTG05M2JDMWtiM1FnZTF4dVhIUmNkR04xY25OdmNqb2djRzlwYm5SbGNqdGNibHgwWEhRdGQyVmlhMmwwTFhWelpYSXRjMlZzWldOME9pQnViMjVsTzF4dVhIUmNkQzFyYUhSdGJDMTFjMlZ5TFhObGJHVmpkRG9nYm05dVpUdGNibHgwWEhRdGJXOTZMWFZ6WlhJdGMyVnNaV04wT2lCdWIyNWxPMXh1WEhSY2RDMXRjeTExYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MFhIUjFjMlZ5TFhObGJHVmpkRG9nYm05dVpUdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGJtRjJJR0oxZEhSdmJpNXZkMnd0Y0hKbGRpeGNibHgwTG05M2JDMXVZWFlnWW5WMGRHOXVMbTkzYkMxdVpYaDBMRnh1WEhSaWRYUjBiMjR1YjNkc0xXUnZkQ0I3WEc1Y2RGeDBZbUZqYTJkeWIzVnVaRG9nYm05dVpUdGNibHgwWEhSamIyeHZjam9nYVc1b1pYSnBkRHRjYmx4MFhIUmliM0prWlhJNklHNXZibVU3WEc1Y2RGeDBjR0ZrWkdsdVp6b3dJV2x0Y0c5eWRHRnVkRHRjYmx4MFhIUm1iMjUwT2lCcGJtaGxjbWwwTzF4dVhIUjlYRzVjYmx4MEppNXZkMnd0Ykc5aFpHVmtJSHRjYmx4MFhIUmthWE53YkdGNU9pQmliRzlqYXp0Y2JseDBmVnh1WEc1Y2RDWXViM2RzTFd4dllXUnBibWNnZTF4dVhIUmNkRzl3WVdOcGRIazZJREE3WEc1Y2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNWNkSDFjYmx4dVhIUW1MbTkzYkMxb2FXUmtaVzRnZTF4dVhIUmNkRzl3WVdOcGRIazZJREE3WEc1Y2RIMWNibHh1WEhRbUxtOTNiQzF5WldaeVpYTm9JQzV2ZDJ3dGFYUmxiU0I3WEc1Y2RGeDBkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1WEhSOVhHNWNibHgwSmk1dmQyd3RaSEpoWnlBdWIzZHNMV2wwWlcwZ2UxeHVYSFJjZEhSdmRXTm9MV0ZqZEdsdmJqb2djR0Z1TFhrN1hHNWNkRngwTFhkbFltdHBkQzExYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MFhIUXRiVzk2TFhWelpYSXRjMlZzWldOME9pQnViMjVsTzF4dVhIUmNkQzF0Y3kxMWMyVnlMWE5sYkdWamREb2dibTl1WlR0Y2JseDBYSFIxYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MGZWeHVYRzVjZENZdWIzZHNMV2R5WVdJZ2UxeHVYSFJjZEdOMWNuTnZjam9nYlc5MlpUdGNibHgwWEhSamRYSnpiM0k2SUdkeVlXSTdYRzVjZEgxY2JseHVYSFFtTG05M2JDMXlkR3dnZTF4dVhIUmNkR1JwY21WamRHbHZiam9nY25Sc08xeHVYSFI5WEc1Y2JseDBKaTV2ZDJ3dGNuUnNJQzV2ZDJ3dGFYUmxiU0I3WEc1Y2RGeDBabXh2WVhRNklISnBaMmgwTzF4dVhIUjlYRzU5WEc1Y2JpOHFJRTV2SUVweklDb3ZYRzR1Ym04dGFuTWdMbTkzYkMxallYSnZkWE5sYkNCN1hHNWNkR1JwYzNCc1lYazZJR0pzYjJOck8xeHVmVnh1SWl3aUx5cGNiaUFxSUNCUGQyd2dRMkZ5YjNWelpXd2dMU0JCYm1sdFlYUmxJRkJzZFdkcGJseHVJQ292WEc0dWIzZHNMV05oY205MWMyVnNlMXh1WEhRdVlXNXBiV0YwWldRZ2UxeHVYSFJjZEdGdWFXMWhkR2x2Ymkxa2RYSmhkR2x2YmpvZ01UQXdNRzF6TzF4dVhIUmNkR0Z1YVcxaGRHbHZiaTFtYVd4c0xXMXZaR1U2SUdKdmRHZzdYRzVjZEgxY2JseDBMbTkzYkMxaGJtbHRZWFJsWkMxcGJpQjdYRzVjZEZ4MGVpMXBibVJsZURvZ01EdGNibHgwZlZ4dVhIUXViM2RzTFdGdWFXMWhkR1ZrTFc5MWRDQjdYRzVjZEZ4MGVpMXBibVJsZURvZ01UdGNibHgwZlZ4dVhIUXVabUZrWlU5MWRDQjdYRzVjZEZ4MFlXNXBiV0YwYVc5dUxXNWhiV1U2SUdaaFpHVlBkWFE3WEc1Y2RIMWNibjFjYmx4dVFHdGxlV1p5WVcxbGN5Qm1ZV1JsVDNWMElIdGNibHgwTUNVZ2UxeHVYSFJjZEc5d1lXTnBkSGs2SURFN1hHNWNkSDFjYmx4dVhIUXhNREFsSUh0Y2JseDBYSFJ2Y0dGamFYUjVPaUF3TzF4dVhIUjlYRzU5WEc0aUxDSXZLbHh1SUNvZ1hIUlBkMndnUTJGeWIzVnpaV3dnTFNCQmRYUnZJRWhsYVdkb2RDQlFiSFZuYVc1Y2JpQXFMMXh1WEc0dWIzZHNMV2hsYVdkb2RDQjdYRzVjZEhSeVlXNXphWFJwYjI0NklHaGxhV2RvZENBMU1EQnRjeUJsWVhObExXbHVMVzkxZER0Y2JuMWNiaUlzSWk4cVhHNGdLaUJjZEU5M2JDQkRZWEp2ZFhObGJDQXRJRXhoZW5rZ1RHOWhaQ0JRYkhWbmFXNWNiaUFxTDF4dVhHNHViM2RzTFdOaGNtOTFjMlZzSUh0Y2JseDBMbTkzYkMxcGRHVnRJSHRjYmx4MFhIUXViM2RzTFd4aGVua2dlMXh1WEhSY2RGeDBYSFJ2Y0dGamFYUjVPaUF3TzF4dVhIUmNkRngwWEhSMGNtRnVjMmwwYVc5dU9pQnZjR0ZqYVhSNUlEUXdNRzF6SUdWaGMyVTdYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5b3FYRzVjZEZ4MFhIUlVhR2x6SUdseklHbHVkSEp2WkhWalpXUWdaSFZsSUhSdklHRWdZblZuSUdsdUlFbEZNVEVnZDJobGNtVWdiR0Y2ZVNCc2IyRmthVzVuSUdOdmJXSnBibVZrSUhkcGRHZ2dZWFYwYjJobGFXZG9kQ0J3YkhWbmFXNGdZMkYxYzJWeklHRWdkM0p2Ym1kY2JseDBYSFJjZEdOaGJHTjFiR0YwYVc5dUlHOW1JSFJvWlNCb1pXbG5hSFFnYjJZZ2RHaGxJRzkzYkMxcGRHVnRJSFJvWVhRZ1luSmxZV3R6SUhCaFoyVWdiR0Y1YjNWMGMxeHVYSFJjZENBcUwxeHVYSFJjZEM1dmQyd3RiR0Y2ZVZ0emNtTmVQVndpWENKZExDQXViM2RzTFd4aGVuazZibTkwS0Z0emNtTmRLU0I3WEc1Y2RGeDBYSFJ0WVhndGFHVnBaMmgwT2lBd08xeHVYSFJjZEgxY2JseHVYSFJjZEdsdFp5NXZkMnd0YkdGNmVTQjdYRzVjZEZ4MFhIUjBjbUZ1YzJadmNtMHRjM1I1YkdVNklIQnlaWE5sY25abExUTmtPMXh1WEhSY2RIMWNibHgwZlZ4dWZWeHVYRzRpTENJa2IzZHNMV2x0WVdkbExYQmhkR2c2SUZ3aVhDSWdJV1JsWm1GMWJIUTdYRzVjYmk4cVhHNGdLaUJjZEU5M2JDQkRZWEp2ZFhObGJDQXRJRlpwWkdWdklGQnNkV2RwYmx4dUlDb3ZYRzVjYmk1dmQyd3RZMkZ5YjNWelpXeDdYRzVjZEM1dmQyd3RkbWxrWlc4dGQzSmhjSEJsY2lCN1hHNWNkRngwY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dVhIUmNkR2hsYVdkb2REb2dNVEF3SlR0Y2JseDBYSFJpWVdOclozSnZkVzVrT2lBak1EQXdPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxd2JHRjVMV2xqYjI0Z2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JseDBYSFJvWldsbmFIUTZJRGd3Y0hnN1hHNWNkRngwZDJsa2RHZzZJRGd3Y0hnN1hHNWNkRngwYkdWbWREb2dOVEFsTzF4dVhIUmNkSFJ2Y0RvZ05UQWxPMXh1WEhSY2RHMWhjbWRwYmkxc1pXWjBPaUF0TkRCd2VEdGNibHgwWEhSdFlYSm5hVzR0ZEc5d09pQXROREJ3ZUR0Y2JseDBYSFJpWVdOclozSnZkVzVrT2lCMWNtd29YQ0lqZXlSdmQyd3RhVzFoWjJVdGNHRjBhSDF2ZDJ3dWRtbGtaVzh1Y0d4aGVTNXdibWRjSWlrZ2JtOHRjbVZ3WldGME8xeHVYSFJjZEdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmx4MFhIUjZMV2x1WkdWNE9pQXhPMXh1WEhSY2RDMTNaV0pyYVhRdFltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHVYSFJjZEhSeVlXNXphWFJwYjI0NklIUnlZVzV6Wm05eWJTQXhNREJ0Y3lCbFlYTmxPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxd2JHRjVMV2xqYjI0NmFHOTJaWElnZTF4dVhIUmNkSFJ5WVc1elptOXliVG9nYzJOaGJHVW9NUzR6TENBeExqTXBPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxd2JHRjVhVzVuSUM1dmQyd3RkbWxrWlc4dGRHNHNYRzVjZEM1dmQyd3RkbWxrWlc4dGNHeGhlV2x1WnlBdWIzZHNMWFpwWkdWdkxYQnNZWGt0YVdOdmJpQjdYRzVjZEZ4MFpHbHpjR3hoZVRvZ2JtOXVaVHRjYmx4MGZWeHVYRzVjZEM1dmQyd3RkbWxrWlc4dGRHNGdlMXh1WEhSY2RHOXdZV05wZEhrNklEQTdYRzVjZEZ4MGFHVnBaMmgwT2lBeE1EQWxPMXh1WEhSY2RHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNpQmpaVzUwWlhJN1hHNWNkRngwWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JseDBYSFJpWVdOclozSnZkVzVrTFhOcGVtVTZJR052Ym5SaGFXNDdYRzVjZEZ4MGRISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQTBNREJ0Y3lCbFlYTmxPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxbWNtRnRaU0I3WEc1Y2RGeDBjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEhSY2RIb3RhVzVrWlhnNklERTdYRzVjZEZ4MGFHVnBaMmgwT2lBeE1EQWxPMXh1WEhSY2RIZHBaSFJvT2lBeE1EQWxPMXh1WEhSOVhHNTlYRzRpTENKQWFXMXdiM0owSUZ3aWRHaGxiV1V1WkdWbVlYVnNkRndpT3lJc0lpOHFYRzRnS2lCY2RFUmxabUYxYkhRZ2RHaGxiV1VnTFNCUGQyd2dRMkZ5YjNWelpXd2dRMU5USUVacGJHVmNiaUFxTDF4dVhHNGtZMjlzYjNJdFltRnpaVHBjZEZ4MFhIUWpPRFk1TnpreElDRmtaV1poZFd4ME8xeHVKR052Ykc5eUxYZG9hWFJsT2x4MFhIUmNkQ05HUmtZZ0lXUmxabUYxYkhRN1hHNGtZMjlzYjNJdFozSmhlVHBjZEZ4MFhIUWpSRFpFTmtRMklDRmtaV1poZFd4ME8xeHVYRzR2TDI1aGRseHVYRzRrYm1GMkxXTnZiRzl5T2lCY2RGeDBYSFFrWTI5c2IzSXRkMmhwZEdVZ0lXUmxabUYxYkhRN1hHNGtibUYyTFdOdmJHOXlMV2h2ZG1WeU9seDBYSFFrWTI5c2IzSXRkMmhwZEdVZ0lXUmxabUYxYkhRN1hHNGtibUYyTFdadmJuUXRjMmw2WlRvZ1hIUmNkREUwY0hnZ0lXUmxabUYxYkhRN1hHNGtibUYyTFhKdmRXNWtaV1E2SUZ4MFhIUmNkRE53ZUNBaFpHVm1ZWFZzZER0Y2JpUnVZWFl0YldGeVoybHVPaUJjZEZ4MFhIUTFjSGdnSVdSbFptRjFiSFE3WEc0a2JtRjJMWEJoWkdScGJtYzZJRngwWEhSY2REUndlQ0EzY0hnZ0lXUmxabUYxYkhRN1hHNGtibUYyTFdKaFkydG5jbTkxYm1RNklGeDBYSFFrWTI5c2IzSXRaM0poZVNBaFpHVm1ZWFZzZER0Y2JpUnVZWFl0WW1GamEyZHliM1Z1WkMxb2IzWmxjanBjZENSamIyeHZjaTFpWVhObElDRmtaV1poZFd4ME8xeHVKRzVoZGkxa2FYTmhZbXhsWkMxdmNHRmphWFI1T2lCY2REQXVOU0FoWkdWbVlYVnNkRHRjYmx4dUx5OWtiM1J6WEc1Y2JpUmtiM1F0ZDJsa2RHZzZYSFJjZEZ4MFhIUXhNSEI0SUNGa1pXWmhkV3gwTzF4dUpHUnZkQzFvWldsbmFIUTZYSFJjZEZ4ME1UQndlQ0FoWkdWbVlYVnNkRHRjYmlSa2IzUXRjbTkxYm1SbFpEcGNkRngwWEhRek1IQjRJQ0ZrWldaaGRXeDBPMXh1SkdSdmRDMXRZWEpuYVc0NklGeDBYSFJjZERWd2VDQTNjSGdnSVdSbFptRjFiSFE3WEc0a1pHOTBMV0poWTJ0bmNtOTFibVE2WEhSY2RDUmpiMnh2Y2kxbmNtRjVJQ0ZrWldaaGRXeDBPMXh1SkdSdmRDMWlZV05yWjNKdmRXNWtMV0ZqZEdsMlpUcGNkQ1JqYjJ4dmNpMWlZWE5sSUNGa1pXWmhkV3gwTzF4dVhHNUFhVzF3YjNKMElDZDBhR1Z0WlNjN1hHNGlMQ0pjYmk1dmQyd3RkR2hsYldVZ2UxeHVYSFF2THlCVGRIbHNhVzVuSUU1bGVIUWdZVzVrSUZCeVpYWWdZblYwZEc5dWMxeHVYSFF1YjNkc0xXNWhkaUI3WEc1Y2RGeDBiV0Z5WjJsdUxYUnZjRG9nTVRCd2VEdGNibHgwWEhSMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNWNkRngwTFhkbFltdHBkQzEwWVhBdGFHbG5hR3hwWjJoMExXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNibHh1WEhSY2RGdGpiR0Z6Y3lvOUoyOTNiQzBuWFNCN1hHNWNkRngwWEhSamIyeHZjam9nSkc1aGRpMWpiMnh2Y2p0Y2JseDBYSFJjZEdadmJuUXRjMmw2WlRvZ0pHNWhkaTFtYjI1MExYTnBlbVU3WEc1Y2RGeDBYSFJ0WVhKbmFXNDZJQ1J1WVhZdGJXRnlaMmx1TzF4dVhIUmNkRngwY0dGa1pHbHVaem9nSkc1aGRpMXdZV1JrYVc1bk8xeHVYSFJjZEZ4MFltRmphMmR5YjNWdVpEb2dKRzVoZGkxaVlXTnJaM0p2ZFc1a08xeHVYSFJjZEZ4MFpHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1WEhSY2RGeDBZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVYSFJjZEZ4MFltOXlaR1Z5TFhKaFpHbDFjem9nTTNCNE8xeHVYRzVjZEZ4MFhIUW1PbWh2ZG1WeUlIdGNibHgwWEhSY2RGeDBZbUZqYTJkeWIzVnVaRG9nSkc1aGRpMWlZV05yWjNKdmRXNWtMV2h2ZG1WeU8xeHVYSFJjZEZ4MFhIUmpiMnh2Y2pva2JtRjJMV052Ykc5eUxXaHZkbVZ5TzF4dVhIUmNkRngwWEhSMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYSFJjZEM1a2FYTmhZbXhsWkNCN1hHNWNkRngwWEhSdmNHRmphWFI1T2lBa2JtRjJMV1JwYzJGaWJHVmtMVzl3WVdOcGRIazdYRzVjZEZ4MFhIUmpkWEp6YjNJNklHUmxabUYxYkhRN1hHNWNkRngwZlZ4dVhIUjlYRzVjYmx4MEx5OGdVM1I1YkdsdVp5QmtiM1J6WEc1Y2RDNXZkMnd0Ym1GMkxtUnBjMkZpYkdWa0lDc2dMbTkzYkMxa2IzUnpJSHRjYmx4MFhIUnRZWEpuYVc0dGRHOXdPaUF4TUhCNE8xeHVYSFI5WEc1Y2JseDBMbTkzYkMxa2IzUnpJSHRjYmx4MFhIUjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzVjZEZ4MExYZGxZbXRwZEMxMFlYQXRhR2xuYUd4cFoyaDBMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmx4dVhIUmNkQzV2ZDJ3dFpHOTBJSHRjYmx4MFhIUmNkR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JseDBYSFJjZEhwdmIyMDZJREU3WEc1Y2RGeDBYSFFxWkdsemNHeGhlVG9nYVc1c2FXNWxPMXh1WEc1Y2RGeDBYSFJ6Y0dGdUlIdGNibHgwWEhSY2RGeDBkMmxrZEdnNklDUmtiM1F0ZDJsa2RHZzdYRzVjZEZ4MFhIUmNkR2hsYVdkb2REb2dKR1J2ZEMxb1pXbG5hSFE3WEc1Y2RGeDBYSFJjZEcxaGNtZHBiam9nSkdSdmRDMXRZWEpuYVc0N1hHNWNkRngwWEhSY2RHSmhZMnRuY205MWJtUTZJQ1JrYjNRdFltRmphMmR5YjNWdVpEdGNibHgwWEhSY2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNWNkRngwWEhSY2RDMTNaV0pyYVhRdFltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dkbWx6YVdKc1pUdGNibHgwWEhSY2RGeDBkSEpoYm5OcGRHbHZiam9nYjNCaFkybDBlU0F5TURCdGN5QmxZWE5sTzF4dVhIUmNkRngwWEhSaWIzSmtaWEl0Y21Ga2FYVnpPaUFrWkc5MExYSnZkVzVrWldRN1hHNWNkRngwWEhSOVhHNWNibHgwWEhSY2RDWXVZV04wYVhabExGeHVYSFJjZEZ4MEpqcG9iM1psY2lCN1hHNWNkRngwWEhSY2RITndZVzRnZTF4dVhIUmNkRngwWEhSY2RHSmhZMnRuY205MWJtUTZJQ1JrYjNRdFltRmphMmR5YjNWdVpDMWhZM1JwZG1VN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNkSDFjYm4xY2JpSXNJaTh2SUZOUVFVTkpUa2RjYmlSdGVGYzZJREUyTURCd2VEdGNiaVJuZFhSMFpYSTZJREl3Y0hnN1hHNWNiaTh2SUVOUFRFOVNVMXh1SkdKc1lXTnJPaUFqTURBd01EQXdPMXh1Skhkb2FYUmxPaUFqUmtaR1JrWkdPMXh1WEc0a2NISnBiV0Z5ZVRvZ0l6RkZNekUwTVR0Y2JpUnpaV052Ym1SaGNuazZJQ00zTURjd056QTdYRzVjYmlSaFkyTmxiblF0TVRvZ0l6QTNNVFEwUlR0Y2JseHVMeThnUms5T1ZGTmNiaVJvWldGa2FXNW5Sa1k2SUNkRmVIQnNaWFIxY3lCVFlXNXpKeXdnWTNWeWMybDJaVHRjYmlSamIzQjVSa1k2SUNkQmMzTnBjM1JoYm5RbkxDQnpZVzV6TFhObGNtbG1PMXh1Skd4ME9pQXpNREE3WEc0a2NtVm5PaUEwTURBN1hHNGtZbTlzWkRvZ056QXdPMXh1WEc0dkx5QkNVa1ZCUzFCUFNVNVVVMXh1SkcxbFpHbGhXSE02SUZ3aWMyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUF6TnpWd2VDbGNJanRjYmlSdFpXUnBZVkJvYjI1bE9pQmNJbk5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ056WTNMamx3ZUNsY0lqdGNiaVJ0WldScFlWUmhZbXhsZERvZ1hDSnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLVndpTzF4dUpHMWxaR2xoVkdGaWJHVjBUMjVzZVRvZ1hDSnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLU0JoYm1RZ0tHMWhlQzEzYVdSMGFEb2dNVEF5TkM0NWNIZ3BYQ0k3WEc0a2JXVmthV0ZVYjJkbmJHVklaV0ZrWlhJNklGd2ljMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBeE1ESTBMamx3ZUNsY0lqdGNiaVJ0WldScFlVUmxjMnQwYjNBNklGd2ljMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBeE1ESTFjSGdwWENJN1hHNGtiV1ZrYVdGR2RXeHNPaUJjSW5OamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dJM3NrYlhoWGZTbGNJanRjYmx4dUx5OGdSRWxOUlU1VFNVOU9VMXh1SkdobFlXUmxja2hsYVdkb2REb2dOekJ3ZUR0Y2JpSXNJa0J0YVhocGJpQmpiMjUwWlc1MFYybGtkR2dnZTF4dUlDQnRZWGd0ZDJsa2RHZzZJQ1J0ZUZjN1hHNGdJRzFoY21kcGJqb2dZWFYwYnp0Y2JpQWdjR0ZrWkdsdVp6b2dNQ0FrWjNWMGRHVnlPMXh1ZlZ4dVhHNUFiV2w0YVc0Z2FHOTJaWElnZTF4dUlDQW1PbWh2ZG1WeUxGeHVJQ0FtT21adlkzVnpJSHRjYmlBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnZlZ4dWZWeHVYRzVBYldsNGFXNGdjM0pQYm14NUlIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQjNhV1IwYURvZ01YQjRPMXh1SUNCb1pXbG5hSFE2SURGd2VEdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdiV0Z5WjJsdU9pQXRNWEI0TzF4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0JqYkdsd09pQnlaV04wS0RBc01Dd3dMREFwTzF4dUlDQmliM0prWlhJNklEQTdYRzU5WEc1Y2JrQnRhWGhwYmlCcGJXZERiM1psY2lCN1hHNGdJRzFwYmkxb1pXbG5hSFE2SURFd01DVTdYRzRnSUcxcGJpMTNhV1IwYURvZ01UQXdKVHRjYmlBZ2QybGtkR2c2SUdGMWRHODdYRzRnSUdobGFXZG9kRG9nWVhWMGJ6dGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUcxaGNtZHBiam9nTUR0Y2JseHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lIUnZjRG9nTlRBbE8xeHVJQ0JzWldaME9pQTFNQ1U3WEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLQzAxTUNVc0xUVXdKU2s3WEc1Y2JpQWdRSE4xY0hCdmNuUnpJQ2h2WW1wbFkzUXRabWwwT2lCamIzWmxjaWtnZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdJQ0J2WW1wbFkzUXRabWwwT2lCamIzWmxjanRjYmlBZ2ZWeHVmVnh1SWl3aUtpQjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ1ltOXlaR1Z5T2lBd08xeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHVmVnh1WEc1MWJDeGNibTlzSUh0Y2JpQWdiR2x6ZEMxemRIbHNaVG9nYm05dVpUdGNibjFjYmx4dVlTQjdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TWpWek8xeHVJQ0F2THlCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzU5WEc1Y2JpNXpjaTF2Ym14NUlIdGNiaUFnUUdsdVkyeDFaR1VnYzNKUGJteDVPMXh1ZlZ4dVhHNXpkSEp2Ym1jZ2UxeHVJQ0JtYjI1MExYZGxhV2RvZERvZ0pHSnZiR1E3WEc1OVhHNWNibUp2WkhrZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0pHTnZjSGxHUmp0Y2JuMWNiaUlzSWtCcGJYQnZjblFnZFhKc0tDZG9kSFJ3Y3pvdkwyWnZiblJ6TG1kdmIyZHNaV0Z3YVhNdVkyOXRMMk56Y3o5bVlXMXBiSGs5UVhOemFYTjBZVzUwT2pNd01DdzBNREFzTnpBd2ZFVjRjR3hsZEhWeksxTmhibk02TkRBd0xEY3dNQ1prYVhOd2JHRjVQWE4zWVhBbktUdGNiaUlzSW1KdlpIa2dlMXh1SUNBbUxtWnliMjUwTFhCaFoyVXNYRzRnSUNZdWNISnZhbVZqZEhNNmJtOTBLQzV3Y205cVpXTjBMV0Z5WTJocGRtVXBJSHRjYmlBZ0lDQWdQaUJ0WVdsdUlIdGNiaUFnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF3TzF4dUlDQWdJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0FnSUNCNkxXbHVaR1Y0T2lBd08xeHVJQ0FnSUNCOVhHNWNiaUFnSUNBZ0xtMWhhVzR0YUdWaFpHVnlJSHRjYmlBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCMGNtRnVjM0JoY21WdWREdGNiaUFnSUNBZ0lDQStJR1JwZGlCN1hHNGdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQWdJQ0I2TFdsdVpHVjRPaUF4TzF4dUlDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBbU9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nTVRVeGNIZzdYRzRnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUNCMGIzQTZJREE3WEc0Z0lDQWdJQ0FnSUNCc1pXWjBPaUF3TzF4dUlDQWdJQ0FnSUNBZ2VpMXBibVJsZURvZ01EdGNiaUFnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUJzYVc1bFlYSXRaM0poWkdsbGJuUW9NR1JsWnl4eVoySmhLQ1JpYkdGamF5d3dLU0F3SlN3Z2NtZGlZU2drWW14aFkyc3NMak1wSURFd01DVXBPMXh1SUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0JoSUh0Y2JpQWdJQ0FnSUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1U3WEc1Y2JpQWdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHaHZkbVZ5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklISm5ZbUVvSkhkb2FYUmxMQzQwS1R0Y2JpQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQjlYRzRnSUNBZ0lIMWNiaUFnSUgxY2JuMWNibHh1UUdsdGNHOXlkQ0FuWTI5d2VTOWZZbUZ6WlNjN1hHNUFhVzF3YjNKMElDZG9aV0ZrWlhJdlgyaGxZV1JsY2ljN1hHNUFhVzF3YjNKMElDZG1iMjkwWlhJdlgyWnZiM1JsY2ljN1hHNUFhVzF3YjNKMElDZGZjR0ZuWlNjN1hHNUFhVzF3YjNKMElDZGZabkp2Ym5RdGNHRm5aU2M3WEc0aUxDSkFhVzF3YjNKMElDZG9aV0ZrYVc1bmN5YzdYRzVjYm5BZ2UxeHVJQ0F2TDJOdmJHOXlPaUFrY0hKcGJXRnllVHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhPSEI0TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nS0RJM0lDOGdNakVwSUNvZ01XVnRPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4WlcwN1hHNTlYRzRpTENKb01Td3VhREVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkdOdmNIbEdSanRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJQ1JzZER0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnWm05dWRDMXphWHBsT2lBeU5YQjRPMXh1ZlZ4dVhHNW9NaXd1YURJZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0pHaGxZV1JwYm1kR1JqdGNiaUFnWm05dWRDMXphWHBsT2lBek1IQjRPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nS0RRd0lDOGdNekFwSUNvZ01XVnRPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dKR0p2YkdRN1hHNTlYRzVvTXl3dWFETWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dKR2hsWVdScGJtZEdSanRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ0tEUXdJQzhnTXpBcElDb2dNV1Z0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nSkdKdmJHUTdYRzU5WEc0aUxDSXViV0ZwYmkxb1pXRmtaWElnZTF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2FHVnBaMmgwT2lBa2FHVmhaR1Z5U0dWcFoyaDBPMXh1SUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEc0Z0lIUnZjRG9nTUR0Y2JpQWdiR1ZtZERvZ01EdGNiaUFnZWkxcGJtUmxlRG9nTVRBN1hHNGdJR0poWTJ0bmNtOTFibVE2SUhKblltRW9KSGRvYVhSbExDNDVPU2s3WEc1Y2JpQWdMbXh2WjJkbFpHbHVJQ1lnZTF4dUlDQWdJSFJ2Y0RvZ016SndlRHRjYmlBZ2ZWeHVYRzRnSUQ0Z1pHbDJJSHRjYmlBZ0lDQkFhVzVqYkhWa1pTQmpiMjUwWlc1MFYybGtkR2c3WEc1Y2JpQWdJQ0JBYldWa2FXRWdJM3NrYldWa2FXRlVZV0pzWlhSOUlIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQWdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJ6Y0dGalpTMWlaWFIzWldWdU8xeHVJQ0FnSUgxY2JpQWdmVnh1SUNCaWRYUjBiMjRnZTF4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJR2d4SUh0Y2JseHVJQ0I5WEc1Y2JpQWdZU0I3WEc0Z0lDQWdZMjlzYjNJNklDUndjbWx0WVhKNU8xeHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNibHh1SUNBZ0lFQnBibU5zZFdSbElHaHZkbVZ5SUh0Y2JpQWdJQ0FnSUdOdmJHOXlPaUFrYzJWamIyNWtZWEo1TzF4dUlDQWdJQ0FnZEdWNGRDMWtaV052Y21GMGFXOXVPaUIxYm1SbGNteHBibVU3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnUUdsdGNHOXlkQ0FuWDI1aGRpYzdYRzU5WEc0aUxDSnVZWFlnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkdobFlXUnBibWRHUmp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TlhCNE8xeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdZU0I3WEc0Z0lDQWdZMjlzYjNJNklDUndjbWx0WVhKNU8xeHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNibHh1SUNBZ0lFQnBibU5zZFdSbElHaHZkbVZ5SUh0Y2JpQWdJQ0FnSUdOdmJHOXlPaUFrYzJWamIyNWtZWEo1TzF4dUlDQWdJSDFjYmx4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklEQWdNVEp3ZUR0Y2JpQWdJQ0I5WEc0Z0lIMWNiaUFnUUcxbFpHbGhJQ043SkcxbFpHbGhSR1Z6YTNSdmNIMGdlMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQXRNVEp3ZUR0Y2JpQWdmVnh1WEc0Z0lIVnNMbTFsYm5VZ2UxeHVJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVVJsYzJ0MGIzQjlJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdac1pYZ3RaVzVrTzF4dUlDQWdJSDFjYmx4dUlDQWdJRDRnYkdrZ2UxeHVJQ0FnSUNBZ1BpQmhJSHRjYmlBZ0lDQWdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjYmlBZ0lDQWdJQ0FnYkdWMGRHVnlMWE53WVdOcGJtYzZJREV1TVROd2VEdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdRR2x1WTJ4MVpHVWdhRzkyWlhJZ2UxeHVJQ0FnSUNBZ0lDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGRVpYTnJkRzl3ZlNCN1hHNGdJQ0FnSUNBZ0lDQWdMbk4xWWkxdFpXNTFJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdMbk4xWWkxdFpXNTFJSHRjYmlBZ0lDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGRVpYTnJkRzl3ZlNCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQm1iR1Y0TFdWdVpEdGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lIUnZjRG9nTVRBd0pUdGNiaUFnSUNBZ0lISnBaMmgwT2lBd08xeHVJQ0FnSUNBZ2JXbHVMWGRwWkhSb09pQXhNREFsTzF4dVhHNGdJQ0FnSUNCaElIdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURFd2NIZzdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dUlpd2lMbTFoYVc0dFptOXZkR1Z5SUh0Y2JpQWdQaUJrYVhZZ2UxeHVJQ0FnSUVCcGJtTnNkV1JsSUdOdmJuUmxiblJYYVdSMGFEdGNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ2MzQmhZMlV0WW1WMGQyVmxianRjYmlBZ2ZWeHVYRzRnSUM1amIyNTBZV04wSUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFMWNIZzdYRzRnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2JpQWdJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dNUzQzTTNCNE8xeHVJQ0FnSUdOdmJHOXlPaUFrY0hKcGJXRnllVHRjYmx4dUlDQWdJSEFnZTF4dUlDQWdJQ0FnYldGeVoybHVPaUF3TzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUQ0Z1pHbDJJSHRjYmx4dUlDQjlYRzU5WEc1Y2JpNW1iMjkwWlhJdGJHOW5ieUI3WEc0Z0lITjJaeUI3WEc0Z0lDQWdkMmxrZEdnNklEZzFjSGc3WEc0Z0lDQWdhR1ZwWjJoME9pQTVPWEI0TzF4dUlDQWdJR1pwYkd3NklDUmhZMk5sYm5RdE1UdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2ZWeHVmVnh1SWl3aVltOWtlUzV3WVdkbE9tNXZkQ2d1Wm5KdmJuUXRjR0ZuWlNrZ2UxeHVJQ0ErSUcxaGFXNGdlMXh1SUNBZ0lIQmhaR1JwYm1jNklEY3djSGdnTUR0Y2JpQWdJQ0ErSUhObFkzUnBiMjRnZTF4dUlDQWdJQ0FnUGlCa2FYWWdlMXh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JqYjI1MFpXNTBWMmxrZEdnN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHTnZiRzl5T2lBa2NISnBiV0Z5ZVR0Y2JseHVJQ0FnSUNBZ0ppNWlaeTF3Y21sdFlYSjVJSHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pIQnlhVzFoY25rN1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1U3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURZd2NIZ2dNRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG5ObFkzUnBiMjR0YVc1dVpYSWdlMXh1SUNCd1lXUmthVzVuT2lBd0lESXdjSGc3WEc1OVhHNGlMQ0lsYVcxblEyOTJaWElnZTF4dUlDQkFhVzVqYkhWa1pTQnBiV2REYjNabGNqdGNibjFjYmk1b2NDMXpiR2xrWlhOb2IzY2dlMXh1SUNCb1pXbG5hSFE2SURFd01IWm9PMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNWNiaUFnTG05M2JDMWpZWEp2ZFhObGJDQjdYRzRnSUNBZ0xtOTNiQzFwZEdWdElIdGNiaUFnSUNBZ0lHaGxhV2RvZERvZ01UQXdkbWc3WEc1Y2JpQWdJQ0FnSUQ0Z1pHbDJJSHRjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4TURBbE8xeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR2x0WnlCN1hHNGdJQ0FnSUNBZ0lFQmxlSFJsYm1RZ0pXbHRaME52ZG1WeU8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM1dmQyd3RibUYySUh0Y2JpQWdJQ0FnSUdKMWRIUnZiaUI3WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ2RHOXdPaUExTUNVN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBMU1IQjRPMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJRFV3Y0hnN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxMGIzQTZJREZ3ZUNCemIyeHBaQ0FrZDJocGRHVTdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMXlhV2RvZERvZ01YQjRJSE52Ykdsa0lDUjNhR2wwWlR0Y2JseHVJQ0FnSUNBZ0lDQnpjR0Z1SUh0Y2JpQWdJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQnpjazl1YkhrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdMbTkzYkMxd2NtVjJJSHRjYmlBZ0lDQWdJQ0FnYkdWbWREb2dNRHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnTG05M2JDMXVaWGgwSUh0Y2JpQWdJQ0FnSUNBZ2NtbG5hSFE2SURBN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpNW9jQzF1WVhacFoyRjBhVzl1SUh0Y2JpQWdZU0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh1SUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUdobGFXZG9kRG9nTVRBd2RtZzdYRzRnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURVd2NIZzdYRzRnSUNBZ1kyOXNiM0k2SUNSM2FHbDBaVHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUNBZ2RHVjRkQzF6YUdGa2IzYzZJREJ3ZUNBMGNIZ2dOM0I0SUNSelpXTnZibVJoY25rN1hHNGdJQ0FnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bE8xeHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWthR1ZoWkdsdVowWkdPMXh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pIQnlhVzFoY25rN1hHNWNiaUFnSUNCQWJXVmthV0VnSTNza2JXVmthV0ZVWVdKc1pYUjlJSHRjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nT0RCd2VEdGNiaUFnSUNCOVhHNWNiaUFnSUNCQWJXVmthV0VnSTNza2JXVmthV0ZFWlhOcmRHOXdmU0I3WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFMU5YQjRPMXh1SUNBZ0lIMWNibHh1SUNBZ0lITndZVzRnZTF4dUlDQWdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJQ0FnZWkxcGJtUmxlRG9nTVR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwYldjZ2UxeHVJQ0FnSUNBZ1FHVjRkR1Z1WkNBbGFXMW5RMjkyWlhJN1hHNGdJQ0FnSUNCNkxXbHVaR1Y0T2lBd08xeHVJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eU5YTTdYRzRnSUNBZ0lDQm1hV3gwWlhJNklHSnNkWElvTVRod2VDazdYRzVjYmlBZ0lDQWdJRUJ6ZFhCd2IzSjBjeUFvYjJKcVpXTjBMV1pwZERvZ1kyOTJaWElwSUh0Y2JpQWdJQ0FnSUNBZ2QybGtkR2c2SURFd015VTdYRzRnSUNBZ0lDQWdJR2hsYVdkb2REb2dNVEF6SlR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0FtT21odmRtVnlJSHRjYmlBZ0lDQWdJR2x0WnlCN1hHNGdJQ0FnSUNBZ0lHWnBiSFJsY2pvZ1lteDFjaWd3S1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmlJc0lpNWpiMjUwWlc1MExXZHlhV1FnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHWnNaWGd0YzNSaGNuUTdYRzRnSUdac1pYZ3RkM0poY0RvZ2QzSmhjRHRjYmlBZ2JXRnlaMmx1T2lBd0lDMHhNbkI0TzF4dVhHNGdJRnRqYkdGemMxNDlYQ0pqYjJ4Y0lsMGdlMXh1SUNBZ0lIQmhaR1JwYm1jNklERXljSGc3WEc0Z0lIMWNibHh1SUNCcGJXY2dlMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdmVnh1ZlZ4dVhHNHVZMjlzTFRFZ2UxeHVJQ0IzYVdSMGFEb2dNek11TXpNbE8xeHVJQ0JtYkdWNE9pQXdJREFnTXpNdU16TWxPMXh1ZlZ4dVhHNHVZMjlzTFRJZ2UxeHVJQ0IzYVdSMGFEb2dOall1TmpjbE8xeHVJQ0JtYkdWNE9pQXdJREFnTmpZdU5qY2xPMXh1ZlZ4dVhHNHVZMjlzTFRNZ2UxeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdabXhsZURvZ01DQXdJREV3TUNVN1hHNTlYRzRpTENJdkx5QlRTVTVIVEVVZ1VGSlBTa1ZEVkZ4dUxuQnliMnBsWTNRdGFHVnlieUI3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnYldGNExXaGxhV2RvZERvZ01UQXdkbWc3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklERXljSGc3WEc1Y2JpQWdhVzFuSUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0JvWldsbmFIUTZJR0YxZEc4N1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUgxY2JseHVJQ0ErSUdScGRpQjdYRzRnSUNBZ1FHbHVZMngxWkdVZ1kyOXVkR1Z1ZEZkcFpIUm9PMXh1SUNCOVhHNTlYRzVjYmk1bmNtbGtMWFJwZEd4bElIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQnNaV1owT2lBd08xeHVJQ0JpYjNSMGIyMDZJREE3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCd1lXUmthVzVuT2lBd0lESTBjSGdnTXpod2VDQXlOSEI0TzF4dUlDQmpiMnh2Y2pvZ0pIZG9hWFJsTzF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z0xqSTFjenRjYmx4dUlDQnpiV0ZzYkNCN1hHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDUm9aV0ZrYVc1blJrWTdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJQ2cwTUNBdklETXdLU0FxSURGbGJUdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dKR0p2YkdRN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeU5IQjRPMXh1SUNCOVhHNTlYRzVjYmk1d2NtOXFaV04wTFcxaGFXNGdlMXh1SUNBK0lHUnBkaUI3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZMjl1ZEdWdWRGZHBaSFJvTzF4dUlDQjlYRzU5WEc1Y2JpOHZJRkJTVDBwRlExUWdSMUpKUkZ4dUxuSmxiR0YwWldRdGNISnZhbVZqZEhNZ2UxeHVJQ0J3WVdSa2FXNW5PaUEzTUhCNElEQTdYRzU5WEc1Y2JpNXdjbTlxWldOMExXZHlhV1FnZTF4dUlDQStJR1JwZGlCN1hHNGdJQ0FnUUdsdVkyeDFaR1VnWTI5dWRHVnVkRmRwWkhSb08xeHVJQ0I5WEc1Y2JpQWdhVzFuSUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0JvWldsbmFIUTZJR0YxZEc4N1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUgxY2JseHVJQ0JoY25ScFkyeGxJSHRjYmlBZ0lDQndZV1JrYVc1bk9pQXhNbkI0TzF4dUlDQWdJSGRwWkhSb09pQXpNeTR6TXlVN1hHNGdJQ0FnWm14bGVEb2dNQ0F3SURNekxqTXpKVHRjYmx4dUlDQWdJQ1k2Ym5Sb0xXTm9hV3hrS0ROdUlDc2dNaWtnZTF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMDNNSEI0S1R0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCaElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ1kyOXNiM0k2SUNSM2FHbDBaVHRjYmlBZ2ZWeHVYRzRnSUhOdFlXeHNJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREl4Y0hnN1hHNGdJSDFjYmx4dUlDQXVaM0pwWkMxMGFYUnNaU0I3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEUTRjSGc3WEc0Z0lIMWNibHh1SUNBbUxtRnlZMmhwZG1VZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDUndjbWx0WVhKNU8xeHVJQ0FnSUdOdmJHOXlPaUFrZDJocGRHVTdYRzRnSUgxY2JuMWNibHh1TG5CeWIycGxZM1F0WjNKcFpDMXBibTVsY2lCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR1pzWlhndGQzSmhjRG9nZDNKaGNEdGNiaUFnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJtYkdWNExYTjBZWEowTzF4dUlDQnRZWEpuYVc0NklEQWdMVEV5Y0hnN1hHNGdJSEJoWkdScGJtYzZJRFk0Y0hnZ01DQTNNSEI0TzF4dUlDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzU5WEc0aUxDSXVjSEpsYzNNdGJHbHpkR2x1WnlCN1hHNGdJSEJoWkdScGJtYzZJRGN3Y0hnZ01EdGNibHh1SUNBK0lHUnBkaUI3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZMjl1ZEdWdWRGZHBaSFJvTzF4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlWUmhZbXhsZEgwZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdVlYSjBhV05zWlhNZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjYmlBZ0lDQmhjblJwWTJ4bElIdGNiaUFnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFdU5HVnRPMXh1SUNBZ0lDQWdjM0JoYmlCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR0VnZTF4dUlDQWdJQ0FnWTI5c2IzSTZJQ1J3Y21sdFlYSjVPMXh1SUNBZ0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCb2IzWmxjaUI3WEc0Z0lDQWdJQ0FnSUhOd1lXNDZiR0Z6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCMWJtUmxjbXhwYm1VN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVMbTkxZEd4bGRDMW5jbWxrSUh0Y2JpQWdRRzFsWkdsaElDTjdKRzFsWkdsaFZHRmliR1YwZlNCN1hHNGdJQ0FnZDJsa2RHZzZJRFUyTGpVbE8xeHVYRzRnSUNBZ2JtRjJJSHRjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ6ZEdsamEzazdYRzRnSUNBZ0lDQjBiM0E2SUNSb1pXRmtaWEpJWldsbmFIUTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdkV3dnZTF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnWm14bGVDMTNjbUZ3T2lCM2NtRndPMXh1SUNBZ0lHMWhjbWRwYmpvZ0xURXljSGc3WEc0Z0lIMWNibHh1SUNCc2FTQjdYRzRnSUNBZ1pteGxlRG9nTUNBd0lEVXdKVHRjYmlBZ0lDQjNhV1IwYURvZ05UQWxPMXh1SUNBZ0lIQmhaR1JwYm1jNklERXljSGc3WEc1Y2JpQWdJQ0JBYldWa2FXRWdJM3NrYldWa2FXRlVZV0pzWlhSOUlIdGNiaUFnSUNBZ0lHWnNaWGc2SURBZ01DQXpNeTR6SlR0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF6TXk0ekpUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQnBiV2NnZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dZWFYwYnp0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnZlZ4dVhHNGdJSE53WVc0Z2UxeHVJQ0FnSUVCcGJtTnNkV1JsSUhOeVQyNXNlVHRjYmlBZ2ZWeHVYRzRnSUdFZ2UxeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TlhNN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0kwUkVSRVJFUkR0Y2JseHVJQ0FnSUVCcGJtTnNkV1JsSUdodmRtVnlJSHRjYmlBZ0lDQWdJRzl3WVdOcGRIazZJQzR5TlR0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBbUxuUmhlQzFoY21Ob2FYWmxJSHRjYmlBZ0lDQmhJSHRjYmlBZ0lDQWdJRzl3WVdOcGRIazZJQzR5TlR0Y2JseHVJQ0FnSUNBZ1FHbHVZMngxWkdVZ2FHOTJaWElnZTF4dUlDQWdJQ0FnSUNCdmNHRmphWFI1T2lBdU56VTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2JHa3VZV04wYVhabElHRWdlMXh1SUNBZ0lDQWdiM0JoWTJsMGVUb2dNVHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG1GeWRHbGpiR1Z6SUh0Y2JpQWdRRzFsWkdsaElDTjdKRzFsWkdsaFZHRmliR1YwZlNCN1hHNGdJQ0FnWm14bGVEb2dNQ0F3SURNeUxqSWxPMXh1SUNBZ0lIZHBaSFJvT2lBek1pNHlKVHRjYmlBZ2ZWeHVmVnh1SWl3aUxuQmxiM0JzWlNBK0lHMWhhVzRnZTF4dUlDQndZV1JrYVc1bk9pQTNNSEI0SURBN1hHNTlYRzR1Y0dWdmNHeGxMV2R5YVdRZ2UxeHVJQ0ErSUdScGRpQjdYRzRnSUNBZ1FHbHVZMngxWkdVZ1kyOXVkR1Z1ZEZkcFpIUm9PMXh1SUNCOVhHNWNiaUFnYVcxbklIdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCb1pXbG5hSFE2SUdGMWRHODdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lIMWNibHh1SUNBdVozSnBaQzEwYVhSc1pTQjdYRzRnSUNBZ2IzQmhZMmwwZVRvZ01EdGNiaUFnZlZ4dVhHNGdJR0Z5ZEdsamJHVWdlMXh1SUNBZ0lIQmhaR1JwYm1jNklERXljSGc3WEc0Z0lDQWdkMmxrZEdnNklETXpMak16SlR0Y2JpQWdJQ0JtYkdWNE9pQXdJREFnTXpNdU16TWxPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibHh1SUNBZ0lDWTZiblJvTFdOb2FXeGtLRE51SUNzZ01pa2dlMXh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwM01IQjRLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmhJSHRjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdMbWR5YVdRdGRHbDBiR1VnZTF4dUlDQWdJQ0FnSUNBZ0lHOXdZV05wZEhrNklERTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG5CbGIzQnNaUzFuY21sa0xXbHVibVZ5SUh0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR1pzWlhndGMzUmhjblE3WEc0Z0lHMWhjbWRwYmpvZ01DQXRNVEp3ZUR0Y2JpQWdjR0ZrWkdsdVp6b2dOamh3ZUNBd0lEY3djSGc3WEc1OVhHNWNiaTV3Wlc5d2JHVXRZbWx2SUh0Y2JpQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lHMXBiaTFvWldsbmFIUTZJREV3TUNVN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ2JHVm1kRG9nTVRBd0pUdGNiaUFnZEc5d09pQXdPMXh1SUNCd1lXUmthVzVuT2lBeE1uQjRPMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1WEc0Z0lIQWdlMXh1SUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1U3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF5TVhCNE8xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQW9NamNnTHlBeU1Ta2dLaUF4WlcwN1hHNGdJSDFjYmx4dUlDQStJR1JwZGlCN1hHNGdJQ0FnYldsdUxXaGxhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUFrY0hKcGJXRnllVHRjYmlBZ0lDQndZV1JrYVc1bk9pQXhPSEI0TzF4dUlDQjlYRzVjYmlBZ1luVjBkRzl1SUh0Y2JpQWdJQ0IzYVdSMGFEb2dNalZ3ZUR0Y2JpQWdJQ0JvWldsbmFIUTZJREkxY0hnN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJSFJ2Y0RvZ01qVndlQ0FySURFeU8xeHVJQ0FnSUhKcFoyaDBPaUF5TlhCNElDc2dNVEk3WEc1Y2JpQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FrZDJocGRHVTdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUTdYRzRnSUNBZ2RHVjRkQzFwYm1SbGJuUTZJQzA1T1RrNWNIZzdYRzRnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JpQWdJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eU5YTTdYRzVjYmlBZ0lDQW1PbUpsWm05eVpTeGNiaUFnSUNBbU9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF4TkRBbE8xeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBeGNIZzdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQjBiM0E2SURVd0pUdGNiaUFnSUNBZ0lHeGxablE2SURVd0pUdGNiaUFnSUNBZ0lHTnZiblJsYm5RNklGd2lYQ0k3WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBa2QyaHBkR1U3WEc0Z0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dMakkxY3p0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0FtT21KbFptOXlaU0I3WEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xUVXdKU2tnY205MFlYUmxLRFExWkdWbktUdGNiaUFnSUNCOVhHNGdJQ0FnSmpwaFpuUmxjaUI3WEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xUVXdKU2tnY205MFlYUmxLQzAwTldSbFp5azdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1FHbHVZMngxWkdVZ2FHOTJaWElnZTF4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2NtZGlZU2drZDJocGRHVXNMamtwTzF4dUlDQWdJQ0FnWW05eVpHVnlMV052Ykc5eU9pQWtjSEpwYldGeWVUdGNibHh1SUNBZ0lDQWdKanBpWldadmNtVXNYRzRnSUNBZ0lDQW1PbUZtZEdWeUlIdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKSEJ5YVcxaGNuazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTVpYVc4dGRHbDBiR1VnZTF4dUlDQjNhV1IwYURvZ1kyRnNZeWd4TURBbElDMGdNelZ3ZUNrN1hHNGdJSEFnZTF4dUlDQWdJQ1k2Wm1seWMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2JpQWdJQ0FnSUcxaGNtZHBiam9nTUR0Y2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUxuQmxiM0JzWlMxbmNtbGtJR0Z5ZEdsamJHVWdlMXh1SUNBbU9tNTBhQzFqYUdsc1pDZ3piaWtzWEc0Z0lDWTZiblJvTFdOb2FXeGtLRE51S3pFcElIdGNiaUFnSUNBdWNHVnZjR3hsTFdKcGJ5QjdYRzRnSUNBZ0lDQjBiM0E2SUMwM01IQjRPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQ1k2Ym5Sb0xXTm9hV3hrS0ROdUt6SXBJSHRjYmlBZ0lDQXVjR1Z2Y0d4bExXSnBieUI3WEc0Z0lDQWdJQ0IwYjNBNklEY3djSGc3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnSmpwdWRHZ3RZMmhwYkdRb00yNHBJSHRjYmlBZ0lDQXVjR1Z2Y0d4bExXSnBieUI3WEc0Z0lDQWdJQ0JzWldaME9pQmhkWFJ2TzF4dUlDQWdJQ0FnY21sbmFIUTZJREV3TUNVN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUNZdWIzQmxiaUI3WEc0Z0lDQWdlaTFwYm1SbGVEb2dNVEE3WEc1Y2JpQWdJQ0F1Y0dWdmNHeGxMV0pwYnlCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJSVUZCT3p0SFFVVkhPMEZYUmtnc1QwRkJUeXhEUVVGRExIVkhRVUZKTzBGWVIxb3NRVUZCUVN4aFFVRmhMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzU1VGQlNUdEZRVU5pTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc01rSkJRVEpDTEVWQlFVVXNWMEZCVnp0RlFVTjRReXh2UlVGQmIwVTdSVUZEY0VVc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRXJSMVk3TzBGQmNraEVMRUZCVVVNc1lVRlNXU3hEUVZGYUxGVkJRVlVzUTBGQlF6dEZRVU5XTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xHZENRVUZuUWl4RlFVRkZMRXRCUVVzN1JVRkRka0lzV1VGQldTeEZRVUZGTEZsQlFWazdSVUZETVVJc2QwSkJRWGRDTEVWQlFVVXNUVUZCVFR0RlFVRkZMR3REUVVGclF6dERRVU53UlRzN1FVRmlSaXhCUVdWRExHRkJabGtzUTBGbFdpeFZRVUZWTEVGQlFVRXNUVUZCVFN4RFFVRkRPMFZCUTJoQ0xFOUJRVThzUlVGQlJTeEhRVUZITzBWQlExb3NUMEZCVHl4RlFVRkZMRXRCUVVzN1JVRkRaQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEZWQlFWVXNSVUZCUlN4TlFVRk5PMFZCUTJ4Q0xGZEJRVmNzUlVGQlJTeERRVUZETzBWQlEyUXNUVUZCVFN4RlFVRkZMRU5CUVVNN1EwRkRWRHM3UVVGMFFrWXNRVUYzUWtNc1lVRjRRbGtzUTBGM1Fsb3NaMEpCUVdkQ0xFTkJRVU03UlVGRGFFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVVVGQlVTeEZRVUZGTEUxQlFVMDdSVUZEYUVJc2FVTkJRV2xETzBWQlEycERMR2xDUVVGcFFpeEZRVUZGTERCQ1FVRXdRanREUVVNM1F6czdRVUUzUWtZc1FVRXJRa01zWVVFdlFsa3NRMEVyUWxvc1dVRkJXVHRCUVM5Q1lpeGhRVUZoTEVOQlowTmFMRk5CUVZNc1EwRkJRVHRGUVVOU0xESkNRVUV5UWl4RlFVRkZMRTFCUVUwN1JVRkRia01zZDBKQlFYZENMRVZCUVVVc1RVRkJUVHRGUVVOb1F5eDFRa0ZCZFVJc1JVRkJSU3hOUVVGTk8wVkJReTlDTEdsQ1FVRnBRaXhGUVVGRkxHOUNRVUZyUWp0RlFVTnlReXhqUVVGakxFVkJRVVVzYjBKQlFXdENPMFZCUTJ4RExHRkJRV0VzUlVGQlJTeHZRa0ZCYTBJN1EwRkRha003TzBGQmRrTkdMRUZCZVVORExHRkJla05aTEVOQmVVTmFMRk5CUVZNc1EwRkJRenRGUVVOVUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRlZCUVZVc1JVRkJSU3hIUVVGSE8wVkJRMllzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N3eVFrRkJNa0lzUlVGQlJTeE5RVUZOTzBWQlEyNURMREpDUVVFeVFpeEZRVUZGTEZkQlFWYzdSVUZEZUVNc2NVSkJRWEZDTEVWQlFVVXNTVUZCU1R0RFFVTXpRanM3UVVGb1JFWXNRVUZwUkVNc1lVRnFSRmtzUTBGcFJGb3NVMEZCVXl4RFFVRkRMRWRCUVVjc1EwRkJRenRGUVVOaUxFOUJRVThzUlVGQlJTeExRVUZMTzBWQlEyUXNTMEZCU3l4RlFVRkZMRWxCUVVrN1EwRkRXRHM3UVVGd1JFWXNRVUZ6UkVNc1lVRjBSRmtzUTBGelJGb3NVVUZCVVN4QlFVRkJMRk5CUVZNN1FVRjBSR3hDTEdGQlFXRXNRMEYxUkZvc1UwRkJVeXhCUVVGQkxGTkJRVk1zUTBGQlF6dEZRVU5zUWl4UFFVRlBMRVZCUVVVc1NVRkJTVHREUVVOaU96dEJRWHBFUml4QlFUSkVReXhoUVRORVdTeERRVEpFV2l4UlFVRlJMRU5CUVVNc1UwRkJVenRCUVRORWJrSXNZVUZCWVN4RFFUUkVXaXhSUVVGUkxFTkJRVU1zVTBGQlV6dEJRVFZFYmtJc1lVRkJZU3hEUVRaRVdpeFJRVUZSTEVOQlFVTTdSVUZEVWl4TlFVRk5MRVZCUVVVc1QwRkJUenRGUVVObUxHMUNRVUZ0UWl4RlFVRkZMRWxCUVVrN1JVRkRla0lzYTBKQlFXdENMRVZCUVVVc1NVRkJTVHRGUVVONFFpeG5Ra0ZCWjBJc1JVRkJSU3hKUVVGSk8wVkJRM1JDTEdWQlFXVXNSVUZCUlN4SlFVRkpPMFZCUTNKQ0xGZEJRVmNzUlVGQlJTeEpRVUZKTzBOQlEycENPenRCUVhCRlJpeEJRWE5GUXl4aFFYUkZXU3hEUVhORldpeFJRVUZSTEVOQlFVTXNUVUZCVFN4QlFVRkJMRk5CUVZNN1FVRjBSWHBDTEdGQlFXRXNRMEYxUlZvc1VVRkJVU3hEUVVGRExFMUJRVTBzUVVGQlFTeFRRVUZUTzBGQmRrVjZRaXhoUVVGaExFTkJkMFZhTEUxQlFVMHNRVUZCUVN4UlFVRlJMRU5CUVVNN1JVRkRaQ3hWUVVGVkxFVkJRVVVzU1VGQlNUdEZRVU5vUWl4TFFVRkxMRVZCUVVVc1QwRkJUenRGUVVOa0xFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NUMEZCVHl4RlFVRkRMRU5CUVVNc1EwRkJRU3hWUVVGVk8wVkJRMjVDTEVsQlFVa3NSVUZCUlN4UFFVRlBPME5CUTJJN08wRkJPVVZHTEVGQlowWkRMR0ZCYUVaWkxFRkJaMFpZTEZkQlFWY3NRMEZCUXp0RlFVTmFMRTlCUVU4c1JVRkJSU3hMUVVGTE8wTkJRMlE3TzBGQmJFWkdMRUZCYjBaRExHRkJjRVpaTEVGQmIwWllMRmxCUVZrc1EwRkJRenRGUVVOaUxFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNUMEZCVHl4RlFVRkZMRXRCUVVzN1EwRkRaRHM3UVVGMlJrWXNRVUY1UmtNc1lVRjZSbGtzUVVGNVJsZ3NWMEZCVnl4RFFVRkRPMFZCUTFvc1QwRkJUeXhGUVVGRkxFTkJRVU03UTBGRFZqczdRVUV6UmtZc1FVRTJSa01zWVVFM1Jsa3NRVUUyUmxnc1dVRkJXU3hEUVVGRExGTkJRVk1zUTBGQlF6dEZRVU4yUWl4VlFVRlZMRVZCUVVVc1RVRkJUVHREUVVOc1FqczdRVUV2UmtZc1FVRnBSME1zWVVGcVIxa3NRVUZwUjFnc1UwRkJVeXhEUVVGRExGTkJRVk1zUTBGQlF6dEZRVU53UWl4WlFVRlpMRVZCUVVVc1MwRkJTenRGUVVOdVFpeHRRa0ZCYlVJc1JVRkJSU3hKUVVGSk8wVkJRM3BDTEdkQ1FVRm5RaXhGUVVGRkxFbEJRVWs3UlVGRGRFSXNaVUZCWlN4RlFVRkZMRWxCUVVrN1JVRkRja0lzVjBGQlZ5eEZRVUZGTEVsQlFVazdRMEZEYWtJN08wRkJka2RHTEVGQmVVZERMR0ZCZWtkWkxFRkJlVWRZTEZOQlFWTXNRMEZCUXp0RlFVTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVFVGQlRTeEZRVUZGTEVsQlFVazdRMEZEV2pzN1FVRTFSMFlzUVVFNFIwTXNZVUU1UjFrc1FVRTRSMWdzVVVGQlVTeERRVUZETzBWQlExUXNVMEZCVXl4RlFVRkZMRWRCUVVjN1EwRkRaRHM3UVVGb1NFWXNRVUZyU0VNc1lVRnNTRmtzUVVGclNGZ3NVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJRenRGUVVOdVFpeExRVUZMTEVWQlFVVXNTMEZCU3p0RFFVTmFPenRCUVVkR0xGZEJRVmM3UVVGRFdDeEJRVUZCTEUxQlFVMHNRMEZCUXl4aFFVRmhMRU5CUVVNN1JVRkRjRUlzVDBGQlR5eEZRVUZGTEV0QlFVczdRMEZEWkRzN1FVTTNTRVE3TzBkQlJVYzdRVUZEU0N4QlFVTkRMR0ZCUkZrc1EwRkRXaXhUUVVGVExFTkJRVU03UlVGRFZDeHJRa0ZCYTBJc1JVRkJSU3hOUVVGTk8wVkJRekZDTEcxQ1FVRnRRaXhGUVVGRkxFbEJRVWs3UTBGRGVrSTdPMEZCU2tZc1FVRkxReXhoUVV4WkxFTkJTMW9zWjBKQlFXZENMRU5CUVVNN1JVRkRhRUlzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZEVmpzN1FVRlFSaXhCUVZGRExHRkJVbGtzUTBGUldpeHBRa0ZCYVVJc1EwRkJRenRGUVVOcVFpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RFFVTldPenRCUVZaR0xFRkJWME1zWVVGWVdTeERRVmRhTEZGQlFWRXNRMEZCUXp0RlFVTlNMR05CUVdNc1JVRkJSU3hQUVVGUE8wTkJRM1pDT3p0QlFVZEdMRlZCUVZVc1EwRkJWaXhQUVVGVk8wVkJRMVFzUlVGQlJUdEpRVU5FTEU5QlFVOHNSVUZCUlN4RFFVRkRPenRGUVVkWUxFbEJRVWs3U1VGRFNDeFBRVUZQTEVWQlFVVXNRMEZCUXpzN096dEJRM3BDV2pzN1IwRkZSenRCUVVWSUxFRkJRVUVzVjBGQlZ5eERRVUZETzBWQlExZ3NWVUZCVlN4RlFVRkZMSGRDUVVGM1FqdERRVU53UXpzN1FVTk9SRHM3UjBGRlJ6dEJTRU5JTEVGQmVVTkRMR0ZCZWtOWkxFTkJlVU5hTEZOQlFWTXNRMGQyUTBNN1JVRk5WRHM3TzB0QlIwYzdRMEZSU0RzN1FVRnNRa1lzUVVGRlJTeGhRVVpYTEVOQlExb3NVMEZCVXl4RFFVTlNMRk5CUVZNc1EwRkJRenRGUVVOU0xFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNWVUZCVlN4RlFVRkZMR3RDUVVGclFqdERRVU12UWpzN1FVRk1TQ3hCUVZkRkxHRkJXRmNzUTBGRFdpeFRRVUZUTEVOQlZWSXNVMEZCVXl4RFFVRkJMRUZCUVVFc1IwRkJReXhGUVVGTExFVkJRVVVzUVVGQlVDeEhRVmhhTEdGQlFXRXNRMEZEV2l4VFFVRlRMRU5CVlZrc1UwRkJVeXhCUVVGQkxFbEJRVXNzUlVGQlFTeEJRVUZCTEVkQlFVTXNRVUZCUVN4SFFVRk5PMFZCUTNoRExGVkJRVlVzUlVGQlJTeERRVUZETzBOQlEySTdPMEZCWWtnc1FVRmxSU3hoUVdaWExFTkJRMW9zVTBGQlV5eERRV05TTEVkQlFVY3NRVUZCUVN4VFFVRlRMRU5CUVVNN1JVRkRXaXhsUVVGbExFVkJRVVVzVjBGQlZ6dERRVU0xUWpzN1FVTnVRa2c3TzBkQlJVYzdRVUZGU0N4QlFVTkRMR0ZCUkZrc1EwRkRXaXhyUWtGQmEwSXNRMEZCUXp0RlFVTnNRaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxGVkJRVlVzUlVGQlJTeEpRVUZKTzBOQlEyaENPenRCUVV4R0xFRkJUME1zWVVGUVdTeERRVTlhTEc5Q1FVRnZRaXhEUVVGRE8wVkJRM0JDTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hKUVVGSkxFVkJRVVVzUjBGQlJ6dEZRVU5VTEVkQlFVY3NSVUZCUlN4SFFVRkhPMFZCUTFJc1YwRkJWeXhGUVVGRkxFdEJRVXM3UlVGRGJFSXNWVUZCVlN4RlFVRkZMRXRCUVVzN1JVRkRha0lzVlVGQlZTeEZRVUZGTEhsQ1FVRXlReXhEUVVGRExGTkJRVk03UlVGRGFrVXNUVUZCVFN4RlFVRkZMRTlCUVU4N1JVRkRaaXhQUVVGUExFVkJRVVVzUTBGQlF6dEZRVU5XTERKQ1FVRXlRaXhGUVVGRkxFMUJRVTA3UlVGRGJrTXNWVUZCVlN4RlFVRkZMRzlDUVVGdlFqdERRVU5vUXpzN1FVRndRa1lzUVVGelFrTXNZVUYwUWxrc1EwRnpRbG9zYjBKQlFXOUNMRUZCUVVFc1RVRkJUU3hEUVVGRE8wVkJRekZDTEZOQlFWTXNSVUZCUlN4bFFVRmxPME5CUXpGQ096dEJRWGhDUml4QlFUQkNReXhoUVRGQ1dTeERRVEJDV2l4clFrRkJhMElzUTBGQlF5eGhRVUZoTzBGQk1VSnFReXhoUVVGaExFTkJNa0phTEd0Q1FVRnJRaXhEUVVGRExHOUNRVUZ2UWl4RFFVRkRPMFZCUTNaRExFOUJRVThzUlVGQlJTeEpRVUZKTzBOQlEySTdPMEZCTjBKR0xFRkJLMEpETEdGQkwwSlpMRU5CSzBKYUxHRkJRV0VzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4RFFVRkRPMFZCUTFZc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeHRRa0ZCYlVJc1JVRkJSU3hoUVVGaE8wVkJRMnhETEdsQ1FVRnBRaXhGUVVGRkxGTkJRVk03UlVGRE5VSXNaVUZCWlN4RlFVRkZMRTlCUVU4N1JVRkRlRUlzVlVGQlZTeEZRVUZGTEd0Q1FVRnJRanREUVVNNVFqczdRVUYwUTBZc1FVRjNRME1zWVVGNFExa3NRMEYzUTFvc1owSkJRV2RDTEVOQlFVTTdSVUZEYUVJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEV0QlFVc3NSVUZCUlN4SlFVRkpPME5CUTFnN08wRkZia1JHT3p0SFFVVkhPMEZEUkVnc1FVRkZReXhWUVVaVExFTkJSVlFzVVVGQlVTeERRVUZETzBWQlExSXNWVUZCVlN4RlFVRkZMRWxCUVVrN1JVRkRhRUlzVlVGQlZTeEZRVUZGTEUxQlFVMDdSVUZEYkVJc01rSkJRVEpDTEVWQlFVVXNWMEZCVnp0RFFYTkNlRU03TzBGQk0wSkdMRUZCVDBVc1ZVRlFVU3hEUVVWVUxGRkJRVkVzUlVGTFVDeEJRVUZCTEV0QlFVTXNSVUZCVHl4TlFVRk5MRUZCUVdJc1JVRkJaVHRGUVVObUxFdEJRVXNzUlVSS1VTeEpRVUZKTzBWRFMycENMRk5CUVZNc1JVUkZUU3hKUVVGSk8wVkRSRzVDTEUxQlFVMHNSVVJIVHl4SFFVRkhPMFZEUm1oQ0xFOUJRVThzUlVSSFR5eEhRVUZITEVOQlFVTXNSMEZCUnp0RlEwWnlRaXhWUVVGVkxFVkVVRVVzVDBGQlR6dEZRMUZ1UWl4UFFVRlBMRVZCUVVVc1dVRkJXVHRGUVVOeVFpeE5RVUZOTEVWQlFVVXNUMEZCVHp0RlFVTm1MR0ZCUVdFc1JVRkJSU3hIUVVGSE8wTkJUMnhDT3p0QlFYUkNTQ3hCUVdsQ1J5eFZRV3BDVHl4RFFVVlVMRkZCUVZFc1JVRkxVQ3hCUVVGQkxFdEJRVU1zUlVGQlR5eE5RVUZOTEVGQlFXSXNRMEZWUXl4TlFVRk5MRU5CUVVNN1JVRkRVQ3hWUVVGVkxFVkVaa01zVDBGQlR6dEZRMmRDYkVJc1MwRkJTeXhGUkdaUExFbEJRVWs3UlVOblFtaENMR1ZCUVdVc1JVRkJSU3hKUVVGSk8wTkJRM0pDT3p0QlFYSkNTaXhCUVhWQ1JTeFZRWFpDVVN4RFFVVlVMRkZCUVZFc1EwRnhRbEFzVTBGQlV5eERRVUZETzBWQlExUXNUMEZCVHl4RlJGQmpMRWRCUVVjN1JVTlJlRUlzVFVGQlRTeEZRVUZGTEU5QlFVODdRMEZEWmpzN1FVRXhRa2dzUVVFNFFrTXNWVUU1UWxNc1EwRTRRbFFzVVVGQlVTeEJRVUZCTEZOQlFWTXNSMEZCUnl4VFFVRlRMRU5CUVVNN1JVRkROMElzVlVGQlZTeEZRVUZGTEVsQlFVazdRMEZEYUVJN08wRkJhRU5HTEVGQmEwTkRMRlZCYkVOVExFTkJhME5VTEZOQlFWTXNRMEZCUXp0RlFVTlVMRlZCUVZVc1JVRkJSU3hOUVVGTk8wVkJRMnhDTERKQ1FVRXlRaXhGUVVGRkxGZEJRVmM3UTBGNVFuaERPenRCUVRkRVJpeEJRWE5EUlN4VlFYUkRVU3hEUVd0RFZDeFRRVUZUTEVOQlNWSXNVVUZCVVN4RFFVRkRPMFZCUTFJc1QwRkJUeXhGUVVGRkxGbEJRVms3UlVGRGNrSXNTVUZCU1N4RlFVRkZMRU5CUVVNN1JVRkRVQ3hSUVVGUkxFVkJRVVVzVFVGQlRUdERRVzFDYUVJN08wRkJOVVJJTEVGQk1rTkhMRlZCTTBOUExFTkJhME5VTEZOQlFWTXNRMEZKVWl4UlFVRlJMRU5CUzFBc1NVRkJTU3hEUVVGRE8wVkJRMG9zUzBGQlN5eEZSSFpDVFN4SlFVRkpPMFZEZDBKbUxFMUJRVTBzUlVSMlFrc3NTVUZCU1R0RlEzZENaaXhOUVVGTkxFVkVkRUpOTEVkQlFVY3NRMEZCUXl4SFFVRkhPMFZEZFVKdVFpeFZRVUZWTEVWRU1VTkRMRTlCUVU4N1JVTXlRMnhDTEU5QlFVOHNSVUZCUlN4TFFVRkxPMFZCUTJRc01rSkJRVEpDTEVWQlFVVXNUMEZCVHp0RlFVTndReXhWUVVGVkxFVkJRVVVzYTBKQlFXdENPMFZCUXpsQ0xHRkJRV0VzUlVRMVFrUXNTVUZCU1R0RFF6WkNhRUk3TzBGQmNFUktMRUZCZDBSSkxGVkJlRVJOTEVOQmEwTlVMRk5CUVZNc1EwRkpVaXhSUVVGUkxFRkJaMEpPTEU5QlFVOHNRMEZGVUN4SlFVRkpMRVZCZUVSU0xGVkJRVlVzUTBGclExUXNVMEZCVXl4RFFVbFNMRkZCUVZFc1FVRnBRazRzVFVGQlRTeERRVU5PTEVsQlFVa3NRMEZCUXp0RlFVTktMRlZCUVZVc1JVUjBSRUVzVDBGQlR6dERRM1ZFYWtJN08wRkhNMFJNTEVGQlFVRXNRMEZCUXl4RFFVRkRPMFZCUTBFc1RVRkJUU3hGUVVGRkxFTkJRVU03UlVGRFZDeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRTFCUVUwc1JVRkJSU3hEUVVGRE8wVkJRMVFzVlVGQlZTeEZRVUZGTEZWQlFWVTdRMEZEZGtJN08wRkJSVVFzUVVGQlFTeEZRVUZGTzBGQlEwWXNSVUZCUlN4RFFVRkRPMFZCUTBRc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UTBGRGFrSTdPMEZCUlVRc1FVRkJRU3hEUVVGRExFTkJRVU03UlVGRFFTeFZRVUZWTEVWQlFVVXNVVUZCVVR0RFFVVnlRanM3UVVGRlJDeEJRVUZCTEZGQlFWRXNRMEZCUXp0RlJFaFFMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEV0QlFVc3NSVUZCUlN4SFFVRkhPMFZCUTFZc1RVRkJUU3hGUVVGRkxFZEJRVWM3UlVGRFdDeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVVVGQlVTeEZRVUZGTEUxQlFVMDdSVUZEYUVJc1NVRkJTU3hGUVVGRkxHZENRVUZoTzBWQlEyNUNMRTFCUVUwc1JVRkJSU3hEUVVGRE8wTkRSbFk3TzBGQlJVUXNRVUZCUVN4TlFVRk5MRU5CUVVNN1JVRkRUQ3hYUVVGWExFVkdTazRzUjBGQlJ6dERSVXRVT3p0QlFVVkVMRUZCUVVFc1NVRkJTU3hEUVVGRE8wVkJRMGdzVjBGQlZ5eEZSbGhLTEZkQlFWY3NSVUZCUlN4VlFVRlZPME5GV1M5Q096dEJSVE5DUkN4QlFVZExMRWxCU0VRc1FVRkRSQ3hYUVVGWExFZEJSVkFzU1VGQlNTeEZRVWhZTEVsQlFVa3NRVUZGUkN4VFFVRlRMRUZCUVVFc1NVRkJTeXhEUVVGQkxHZENRVUZuUWl4SlFVTXhRaXhKUVVGSkxFTkJRVU03UlVGRFRDeFZRVUZWTEVWQlFVVXNRMEZCUXp0RlFVTmlMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4RFFVRkRPME5CUTFnN08wRkJVRTRzUVVGVFN5eEpRVlJFTEVGQlEwUXNWMEZCVnl4RFFWRlVMRmxCUVZrc1JVRlVha0lzU1VGQlNTeEJRVVZFTEZOQlFWTXNRVUZCUVN4SlFVRkxMRU5CUVVFc1owSkJRV2RDTEVWQlR6VkNMRmxCUVZrc1EwRkJRenRGUVVOWUxGVkJRVlVzUlVGQlJTeFhRVUZYTzBOQmMwSjRRanM3UVVGb1EwNHNRVUZYVHl4SlFWaElMRUZCUTBRc1YwRkJWeXhEUVZGVUxGbEJRVmtzUjBGRlVpeEhRVUZITEVWQldGb3NTVUZCU1N4QlFVVkVMRk5CUVZNc1FVRkJRU3hKUVVGTExFTkJRVUVzWjBKQlFXZENMRVZCVHpWQ0xGbEJRVmtzUjBGRlVpeEhRVUZITEVOQlFVTTdSVUZEU2l4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RFFVTllPenRCUVdSU0xFRkJaVThzU1VGbVNDeEJRVU5FTEZkQlFWY3NRMEZSVkN4WlFVRlpMRUZCVFZRc1QwRkJUeXhGUVdabUxFbEJRVWtzUVVGRlJDeFRRVUZUTEVGQlFVRXNTVUZCU3l4RFFVRkJMR2RDUVVGblFpeEZRVTgxUWl4WlFVRlpMRUZCVFZRc1QwRkJUeXhEUVVGRE8wVkJRMUFzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1MwRkJTenRGUVVOaUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRWRCUVVjc1JVRkJSU3hEUVVGRE8wVkJRMDRzU1VGQlNTeEZRVUZGTEVOQlFVTTdSVUZEVUN4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xFOUJRVThzUlVGQlJTeEZRVUZGTzBWQlExZ3NWVUZCVlN4RlFVRkZMRzFGUVVFMlJEdERRVU14UlRzN1FVRjRRbElzUVVGNVFrOHNTVUY2UWtnc1FVRkRSQ3hYUVVGWExFTkJVVlFzV1VGQldTeERRV2RDVml4RFFVRkRMRVZCZWtKU0xFbEJRVWtzUVVGRlJDeFRRVUZUTEVGQlFVRXNTVUZCU3l4RFFVRkJMR2RDUVVGblFpeEZRVTgxUWl4WlFVRlpMRU5CWjBKV0xFTkJRVU1zUTBGQlF6dEZRVU5CTEV0QlFVc3NSVXB3UWs0c1QwRkJUenREU1hsQ1VEczdRVUV2UWxJc1FVaFBSU3hKUjFCRkxFRkJRMFFzVjBGQlZ5eERRVkZVTEZsQlFWa3NRMEZuUWxZc1EwRkJReXhCU0d4Q1RDeE5RVUZOTEVWSFVGUXNTVUZCU1N4QlFVTkVMRmRCUVZjc1EwRlJWQ3haUVVGWkxFTkJaMEpXTEVOQlFVTXNRVWhxUWt3c1RVRkJUU3hGUjFKVUxFbEJRVWtzUVVGRlJDeFRRVUZUTEVGQlFVRXNTVUZCU3l4RFFVRkJMR2RDUVVGblFpeEZRVTgxUWl4WlFVRlpMRU5CWjBKV0xFTkJRVU1zUVVoc1Frd3NUVUZCVFN4RlIxQlVMRWxCUVVrc1FVRkZSQ3hUUVVGVExFRkJRVUVzU1VGQlN5eERRVUZCTEdkQ1FVRm5RaXhGUVU4MVFpeFpRVUZaTEVOQlowSldMRU5CUVVNc1FVaHFRa3dzVFVGQlRTeERRVUZETzBWSGNVSkRMRXRCUVVzc1JVcDJRbElzZDBKQlFVODdRME5KV2pzN1FVdFdTQ3hCUVVGQkxFVkJRVVVzUlVGQlF5eEhRVUZITEVOQlFVTTdSVUZEVEN4WFFVRlhMRVZPWTBvc1YwRkJWeXhGUVVGRkxGVkJRVlU3UlUxaU9VSXNWMEZCVnl4RlRtTlNMRWRCUVVjN1JVMWlUaXhqUVVGakxFVkJRVVVzVTBGQlV6dEZRVU42UWl4VFFVRlRMRVZCUVVVc1NVRkJTVHREUVVOb1FqczdRVUZGUkN4QlFVRkJMRVZCUVVVc1JVRkJReXhIUVVGSExFTkJRVU03UlVGRFRDeFhRVUZYTEVWT1RVUXNaVUZCWlN4RlFVRkZMRTlCUVU4N1JVMU1iRU1zVTBGQlV5eEZRVUZGTEVsQlFVazdSVUZEWml4alFVRmpMRVZCUVVVc1UwRkJVenRGUVVONlFpeFhRVUZYTEVWQlFVVXNVMEZCWlR0RlFVTTFRaXhYUVVGWExFVk9UVTRzUjBGQlJ6dERUVXhVT3p0QlFVTkVMRUZCUVVFc1JVRkJSU3hGUVVGRExFZEJRVWNzUTBGQlF6dEZRVU5NTEZkQlFWY3NSVTVFUkN4bFFVRmxMRVZCUVVVc1QwRkJUenRGVFVWc1F5eFRRVUZUTEVWQlFVVXNTVUZCU1R0RlFVTm1MR05CUVdNc1JVRkJSU3hUUVVGVE8wVkJRM3BDTEZkQlFWY3NSVUZCUlN4VFFVRmxPMFZCUXpWQ0xGZEJRVmNzUlU1RVRpeEhRVUZITzBOTlJWUTdPMEZFYkVKRUxFRkJRVUVzUTBGQlF5eERRVUZETzBWQlJVRXNVMEZCVXl4RlFVRkZMRWxCUVVrN1JVRkRaaXhYUVVGWExFVkJRVVVzVTBGQlpUdEZRVU0xUWl4aFFVRmhMRVZCUVVVc1IwRkJSenREUVVOdVFqczdRVVZRUkN4QlFVRkJMRmxCUVZrc1EwRkJRenRGUVVOWUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NUVUZCVFN4RlVEUkNUeXhKUVVGSk8wVlBNMEpxUWl4UlFVRlJMRVZCUVVVc1MwRkJTenRGUVVObUxFZEJRVWNzUlVGQlJTeERRVUZETzBWQlEwNHNTVUZCU1N4RlFVRkZMRU5CUVVNN1JVRkRVQ3hQUVVGUExFVkJRVVVzUlVGQlJUdEZRVU5ZTEZWQlFWVXNSVkJFU2l4NVFrRkJUenREVDI5RFpEczdRVUZxUTBNc1FVRkJRU3hUUVVGVExFTkJWRmdzV1VGQldTeERRVk5GTzBWQlExWXNSMEZCUnl4RlFVRkZMRWxCUVVrN1EwRkRWanM3UVVGWVNDeEJRV0ZGTEZsQllsVXNSMEZoVWl4SFFVRkhMRU5CUVVNN1JVNWFUaXhUUVVGVExFVkVRVXdzVFVGQlRUdEZRME5XTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1QwRkJUeXhGUVVGRkxFTkJRVU1zUTBSRVNDeEpRVUZKTzBOUGJVSldPenRCUVV4RExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRm9RblpETEVGQllVVXNXVUZpVlN4SFFXRlNMRWRCUVVjc1EwRkJRenRKUVVsR0xFOUJRVThzUlVGQlJTeEpRVUZKTzBsQlEySXNWMEZCVnl4RlFVRkZMRTFCUVUwN1NVRkRia0lzWlVGQlpTeEZRVUZGTEdGQlFXRTdSMEZGYWtNN096dEJRVVZETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVGMlFuaERMRUZCYzBKRkxGbEJkRUpWTEVOQmMwSldMRTFCUVUwc1EwRkJRenRKUVVWSUxFOUJRVThzUlVGQlJTeEpRVUZKTzBkQlJXaENPenM3UVVFeFFrZ3NRVUVyUWtVc1dVRXZRbFVzUTBFclFsWXNRMEZCUXl4RFFVRkRPMFZCUTBFc1MwRkJTeXhGVUhoQ1F5eFBRVUZQTzBWUGVVSmlMR1ZCUVdVc1JVRkJSU3hKUVVGSk8wTkJUWFJDT3p0QlFYWkRTQ3hCVGs5RkxGbE5VRlVzUTBFclFsWXNRMEZCUXl4QlRuaENRU3hOUVVGTkxFVk5VRlFzV1VGQldTeERRU3RDVml4RFFVRkRMRUZPZGtKQkxFMUJRVTBzUTBGQlF6dEZUVFJDU2l4TFFVRkxMRVZRTTBKRExFOUJRVTg3UlU4MFFtSXNaVUZCWlN4RlFVRkZMRk5CUVZNN1EwNHpRamRDT3p0QlRWWklMRUZEUVVFc1dVUkJXU3hEUTBGYUxFZEJRVWNzUTBGQlF6dEZRVU5HTEZkQlFWY3NSVkpoUkN4bFFVRmxMRVZCUVVVc1QwRkJUenRGVVZwc1F5eFRRVUZUTEVWQlFVVXNTVUZCU1R0RlFVTm1MRkZCUVZFc1JVRkJSU3hSUVVGUk8wTkJkVVJ1UWpzN1FVUXhSRVFzUVVOTFJTeFpSRXhWTEVORFFWb3NSMEZCUnl4RFFVdEVMRU5CUVVNc1EwRkJRenRGUVVOQkxFdEJRVXNzUlZKRlF5eFBRVUZQTzBWUlJHSXNaVUZCWlN4RlFVRkZMRWxCUVVrN1EwRlRkRUk3TzBGRWFFSklMRUZPVDBVc1dVMVFWU3hEUTBGYUxFZEJRVWNzUTBGTFJDeERRVUZETEVGUVJVRXNUVUZCVFN4RlRWQlVMRmxCUVZrc1EwTkJXaXhIUVVGSExFTkJTMFFzUTBGQlF5eEJVRWRCTEUxQlFVMHNRMEZCUXp0RlQwVktMRXRCUVVzc1JWSkVReXhQUVVGUE8wTkRRMmhDT3p0QlQwZERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVVJpZUVNc1FVTkxSU3haUkV4VkxFTkRRVm9zUjBGQlJ5eERRVXRFTEVOQlFVTXNRMEZCUXp0SlFWTkZMRTlCUVU4c1JVRkJSU3hOUVVGTk8wZEJSV3hDT3pzN1FVRkRSQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZFYWtKMFF5eEJRMEZCTEZsRVFWa3NRME5CV2l4SFFVRkhMRU5CUVVNN1NVRnJRa0VzVFVGQlRTeEZRVUZGTEU5QlFVODdSMEYzUTJ4Q096czdRVUZ3UTBjc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlJIUkNlRU1zUVVOeFFrVXNXVVJ5UWxVc1EwTkJXaXhIUVVGSExFTkJjVUpFTEVWQlFVVXNRVUZCUVN4TFFVRkxMRU5CUVVNN1NVRkZTaXhQUVVGUExFVkJRVVVzU1VGQlNUdEpRVU5pTEdWQlFXVXNSVUZCUlN4UlFVRlJPMGRCYVVJMVFqczdPMEZFZWtOSUxFRkRORUpOTEZsRU5VSk5MRU5EUVZvc1IwRkJSeXhEUVhGQ1JDeEZRVUZGTEVGQlFVRXNTMEZCU3l4SFFVMUlMRVZCUVVVc1IwRkRRU3hEUVVGRExFTkJRVU03UlVGRFJpeGpRVUZqTEVWQlFVVXNVMEZCVXp0RlFVTjZRaXhqUVVGakxFVkJRVVVzVFVGQlRUdERRVU4yUWpzN1FVRkhReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZFYkVNMVF5eEJRMjFEVlN4WlJHNURSU3hEUTBGYUxFZEJRVWNzUTBGeFFrUXNSVUZCUlN4QlFVRkJMRXRCUVVzc1IwRk5TQ3hGUVVGRkxFRlFjRUpNTEUxQlFVMHNRMDgwUWtNc1UwRkJVeXhGUkc1RGJrSXNXVUZCV1N4RFEwRmFMRWRCUVVjc1EwRnhRa1FzUlVGQlJTeEJRVUZCTEV0QlFVc3NSMEZOU0N4RlFVRkZMRUZRYmtKTUxFMUJRVTBzUTA4eVFrTXNVMEZCVXl4RFFVRkRPMGxCUTFJc1QwRkJUeXhGUVVGRkxFbEJRVWs3UjBGRFpEczdPMEZCVDFBc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlJEVkRlRU1zUVVNeVEwVXNXVVF6UTFVc1EwTkJXaXhIUVVGSExFTkJNa05FTEZOQlFWTXNRMEZCUXp0SlFVVk9MRTlCUVU4c1JVRkJSU3hKUVVGSk8wbEJRMklzWlVGQlpTeEZRVUZGTEZGQlFWRTdTVUZEZWtJc1VVRkJVU3hGUVVGRkxGRkJRVkU3U1VGRGJFSXNSMEZCUnl4RlFVRkZMRWxCUVVrN1NVRkRWQ3hMUVVGTExFVkJRVVVzUTBGQlF6dEpRVU5TTEZOQlFWTXNSVUZCUlN4SlFVRkpPMGRCVDJ4Q08wVkVla1JJTEVGRGIwUk5MRmxFY0VSTkxFTkRRVm9zUjBGQlJ5eERRVEpEUkN4VFFVRlRMRU5CVTB3c1EwRkJReXhEUVVGRE8wbEJRMEVzVjBGQlZ5eEZRVUZGTEVsQlFVazdTVUZEYWtJc1QwRkJUeXhGUVVGRkxFdEJRVXM3UjBGRFpqczdPMEZEZGtSUUxFRkJRMFVzV1VGRVZTeEhRVU5TTEVkQlFVY3NRMEZCUXp0RlVrRk9MRk5CUVZNc1JVUkJUQ3hOUVVGTk8wVkRRMVlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UFFVRlBMRVZCUVVVc1EwRkJReXhEUkVSSUxFbEJRVWs3UlZORFZDeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMR1ZCUVdVc1JVRkJSU3hoUVVGaE8wTkJReTlDT3p0QlFVeElMRUZCVDBVc1dVRlFWU3hEUVU5V0xGRkJRVkVzUTBGQlF6dEZRVU5RTEU5QlFVOHNSVUZCUlN4SlFVRkpPMFZCUTJJc1ZVRkJWU3hGUVVGRkxFMUJRVTA3UlVGRGJFSXNVMEZCVXl4RlFVRkZMRWxCUVVrN1JVRkRaaXhqUVVGakxFVkJRVVVzVTBGQlV6dEZRVU42UWl4alFVRmpMRVZCUVVVc1RVRkJUVHRGUVVOMFFpeExRVUZMTEVWVVRFTXNUMEZCVHp0RFUxVmtPenRCUVd4Q1NDeEJRV1ZKTEZsQlpsRXNRMEZQVml4UlFVRlJMRU5CVVU0c1EwRkJReXhEUVVGRE8wVkJRMEVzVFVGQlRTeEZRVUZGTEVOQlFVTTdRMEZEVmpzN1FVRlJUQ3hCUVVORkxGbEJSRlVzUTBGRFZpeEhRVUZITEVOQlFVTTdSVUZEUml4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NTVUZCU1N4RlZHeENSeXhQUVVGUE8wVlRiVUprTEU5QlFVOHNSVUZCUlN4TFFVRkxPME5CUTJZN08wRkRMMEpJTEVGQlEwVXNTVUZFUlN4QlFVRkJMRXRCUVVzc1FVRkJRU3hKUVVGTExFTkJRVUVzVjBGQlZ5eEpRVU55UWl4SlFVRkpMRU5CUVVNN1JVRkRUQ3hQUVVGUExFVkJRVVVzVFVGQlRUdERRV05vUWpzN1FVRm9Ra2dzUVVGSFNTeEpRVWhCTEVGQlFVRXNTMEZCU3l4QlFVRkJMRWxCUVVzc1EwRkJRU3hYUVVGWExFbEJRM0pDTEVsQlFVa3NSMEZGUml4UFFVRlBMRU5CUVVNN1JVRkxVaXhMUVVGTExFVldRVVFzVDBGQlR6dERWVTlhT3p0QlFXWk1MRUZCU1Uwc1NVRktSaXhCUVVGQkxFdEJRVXNzUVVGQlFTeEpRVUZMTEVOQlFVRXNWMEZCVnl4SlFVTnlRaXhKUVVGSkxFZEJSVVlzVDBGQlR5eEhRVU5NTEVkQlFVY3NRMEZCUXp0RlZFaFdMRk5CUVZNc1JVUkJUQ3hOUVVGTk8wVkRRMVlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UFFVRlBMRVZCUVVVc1EwRkJReXhEUkVSSUxFbEJRVWs3UTFWSlRqczdRVUZPVUN4QlFWVk5MRWxCVmtZc1FVRkJRU3hMUVVGTExFRkJRVUVzU1VGQlN5eERRVUZCTEZkQlFWY3NTVUZEY2tJc1NVRkJTU3hIUVVWR0xFOUJRVThzUVVGUFRpeFhRVUZYTEVOQlFVTTdSVUZEV0N4VlFVRlZMRVZXU0ZJc1QwRkJUenRGVlVsVUxFdEJRVXNzUlZaT1RDeFBRVUZQTzBWVlQxQXNUMEZCVHl4RlFVRkZMRTFCUVUwN1EwRkRhRUk3TzBGQlMxQXNRVUZCUVN4alFVRmpMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzVFVGQlRUdERRVU5vUWpzN1FVTnNRa1FzUVVGSVFTeGhRVWRoTEVOQlNWZ3NZVUZCWVN4RFFVTllMRk5CUVZNc1EwRlJVQ3hIUVVGSExFVkJPRUpVTEdOQlFXTXNRMEZEV2l4RFFVRkRMRU5CT0VKRExFZEJRVWNzUTBFM1JVYzdSVlo1UWxJc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UlVGRGFFSXNVMEZCVXl4RlFVRkZMRWxCUVVrN1JVRkRaaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1QwRkJUeXhGUVVGRkxFdEJRVXM3UlVGRFpDeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVVlVMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVkQlFVY3NSVUZCUlN4SFFVRkhPMFZCUTFJc1NVRkJTU3hGUVVGRkxFZEJRVWM3UlVGRFZDeFRRVUZUTEVWQlFVVXNjVUpCUVc5Q08wTlZha05vUXpzN1FWWnRRemhDTEZOQlFVTXNSVUZCYmtJc1ZVRkJWU3hGUVVGRkxFdEJRVXM3UlZWc1F6bENMRUZCU0VFc1lVRkhZU3hEUVVsWUxHRkJRV0VzUTBGRFdDeFRRVUZUTEVOQlVWQXNSMEZCUnl4RlFUaENWQ3hqUVVGakxFTkJRMW9zUTBGQlF5eERRVGhDUXl4SFFVRkhMRU5CTjBWSE8wbFdjME5PTEV0QlFVc3NSVUZCUlN4SlFVRkpPMGxCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3U1VGRFdpeFZRVUZWTEVWQlFVVXNTMEZCU3p0SFZYUkRjRUk3T3p0QlFVTkVMRUZCUVVFc1lVRkJZU3hEUVVGRE8wVkJRMW9zVFVGQlRTeEZRVUZGTEV0QlFVczdSVUZEWWl4UlFVRlJMRVZCUVVVc1VVRkJVVHREUVhWRGJrSTdPMEZCZWtORUxFRkJTMGtzWVVGTVV5eERRVWxZTEdGQlFXRXNRMEZEV0N4VFFVRlRMRU5CUVVNN1JVRkRVaXhOUVVGTkxFVkJRVVVzUzBGQlN6dERRVlZrT3p0QlFXaENUQ3hCUVZGTkxHRkJVazhzUTBGSldDeGhRVUZoTEVOQlExZ3NVMEZCVXl4SFFVZE1MRWRCUVVjc1EwRkJRenRGUVVOS0xFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NVVUZCVVN4RlFVRkZMRkZCUVZFN1EwRkRia0k3TzBGQldGQXNRVUZ0UWswc1lVRnVRazhzUTBGSldDeGhRVUZoTEVOQlkxZ3NVVUZCVVN4RFFVTk9MRTFCUVUwc1EwRkJRenRGUVVOTUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRWRCUVVjc1JVRkJSU3hIUVVGSE8wVkJRMUlzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxGVkJRVlVzUlVGQlJTeEhRVUZITEVOQlFVTXNTMEZCU3l4RFdISkNja0lzVDBGQlR6dEZWM05DVUN4WlFVRlpMRVZCUVVVc1IwRkJSeXhEUVVGRExFdEJRVXNzUTFoMFFuWkNMRTlCUVU4N1ExY3lRbEk3TzBGQk9VSlFMRUZCTWtKUkxHRkJNMEpMTEVOQlNWZ3NZVUZCWVN4RFFXTllMRkZCUVZFc1EwRkRUaXhOUVVGTkxFTkJVVW9zU1VGQlNTeERRVUZETzBWV2FFSllMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEV0QlFVc3NSVUZCUlN4SFFVRkhPMFZCUTFZc1RVRkJUU3hGUVVGRkxFZEJRVWM3UlVGRFdDeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVVVGQlVTeEZRVUZGTEUxQlFVMDdSVUZEYUVJc1NVRkJTU3hGUVVGRkxHZENRVUZoTzBWQlEyNUNMRTFCUVUwc1JVRkJSU3hEUVVGRE8wTlZWMFk3TzBGQk4wSlVMRUZCWjBOTkxHRkJhRU5QTEVOQlNWZ3NZVUZCWVN4RFFXTllMRkZCUVZFc1EwRmpUaXhUUVVGVExFTkJRVU03UlVGRFVpeEpRVUZKTEVWQlFVVXNRMEZCUXp0RFFVTlNPenRCUVd4RFVDeEJRVzlEVFN4aFFYQkRUeXhEUVVsWUxHRkJRV0VzUTBGaldDeFJRVUZSTEVOQmEwSk9MRk5CUVZNc1EwRkJRenRGUVVOU0xFdEJRVXNzUlVGQlJTeERRVUZETzBOQlExUTdPMEZCUzFBc1FVRkRSU3hqUVVSWkxFTkJRMW9zUTBGQlF5eERRVUZETzBWQlEwRXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhqUVVGakxFVkJRVVVzVFVGQlRUdEZRVU4wUWl4bFFVRmxMRVZCUVVVc1RVRkJUVHRGUVVOMlFpeFhRVUZYTEVWQlFVVXNUVUZCVFR0RlFVTnVRaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TlFVRk5MRVZCUVVVc1MwRkJTenRGUVVOaUxGRkJRVkVzUlVGQlJTeE5RVUZOTzBWQlEyaENMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzUzBGQlN5eEZXR3hFUkN4UFFVRlBPMFZYYlVSWUxGVkJRVlVzUlVGQlJTeE5RVUZOTzBWQlEyeENMRmRCUVZjc1JVRkJSU3hIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEVkQlFVY3NRMWhxUkdoQ0xFOUJRVTg3UlZkclJHWXNaVUZCWlN4RlFVRkZMRWxCUVVrN1JVRkRja0lzVjBGQlZ5eEZXRGxEU0N4bFFVRmxMRVZCUVVVc1QwRkJUenRGVnl0RGFFTXNWMEZCVnl4RlFVRkZMRWRCUVVjN1JVRkRhRUlzVlVGQlZTeEZXSFJFU2l4UFFVRlBPME5YYzBaa096dEJRVGxDUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmJFSjJReXhCUVVORkxHTkJSRmtzUTBGRFdpeERRVUZETEVOQlFVTTdTVUZyUWtVc1UwRkJVeXhGUVVGRkxFbEJRVWs3UjBFMlFteENPenM3UVVFeFFrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRWFJDZUVNc1FVRkRSU3hqUVVSWkxFTkJRMW9zUTBGQlF5eERRVUZETzBsQmMwSkZMRk5CUVZNc1JVRkJSU3hMUVVGTE8wZEJlVUp1UWpzN08wRkJhRVJJTEVGQk1FSkpMR05CTVVKVkxFTkJRMW9zUTBGQlF5eERRWGxDUXl4SlFVRkpMRU5CUVVNN1JVRkRTQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4UFFVRlBMRVZCUVVVc1EwRkJRenREUVVOWU96dEJRVGRDVEN4QlFTdENTU3hqUVM5Q1ZTeERRVU5hTEVOQlFVTXNRMEU0UWtNc1IwRkJSeXhEUVVGRE8wVkJSVVlzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZEVml4VlFVRlZMRVZCUVVVc1VVRkJVVHRGUVVOd1FpeE5RVUZOTEVWQlFVVXNWVUZCVlR0RFFVMXVRanM3UVVGS09FSXNVMEZCUXl4RlFVRnVRaXhWUVVGVkxFVkJRVVVzUzBGQlN6dEZRWEpEYkVNc1FVRXJRa2tzWTBFdlFsVXNRMEZEV2l4RFFVRkRMRU5CT0VKRExFZEJRVWNzUTBGQlF6dEpRVTlCTEV0QlFVc3NSVUZCUlN4SlFVRkpPMGxCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3UjBGRlpqczdPMEZCZWtOTUxFRkJORU5OTEdOQk5VTlJMRU5CUTFvc1EwRkJReXhCUVRCRFJTeE5RVUZOTEVOQlEwd3NSMEZCUnl4RFFVRkRPMFZCUTBZc1RVRkJUU3hGUVVGRkxFOUJRVTg3UTBGRGFFSTdPMEZETlVaUUxFRkJRVUVzWVVGQllTeERRVUZETzBWQlExb3NUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhsUVVGbExFVkJRVVVzVlVGQlZUdEZRVU16UWl4VFFVRlRMRVZCUVVVc1NVRkJTVHRGUVVObUxFMUJRVTBzUlVGQlJTeFBRVUZQTzBOQlYyaENPenRCUVdaRUxFRkJUVVVzWVVGT1Z5eEZRVTFZTEVGQlFVRXNTMEZCUXl4RlFVRlBMRXRCUVVzc1FVRkJXaXhGUVVGak8wVkJRMklzVDBGQlR5eEZRVUZGTEVsQlFVazdRMEZEWkRzN1FVRlNTQ3hCUVZWRkxHRkJWbGNzUTBGVldDeEhRVUZITEVOQlFVTTdSVUZEUml4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NUMEZCVHl4RlFVRkZMRXRCUVVzN1EwRkRaanM3UVVGSFNDeEJRVUZCTEUxQlFVMHNRMEZCUXp0RlFVTk1MRXRCUVVzc1JVRkJSU3hOUVVGTk8wVkJRMklzU1VGQlNTeEZRVUZGTEZWQlFWVTdRMEZEYWtJN08wRkJSVVFzUVVGQlFTeE5RVUZOTEVOQlFVTTdSVUZEVEN4TFFVRkxMRVZCUVVVc1RVRkJUVHRGUVVOaUxFbEJRVWtzUlVGQlJTeFZRVUZWTzBOQlEycENPenRCUVVWRUxFRkJRVUVzVFVGQlRTeERRVUZETzBWQlEwd3NTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hKUVVGSkxFVkJRVVVzVVVGQlVUdERRVU5tT3p0QlF6ZENSQ3hCUVVGQkxHRkJRV0VzUTBGQlF6dEZRVU5hTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xGVkJRVlVzUlVGQlJTeExRVUZMTzBWQlEycENMRkZCUVZFc1JVRkJSU3hOUVVGTk8wVkJRMmhDTEdGQlFXRXNSVUZCUlN4SlFVRkpPME5CVjNCQ096dEJRV1pFTEVGQlRVVXNZVUZPVnl4RFFVMVlMRWRCUVVjc1EwRkJRenRGUVVOR0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhQUVVGUExFVkJRVVVzUzBGQlN6dERRVU5tT3p0QlFWWklMRUZCV1VVc1lVRmFWeXhIUVZsVUxFZEJRVWNzUTBGQlF6dEZXbHBPTEZOQlFWTXNSVVJCVEN4TlFVRk5PMFZEUTFZc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVVXNRMEZCUXl4RFJFUklMRWxCUVVrN1EyRmhWanM3UVVGSFNDeEJRVUZCTEZkQlFWY3NRMEZCUXp0RlFVTldMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVsQlFVa3NSVUZCUlN4RFFVRkRPMFZCUTFBc1RVRkJUU3hGUVVGRkxFTkJRVU03UlVGRFZDeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTlCUVU4c1JVRkJSU3huUWtGQlowSTdSVUZEZWtJc1MwRkJTeXhGWW14Q1F5eFBRVUZQTzBWaGJVSmlMRlZCUVZVc1JVRkJSU3hSUVVGUk8wTkJVWEpDT3p0QlFXWkVMRUZCVTBVc1YwRlVVeXhEUVZOVUxFdEJRVXNzUTBGQlF6dEZRVU5LTEZkQlFWY3NSV0prU0N4bFFVRmxMRVZCUVVVc1QwRkJUenRGWVdWb1F5eFhRVUZYTEVWQlFVVXNVMEZCWlR0RlFVTTFRaXhYUVVGWExFVmlXbElzUjBGQlJ6dEZZV0ZPTEZOQlFWTXNSVUZCUlN4SlFVRkpPME5CUTJoQ096dEJRVWRJTEVGQlEwVXNZVUZFVnl4SFFVTlVMRWRCUVVjc1EwRkJRenRGV201RFRpeFRRVUZUTEVWRVFVd3NUVUZCVFR0RlEwTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVDBGQlR5eEZRVUZGTEVOQlFVTXNRMFJFU0N4SlFVRkpPME5oYjBOV096dEJRVWxJTEVGQlFVRXNhVUpCUVdsQ0xFTkJRVU03UlVGRGFFSXNUMEZCVHl4RlFVRkZMRTFCUVUwN1EwRkRhRUk3TzBGQlJVUXNRVUZEUlN4aFFVUlhMRWRCUTFRc1IwRkJSeXhEUVVGRE8wVmFPVU5PTEZOQlFWTXNSVVJCVEN4TlFVRk5PMFZEUTFZc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVVXNRMEZCUXl4RFJFUklMRWxCUVVrN1EyRXJRMVk3TzBGQlNFZ3NRVUZMUlN4aFFVeFhMRU5CUzFnc1IwRkJSeXhEUVVGRE8wVkJRMFlzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeExRVUZMTzBOQlEyWTdPMEZCVkVnc1FVRlhSU3hoUVZoWExFTkJWMWdzVDBGQlR5eERRVUZETzBWQlEwNHNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhMUVVGTExFVkJRVVVzVFVGQlRUdEZRVU5pTEVsQlFVa3NSVUZCUlN4VlFVRlZPME5CUzJwQ096dEJRVzVDU0N4QlFXZENTU3hoUVdoQ1V5eERRVmRZTEU5QlFVOHNRVUZMU2l4VlFVRlhMRU5CUVVFc1RVRkJUU3hGUVVGRk8wVkJRMnhDTEZOQlFWTXNSVUZCUlN4cFFrRkJhVUk3UTBGRE4wSTdPMEZCYkVKTUxFRkJjVUpGTEdGQmNrSlhMRU5CY1VKWUxFTkJRVU1zUTBGQlF6dEZRVU5CTEU5QlFVOHNSVUZCUlN4TFFVRkxPMFZCUTJRc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNTMEZCU3l4RlltaEZSQ3hQUVVGUE8wTmhhVVZhT3p0QlFYcENTQ3hCUVRKQ1JTeGhRVE5DVnl4RFFUSkNXQ3hMUVVGTExFTkJRVU03UlVGRFNpeFRRVUZUTEVWQlFVVXNTVUZCU1R0RFFVTm9RanM3UVVFM1FrZ3NRVUVyUWtVc1lVRXZRbGNzUTBFclFsZ3NWMEZCVnl4RFFVRkRPMFZCUTFZc1kwRkJZeXhGUVVGRkxFbEJRVWs3UTBGRGNrSTdPMEZCYWtOSUxFRkJiVU5GTEdGQmJrTlhMRUZCYlVOV0xGRkJRVkVzUTBGQlF6dEZRVU5TTEZWQlFWVXNSV0l4UlVvc1QwRkJUenRGWVRKRllpeExRVUZMTEVWaU4wVkVMRTlCUVU4N1EyRTRSVm83TzBGQlIwZ3NRVUZCUVN4dFFrRkJiVUlzUTBGQlF6dEZRVU5zUWl4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxGTkJRVk1zUlVGQlJTeEpRVUZKTzBWQlEyWXNaVUZCWlN4RlFVRkZMRlZCUVZVN1JVRkRNMElzVFVGQlRTeEZRVUZGTEU5QlFVODdSVUZEWml4UFFVRlBMRVZCUVVVc1YwRkJWenRGUVVOd1FpeFZRVUZWTEVWQlFVVXNUVUZCVFR0RFFVTnVRanM3UVVNNVJrUXNRVUZCUVN4alFVRmpMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzVFVGQlRUdERRVGhDYUVJN08wRkJMMEpFTEVGQlIwVXNZMEZJV1N4SFFVZFdMRWRCUVVjc1EwRkJRenRGWWtaT0xGTkJRVk1zUlVSQlRDeE5RVUZOTzBWRFExWXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhQUVVGUExFVkJRVVVzUTBGQlF5eERSRVJJTEVsQlFVazdRMk5QVmpzN1FVRktReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCVEhaRExFRkJSMFVzWTBGSVdTeEhRVWRXTEVkQlFVY3NRMEZCUXp0SlFVZEdMRTlCUVU4c1JVRkJSU3hKUVVGSk8wbEJRMklzWlVGQlpTeEZRVUZGTEdGQlFXRTdSMEZGYWtNN096dEJRVlJJTEVGQlYwVXNZMEZZV1N4RFFWZGFMRk5CUVZNc1EwRkJRenRGUVVOU0xGTkJRVk1zUlVGQlJTeEpRVUZKTzBOQmEwSm9RanM3UVVFNVFrZ3NRVUZoU1N4alFXSlZMRU5CVjFvc1UwRkJVeXhEUVVWUUxFOUJRVThzUTBGQlF6dEZRVU5PTEdGQlFXRXNSVUZCUlN4TFFVRkxPME5CU1hKQ096dEJRV3hDVEN4QlFXVk5MR05CWmxFc1EwRlhXaXhUUVVGVExFTkJSVkFzVDBGQlR5eERRVVZNTEVsQlFVa3NRMEZCUXp0RlFVTklMRTlCUVU4c1JVRkJSU3hMUVVGTE8wTkJRMlk3TzBGQmFrSlFMRUZCYjBKSkxHTkJjRUpWTEVOQlYxb3NVMEZCVXl4RFFWTlFMRU5CUVVNc1EwRkJRenRGUVVOQkxFdEJRVXNzUldSaVJDeFBRVUZQTzBWalkxZ3NaVUZCWlN4RlFVRkZMRWxCUVVrN1EwRlBkRUk3TzBGQk4wSk1MRUZCZVVKUkxHTkJla0pOTEVOQlYxb3NVMEZCVXl4RFFWTlFMRU5CUVVNc1FXSmlSaXhOUVVGTkxFTmhhMEpFTEVsQlFVa3NRVUZCUVN4WFFVRlhMRVZCZWtKMlFpeGpRVUZqTEVOQlYxb3NVMEZCVXl4RFFWTlFMRU5CUVVNc1FXSmFSaXhOUVVGTkxFTmhhVUpFTEVsQlFVa3NRVUZCUVN4WFFVRlhMRU5CUVVNN1JVRkRaQ3hsUVVGbExFVkJRVVVzVTBGQlV6dERRVU16UWpzN1FVRlBVQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCUkhKRExFRkJRVUVzV1VGQldTeERRVUZETzBsQlJWUXNTMEZCU3l4RlFVRkZMRXRCUVVzN1IwRXdSR1k3UlVFMVJFUXNRVUZKU1N4WlFVcFJMRU5CU1ZJc1IwRkJSeXhEUVVGRE8wbEJRMFlzVVVGQlVTeEZRVUZGTEUxQlFVMDdTVUZEYUVJc1IwRkJSeXhGWkZSTkxFbEJRVWs3UjJOVlpEczdPMEZCVUV3c1FVRlZSU3haUVZaVkxFTkJWVllzUlVGQlJTeERRVUZETzBWQlEwUXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhUUVVGVExFVkJRVVVzU1VGQlNUdEZRVU5tTEUxQlFVMHNSVUZCUlN4TFFVRkxPME5CUTJRN08wRkJaRWdzUVVGblFrVXNXVUZvUWxVc1EwRm5RbFlzUlVGQlJTeERRVUZETzBWQlEwUXNTVUZCU1N4RlFVRkZMRTlCUVU4N1JVRkRZaXhMUVVGTExFVkJRVVVzUjBGQlJ6dEZRVU5XTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CVFdRN08wRkJTa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVhKQ2RrTXNRVUZuUWtVc1dVRm9RbFVzUTBGblFsWXNSVUZCUlN4RFFVRkRPMGxCVFVNc1NVRkJTU3hGUVVGRkxGTkJRVk03U1VGRFppeExRVUZMTEVWQlFVVXNTMEZCU3p0SFFVVm1PenM3UVVGNlFrZ3NRVUV5UWtVc1dVRXpRbFVzUTBFeVFsWXNSMEZCUnl4RFFVRkRPMFZCUTBZc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRTlCUVU4c1JVRkJSU3hMUVVGTE8wTkJRMlk3TzBGQkwwSklMRUZCYVVORkxGbEJha05WTEVOQmFVTldMRWxCUVVrc1EwRkJRenRGWW5CRVRDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhMUVVGTExFVkJRVVVzUjBGQlJ6dEZRVU5XTEUxQlFVMHNSVUZCUlN4SFFVRkhPMFZCUTFnc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRkZCUVZFc1JVRkJSU3hOUVVGTk8wVkJRMmhDTEVsQlFVa3NSVUZCUlN4blFrRkJZVHRGUVVOdVFpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RFlTdERVanM3UVVGdVEwZ3NRVUZ4UTBVc1dVRnlRMVVzUTBGeFExWXNRMEZCUXl4RFFVRkRPMFZCUTBFc1ZVRkJWU3hGUVVGRkxFOUJRVTg3UlVGRGJrSXNUMEZCVHl4RlFVRkZMRXRCUVVzN1JVRkRaQ3hOUVVGTkxFVkJRVVVzYVVKQlFXbENPME5CU3pGQ096dEJRVGREU0N4QllqRkNSU3haWVRCQ1ZTeERRWEZEVml4RFFVRkRMRUZpTDBSQkxFMUJRVTBzUldFd1FsUXNXVUZCV1N4RFFYRkRWaXhEUVVGRExFRmlPVVJCTEUxQlFVMHNRMEZCUXp0RllXOUZTaXhQUVVGUExFVkJRVVVzUjBGQlJ6dERZbXhGWmpzN1FXRjFRa2dzUVVGblJFa3NXVUZvUkZFc1FVRXJRMVFzV1VGQldTeERRVU5ZTEVOQlFVTXNRMEZCUXp0RlFVTkJMRTlCUVU4c1JVRkJSU3hIUVVGSE8wTkJTMkk3TzBGQmRFUk1MRUZpTVVKRkxGbGhNRUpWTEVGQkswTlVMRmxCUVZrc1EwRkRXQ3hEUVVGRExFRmlNVVZHTEUxQlFVMHNSV0V3UWxRc1dVRkJXU3hCUVN0RFZDeFpRVUZaTEVOQlExZ3NRMEZCUXl4QllucEZSaXhOUVVGTkxFTkJRVU03UldFMlJVWXNUMEZCVHl4RlFVRkZMRWRCUVVjN1EySXpSV3BDT3p0QllYVkNTQ3hCUVhkRVNTeFpRWGhFVVN4QlFTdERWQ3haUVVGWkxFTkJVMWdzUlVGQlJTeEJRVUZCTEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNN1JVRkRWaXhQUVVGUExFVkJRVVVzUTBGQlF6dERRVU5ZT3p0QlFVdElMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZFY2tNc1FVRkJRU3hUUVVGVExFTkJRVU03U1VGRlRpeEpRVUZKTEVWQlFVVXNVMEZCVXp0SlFVTm1MRXRCUVVzc1JVRkJSU3hMUVVGTE8wZEJSV1k3T3p0QlEzQkhSQ3hCUVVGQkxFOUJRVThzUjBGQlJ5eEpRVUZKTEVOQlFVTTdSVUZEWWl4UFFVRlBMRVZCUVVVc1RVRkJUVHREUVVOb1FqczdRVUZEUkN4QlFVTkZMRmxCUkZVc1IwRkRVaXhIUVVGSExFTkJRVU03UldSSVRpeFRRVUZUTEVWRVFVd3NUVUZCVFR0RlEwTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVDBGQlR5eEZRVUZGTEVOQlFVTXNRMFJFU0N4SlFVRkpPME5sU1ZZN08wRkJTRWdzUVVGTFJTeFpRVXhWTEVOQlMxWXNSMEZCUnl4RFFVRkRPMFZCUTBZc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRTlCUVU4c1JVRkJSU3hMUVVGTE8wTkJRMlk3TzBGQlZFZ3NRVUZYUlN4WlFWaFZMRU5CVjFZc1YwRkJWeXhEUVVGRE8wVkJRMVlzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZEV0RzN1FVRmlTQ3hCUVdWRkxGbEJabFVzUTBGbFZpeFBRVUZQTEVOQlFVTTdSVUZEVGl4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxFdEJRVXNzUlVGQlJTeE5RVUZOTzBWQlEySXNTVUZCU1N4RlFVRkZMRlZCUVZVN1JVRkRhRUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdRMEZoYmtJN08wRkJhRU5JTEVGQmNVSkpMRmxCY2tKUkxFTkJaVllzVDBGQlR5eEJRVTFLTEZWQlFWY3NRMEZCUVN4TlFVRk5MRVZCUVVVN1JVRkRiRUlzVTBGQlV5eEZRVUZGTEdsQ1FVRnBRanREUVVNM1FqczdRVUYyUWt3c1FVRXlRbEVzV1VFelFra3NRMEZsVml4UFFVRlBMRU5CVlV3c1EwRkJReXhCWkhKQ1JpeE5RVUZOTEVOamRVSkVMRmRCUVZjc1JVRXpRbTVDTEZsQlFWa3NRMEZsVml4UFFVRlBMRU5CVlV3c1EwRkJReXhCWkhCQ1JpeE5RVUZOTEVOamMwSkVMRmRCUVZjc1EwRkJRenRGUVVOV0xFOUJRVThzUlVGQlJTeERRVUZETzBOQlExZzdPMEZCVFZRc1FVRkJRU3hyUWtGQmEwSXNRMEZCUXp0RlFVTnFRaXhQUVVGUExFVkJRVVVzU1VGQlNUdEZRVU5pTEZOQlFWTXNSVUZCUlN4SlFVRkpPMFZCUTJZc1pVRkJaU3hGUVVGRkxGVkJRVlU3UlVGRE0wSXNUVUZCVFN4RlFVRkZMRTlCUVU4N1JVRkRaaXhQUVVGUExFVkJRVVVzVjBGQlZ6dERRVU55UWpzN1FVRkZSQ3hCUVVGQkxGZEJRVmNzUTBGQlF6dEZRVU5XTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UlVGRGFFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzU1VGQlNTeEZRVUZGTEVsQlFVazdSVUZEVml4SFFVRkhMRVZCUVVVc1EwRkJRenRGUVVOT0xFOUJRVThzUlVGQlJTeEpRVUZKTzBWQlEySXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRjVSR1E3TzBGQmFFVkVMRUZCVTBVc1YwRlVVeXhEUVZOVUxFTkJRVU1zUTBGQlF6dEZRVU5CTEV0QlFVc3NSV1pzUkVRc1QwRkJUenRGWlcxRVdDeFRRVUZUTEVWQlFVVXNTVUZCU1R0RlFVTm1MRmRCUVZjc1JVRkJSU3hUUVVGbE8wTkJRemRDT3p0QlFXSklMRUZCWlVVc1YwRm1VeXhIUVdWUUxFZEJRVWNzUTBGQlF6dEZRVU5LTEZWQlFWVXNSVUZCUlN4SlFVRkpPMFZCUTJoQ0xGVkJRVlVzUldaMlJFb3NUMEZCVHp0RlpYZEVZaXhQUVVGUExFVkJRVVVzU1VGQlNUdERRVU5rT3p0QlFXNUNTQ3hCUVhGQ1JTeFhRWEpDVXl4RFFYRkNWQ3hOUVVGTkxFTkJRVU03UlVGRFRDeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1IwRkJSeXhGUVVGRkxFbEJRVk03UlVGRFpDeExRVUZMTEVWQlFVVXNTVUZCVXp0RlFVVm9RaXhOUVVGTkxFVkJRVVVzUjBGQlJ5eERRVUZETEV0QlFVc3NRMlp3UldJc1QwRkJUenRGWlhGRldDeG5Ra0ZCWjBJc1JVRkJSU3hYUVVGWE8wVkJRemRDTEZkQlFWY3NSVUZCUlN4UFFVRlBPMFZCUTNCQ0xGRkJRVkVzUlVGQlJTeE5RVUZOTzBWQlEyaENMRTFCUVUwc1JVRkJSU3hQUVVGUE8wVkJRMllzVlVGQlZTeEZRVUZGTEZGQlFWRTdRMEU0UW5KQ096dEJRUzlFU0N4QlFXMURTU3hYUVc1RFR5eERRWEZDVkN4TlFVRk5MRUZCWTBnc1QwRkJUeXhGUVc1RFdpeFhRVUZYTEVOQmNVSlVMRTFCUVUwc1FVRmxTQ3hOUVVGTkxFTkJRVU03UlVGRFRpeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JVRkJSU3hIUVVGSE8wVkJRMWdzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1IwRkJSeXhGUVVGRkxFZEJRVWM3UlVGRFVpeEpRVUZKTEVWQlFVVXNSMEZCUnp0RlFVTlVMRTlCUVU4c1JVRkJSU3hGUVVGRk8wVkJRMWdzVlVGQlZTeEZabTVHVWl4UFFVRlBPMFZsYjBaVUxGVkJRVlVzUlVGQlJTeFJRVUZSTzBOQlEzSkNPenRCUVRkRFRDeEJRU3REU1N4WFFTOURUeXhEUVhGQ1ZDeE5RVUZOTEVGQk1FSklMRTlCUVU4c1EwRkJRenRGUVVOUUxGTkJRVk1zUlVGQlJTeG5Ra0ZCWjBJc1EwRkJReXhoUVVGaE8wTkJRekZET3p0QlFXcEVUQ3hCUVd0RVNTeFhRV3hFVHl4RFFYRkNWQ3hOUVVGTkxFRkJOa0pJTEUxQlFVMHNRMEZCUXp0RlFVTk9MRk5CUVZNc1JVRkJSU3huUWtGQlowSXNRMEZCUXl4alFVRmpPME5CUXpORE96dEJRWEJFVEN4QlpIWkRSU3hYWTNWRFV5eERRWEZDVkN4TlFVRk5MRUZrTlVSTUxFMUJRVTBzUldOMVExUXNWMEZCVnl4RFFYRkNWQ3hOUVVGTkxFRmtNMFJNTEUxQlFVMHNRMEZCUXp0Rll6WkdTaXhWUVVGVkxFVm1MMFpTTEhkQ1FVRlBPMFZsWjBkVUxGbEJRVmtzUldZNVJsSXNUMEZCVHp0RFEwVmtPenRCWTI5RFNDeEJRVEJFVFN4WFFURkVTeXhEUVhGQ1ZDeE5RVUZOTEVGa05VUk1MRTFCUVUwc1FXTnBSMFlzVDBGQlR5eEZRVEZFWkN4WFFVRlhMRU5CY1VKVUxFMUJRVTBzUVdRMVJFd3NUVUZCVFN4QlkydEhSaXhOUVVGTkxFVkJNMFJpTEZkQlFWY3NRMEZ4UWxRc1RVRkJUU3hCWkRORVRDeE5RVUZOTEVGalowZEdMRTlCUVU4c1JVRXhSR1FzVjBGQlZ5eERRWEZDVkN4TlFVRk5MRUZrTTBSTUxFMUJRVTBzUVdOcFIwWXNUVUZCVFN4RFFVRkRPMFZCUTA0c1owSkJRV2RDTEVWbWJFZGtMRTlCUVU4N1EyVnRSMVk3TzBGQlMxQXNRVUZCUVN4VlFVRlZMRU5CUVVNN1JVRkRWQ3hMUVVGTExFVkJRVVVzYVVKQlFXbENPME5CVDNwQ096dEJRVkpFTEVGQlIwa3NWVUZJVFN4RFFVVlNMRU5CUVVNc1FVRkRSU3haUVVGWkxFTkJRVU03UlVGRFdpeGpRVUZqTEVWQlFVVXNVMEZCVXp0RlFVTjZRaXhOUVVGTkxFVkJRVVVzUTBGQlF6dERRVU5XT3p0QlFVbE1MRUZCUjBrc1dVRklVU3hEUVVGRExFOUJRVThzUVVGRGFrSXNWVUZCVnl4RFFVRkJMRVZCUVVVc1JVRkZXaXhYUVVGWExFVkJTR1lzV1VGQldTeERRVUZETEU5QlFVOHNRVUZGYWtJc1ZVRkJWeXhEUVVGQkxFbEJRVWtzUlVGRFpDeFhRVUZYTEVOQlFVTTdSVUZEVml4SFFVRkhMRVZCUVVVc1MwRkJTenREUVVOWU96dEJRVXhNTEVGQlUwa3NXVUZVVVN4RFFVRkRMRTlCUVU4c1FVRlJha0lzVlVGQlZ5eERRVUZCTEVsQlFVa3NSVUZEWkN4WFFVRlhMRU5CUVVNN1JVRkRWaXhIUVVGSExFVkJRVVVzU1VGQlNUdERRVU5XT3p0QlFWaE1MRUZCWlVrc1dVRm1VU3hEUVVGRExFOUJRVThzUVVGamFrSXNWVUZCVnl4RFFVRkJMRVZCUVVVc1JVRkRXaXhYUVVGWExFTkJRVU03UlVGRFZpeEpRVUZKTEVWQlFVVXNTVUZCU1R0RlFVTldMRXRCUVVzc1JVRkJSU3hKUVVGSk8wTkJRMW83TzBGQmJFSk1MRUZCYjBKRkxGbEJjRUpWTEVOQlFVTXNUMEZCVHl4QlFXOUNha0lzUzBGQlN5eERRVUZETzBWQlEwd3NUMEZCVHl4RlFVRkZMRVZCUVVVN1EwRkxXanM3UVVFeFFrZ3NRVUYxUWtrc1dVRjJRbEVzUTBGQlF5eFBRVUZQTEVGQmIwSnFRaXhMUVVGTExFTkJSMG9zVjBGQlZ5eERRVUZETzBWQlExWXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkRaQ0o5ICovXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tYWluLWhlYWRlciA+IGRpdiB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG5cbiAgLmhwLW5hdmlnYXRpb24gYSB7XG4gICAgZm9udC1zaXplOiA4MHB4O1xuICB9XG5cbiAgLnByZXNzLWxpc3RpbmcgPiBkaXYge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuXG4gIC5vdXRsZXQtZ3JpZCB7XG4gICAgd2lkdGg6IDU2LjUlO1xuICB9XG5cbiAgLm91dGxldC1ncmlkIG5hdiB7XG4gICAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiA3MHB4O1xuICB9XG5cbiAgLm91dGxldC1ncmlkIGxpIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDMzLjMlO1xuICAgICAgICAgICAgZmxleDogMCAwIDMzLjMlO1xuICAgIHdpZHRoOiAzMy4zJTtcbiAgfVxuXG4gIC5hcnRpY2xlcyB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAgICAgLW1zLWZsZXg6IDAgMCAzMi4yJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAzMi4yJTtcbiAgICB3aWR0aDogMzIuMiU7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIC5tYWluLWhlYWRlciBidXR0b24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IGEge1xuICAgIHBhZGRpbmc6IDAgMTJweDtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYge1xuICAgIG1hcmdpbjogMCAtMTJweDtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgdWwubWVudSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IHVsLm1lbnUgPiBsaTpob3ZlciAuc3ViLW1lbnUsXG4gIC5tYWluLWhlYWRlciBuYXYgdWwubWVudSA+IGxpOmZvY3VzIC5zdWItbWVudSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgLnN1Yi1tZW51IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMDAlO1xuICAgIHJpZ2h0OiAwO1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgLnN1Yi1tZW51IGEge1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLmhwLW5hdmlnYXRpb24gYSB7XG4gICAgZm9udC1zaXplOiAxNTVweDtcbiAgfVxufSIsIi8qXG4gKiAgT3dsIENhcm91c2VsIC0gQW5pbWF0ZSBQbHVnaW5cbiAqL1xuLm93bC1jYXJvdXNlbHtcblx0LmFuaW1hdGVkIHtcblx0XHRhbmltYXRpb24tZHVyYXRpb246IDEwMDBtcztcblx0XHRhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuXHR9XG5cdC5vd2wtYW5pbWF0ZWQtaW4ge1xuXHRcdHotaW5kZXg6IDA7XG5cdH1cblx0Lm93bC1hbmltYXRlZC1vdXQge1xuXHRcdHotaW5kZXg6IDE7XG5cdH1cblx0LmZhZGVPdXQge1xuXHRcdGFuaW1hdGlvbi1uYW1lOiBmYWRlT3V0O1xuXHR9XG59XG5cbkBrZXlmcmFtZXMgZmFkZU91dCB7XG5cdDAlIHtcblx0XHRvcGFjaXR5OiAxO1xuXHR9XG5cblx0MTAwJSB7XG5cdFx0b3BhY2l0eTogMDtcblx0fVxufVxuIiwiLypcbiAqIFx0T3dsIENhcm91c2VsIC0gQXV0byBIZWlnaHQgUGx1Z2luXG4gKi9cblxuLm93bC1oZWlnaHQge1xuXHR0cmFuc2l0aW9uOiBoZWlnaHQgNTAwbXMgZWFzZS1pbi1vdXQ7XG59XG4iLCIvKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBMYXp5IExvYWQgUGx1Z2luXG4gKi9cblxuLm93bC1jYXJvdXNlbCB7XG5cdC5vd2wtaXRlbSB7XG5cdFx0Lm93bC1sYXp5IHtcblx0XHRcdFx0b3BhY2l0eTogMDtcblx0XHRcdFx0dHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBlYXNlO1xuXHRcdH1cblxuXHRcdC8qKlxuXHRcdFx0VGhpcyBpcyBpbnRyb2R1Y2VkIGR1ZSB0byBhIGJ1ZyBpbiBJRTExIHdoZXJlIGxhenkgbG9hZGluZyBjb21iaW5lZCB3aXRoIGF1dG9oZWlnaHQgcGx1Z2luIGNhdXNlcyBhIHdyb25nXG5cdFx0XHRjYWxjdWxhdGlvbiBvZiB0aGUgaGVpZ2h0IG9mIHRoZSBvd2wtaXRlbSB0aGF0IGJyZWFrcyBwYWdlIGxheW91dHNcblx0XHQgKi9cblx0XHQub3dsLWxhenlbc3JjXj1cIlwiXSwgLm93bC1sYXp5Om5vdChbc3JjXSkge1xuXHRcdFx0bWF4LWhlaWdodDogMDtcblx0XHR9XG5cblx0XHRpbWcub3dsLWxhenkge1xuXHRcdFx0dHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcblx0XHR9XG5cdH1cbn1cblxuIiwiJG93bC1pbWFnZS1wYXRoOiBcIlwiICFkZWZhdWx0O1xuXG4vKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBWaWRlbyBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2Vse1xuXHQub3dsLXZpZGVvLXdyYXBwZXIge1xuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0YmFja2dyb3VuZDogIzAwMDtcblx0fVxuXG5cdC5vd2wtdmlkZW8tcGxheS1pY29uIHtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0aGVpZ2h0OiA4MHB4O1xuXHRcdHdpZHRoOiA4MHB4O1xuXHRcdGxlZnQ6IDUwJTtcblx0XHR0b3A6IDUwJTtcblx0XHRtYXJnaW4tbGVmdDogLTQwcHg7XG5cdFx0bWFyZ2luLXRvcDogLTQwcHg7XG5cdFx0YmFja2dyb3VuZDogdXJsKFwiI3skb3dsLWltYWdlLXBhdGh9b3dsLnZpZGVvLnBsYXkucG5nXCIpIG5vLXJlcGVhdDtcblx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0ei1pbmRleDogMTtcblx0XHQtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcblx0XHR0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMTAwbXMgZWFzZTtcblx0fVxuXG5cdC5vd2wtdmlkZW8tcGxheS1pY29uOmhvdmVyIHtcblx0XHR0cmFuc2Zvcm06IHNjYWxlKDEuMywgMS4zKTtcblx0fVxuXG5cdC5vd2wtdmlkZW8tcGxheWluZyAub3dsLXZpZGVvLXRuLFxuXHQub3dsLXZpZGVvLXBsYXlpbmcgLm93bC12aWRlby1wbGF5LWljb24ge1xuXHRcdGRpc3BsYXk6IG5vbmU7XG5cdH1cblxuXHQub3dsLXZpZGVvLXRuIHtcblx0XHRvcGFjaXR5OiAwO1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuXHRcdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG5cdFx0YmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuXHRcdHRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcblx0fVxuXG5cdC5vd2wtdmlkZW8tZnJhbWUge1xuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHR6LWluZGV4OiAxO1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHR3aWR0aDogMTAwJTtcblx0fVxufVxuIiwiLypcbiAqIFx0RGVmYXVsdCB0aGVtZSAtIE93bCBDYXJvdXNlbCBDU1MgRmlsZVxuICovXG5cbiRjb2xvci1iYXNlOlx0XHRcdCM4Njk3OTEgIWRlZmF1bHQ7XG4kY29sb3Itd2hpdGU6XHRcdFx0I0ZGRiAhZGVmYXVsdDtcbiRjb2xvci1ncmF5Olx0XHRcdCNENkQ2RDYgIWRlZmF1bHQ7XG5cbi8vbmF2XG5cbiRuYXYtY29sb3I6IFx0XHRcdCRjb2xvci13aGl0ZSAhZGVmYXVsdDtcbiRuYXYtY29sb3ItaG92ZXI6XHRcdCRjb2xvci13aGl0ZSAhZGVmYXVsdDtcbiRuYXYtZm9udC1zaXplOiBcdFx0MTRweCAhZGVmYXVsdDtcbiRuYXYtcm91bmRlZDogXHRcdFx0M3B4ICFkZWZhdWx0O1xuJG5hdi1tYXJnaW46IFx0XHRcdDVweCAhZGVmYXVsdDtcbiRuYXYtcGFkZGluZzogXHRcdFx0NHB4IDdweCAhZGVmYXVsdDtcbiRuYXYtYmFja2dyb3VuZDogXHRcdCRjb2xvci1ncmF5ICFkZWZhdWx0O1xuJG5hdi1iYWNrZ3JvdW5kLWhvdmVyOlx0JGNvbG9yLWJhc2UgIWRlZmF1bHQ7XG4kbmF2LWRpc2FibGVkLW9wYWNpdHk6IFx0MC41ICFkZWZhdWx0O1xuXG4vL2RvdHNcblxuJGRvdC13aWR0aDpcdFx0XHRcdDEwcHggIWRlZmF1bHQ7XG4kZG90LWhlaWdodDpcdFx0XHQxMHB4ICFkZWZhdWx0O1xuJGRvdC1yb3VuZGVkOlx0XHRcdDMwcHggIWRlZmF1bHQ7XG4kZG90LW1hcmdpbjogXHRcdFx0NXB4IDdweCAhZGVmYXVsdDtcbiRkb3QtYmFja2dyb3VuZDpcdFx0JGNvbG9yLWdyYXkgIWRlZmF1bHQ7XG4kZG90LWJhY2tncm91bmQtYWN0aXZlOlx0JGNvbG9yLWJhc2UgIWRlZmF1bHQ7XG5cbkBpbXBvcnQgJ3RoZW1lJztcbiIsIlxuLm93bC10aGVtZSB7XG5cdC8vIFN0eWxpbmcgTmV4dCBhbmQgUHJldiBidXR0b25zXG5cdC5vd2wtbmF2IHtcblx0XHRtYXJnaW4tdG9wOiAxMHB4O1xuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXG5cdFx0W2NsYXNzKj0nb3dsLSddIHtcblx0XHRcdGNvbG9yOiAkbmF2LWNvbG9yO1xuXHRcdFx0Zm9udC1zaXplOiAkbmF2LWZvbnQtc2l6ZTtcblx0XHRcdG1hcmdpbjogJG5hdi1tYXJnaW47XG5cdFx0XHRwYWRkaW5nOiAkbmF2LXBhZGRpbmc7XG5cdFx0XHRiYWNrZ3JvdW5kOiAkbmF2LWJhY2tncm91bmQ7XG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0XHRib3JkZXItcmFkaXVzOiAzcHg7XG5cblx0XHRcdCY6aG92ZXIge1xuXHRcdFx0XHRiYWNrZ3JvdW5kOiAkbmF2LWJhY2tncm91bmQtaG92ZXI7XG5cdFx0XHRcdGNvbG9yOiRuYXYtY29sb3ItaG92ZXI7XG5cdFx0XHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0XHRcdH1cblx0XHR9XG5cdFx0LmRpc2FibGVkIHtcblx0XHRcdG9wYWNpdHk6ICRuYXYtZGlzYWJsZWQtb3BhY2l0eTtcblx0XHRcdGN1cnNvcjogZGVmYXVsdDtcblx0XHR9XG5cdH1cblxuXHQvLyBTdHlsaW5nIGRvdHNcblx0Lm93bC1uYXYuZGlzYWJsZWQgKyAub3dsLWRvdHMge1xuXHRcdG1hcmdpbi10b3A6IDEwcHg7XG5cdH1cblxuXHQub3dsLWRvdHMge1xuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXG5cdFx0Lm93bC1kb3Qge1xuXHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdFx0em9vbTogMTtcblx0XHRcdCpkaXNwbGF5OiBpbmxpbmU7XG5cblx0XHRcdHNwYW4ge1xuXHRcdFx0XHR3aWR0aDogJGRvdC13aWR0aDtcblx0XHRcdFx0aGVpZ2h0OiAkZG90LWhlaWdodDtcblx0XHRcdFx0bWFyZ2luOiAkZG90LW1hcmdpbjtcblx0XHRcdFx0YmFja2dyb3VuZDogJGRvdC1iYWNrZ3JvdW5kO1xuXHRcdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRcdFx0LXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiB2aXNpYmxlO1xuXHRcdFx0XHR0cmFuc2l0aW9uOiBvcGFjaXR5IDIwMG1zIGVhc2U7XG5cdFx0XHRcdGJvcmRlci1yYWRpdXM6ICRkb3Qtcm91bmRlZDtcblx0XHRcdH1cblxuXHRcdFx0Ji5hY3RpdmUsXG5cdFx0XHQmOmhvdmVyIHtcblx0XHRcdFx0c3BhbiB7XG5cdFx0XHRcdFx0YmFja2dyb3VuZDogJGRvdC1iYWNrZ3JvdW5kLWFjdGl2ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuIiwiKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG51bCxcbm9sIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYSB7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAvLyB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5zci1vbmx5IHtcbiAgQGluY2x1ZGUgc3JPbmx5O1xufVxuXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogJGJvbGQ7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogJGNvcHlGRjtcbn1cbiIsIkBtaXhpbiBjb250ZW50V2lkdGgge1xuICBtYXgtd2lkdGg6ICRteFc7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAkZ3V0dGVyO1xufVxuXG5AbWl4aW4gaG92ZXIge1xuICAmOmhvdmVyLFxuICAmOmZvY3VzIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gc3JPbmx5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsMCwwLDApO1xuICBib3JkZXI6IDA7XG59XG5cbkBtaXhpbiBpbWdDb3ZlciB7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIG1pbi13aWR0aDogMTAwJTtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMDtcblxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7XG5cbiAgQHN1cHBvcnRzIChvYmplY3QtZml0OiBjb3Zlcikge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgfVxufVxuIiwiYm9keSB7XG4gICYuZnJvbnQtcGFnZSxcbiAgJi5wcm9qZWN0czpub3QoLnByb2plY3QtYXJjaGl2ZSkge1xuICAgICA+IG1haW4ge1xuICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgIHotaW5kZXg6IDA7XG4gICAgIH1cblxuICAgICAubWFpbi1oZWFkZXIge1xuICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgID4gZGl2IHtcbiAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgfVxuICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgaGVpZ2h0OiAxNTFweDtcbiAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgIHRvcDogMDtcbiAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICB6LWluZGV4OiAwO1xuICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLHJnYmEoJGJsYWNrLDApIDAlLCByZ2JhKCRibGFjaywuMykgMTAwJSk7XG4gICAgICAgfVxuICAgICAgIGEge1xuICAgICAgICAgY29sb3I6ICR3aGl0ZTtcblxuICAgICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAgICBjb2xvcjogcmdiYSgkd2hpdGUsLjQpO1xuICAgICAgICAgfVxuICAgICAgIH1cbiAgICAgfVxuICAgfVxufVxuXG5AaW1wb3J0ICdjb3B5L19iYXNlJztcbkBpbXBvcnQgJ2hlYWRlci9faGVhZGVyJztcbkBpbXBvcnQgJ2Zvb3Rlci9fZm9vdGVyJztcbkBpbXBvcnQgJ19wYWdlJztcbkBpbXBvcnQgJ19mcm9udC1wYWdlJztcbiIsImgxLC5oMSB7XG4gIGZvbnQtZmFtaWx5OiAkY29weUZGO1xuICBmb250LXdlaWdodDogJGx0O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDI1cHg7XG59XG5cbmgyLC5oMiB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICBmb250LXNpemU6IDMwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxpbmUtaGVpZ2h0OiAoNDAgLyAzMCkgKiAxZW07XG4gIGZvbnQtd2VpZ2h0OiAkYm9sZDtcbn1cbmgzLC5oMyB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICBmb250LXNpemU6IDI0cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxpbmUtaGVpZ2h0OiAoNDAgLyAzMCkgKiAxZW07XG4gIGZvbnQtd2VpZ2h0OiAkYm9sZDtcbn1cbiIsIi8vIFNQQUNJTkdcbiRteFc6IDE2MDBweDtcbiRndXR0ZXI6IDIwcHg7XG5cbi8vIENPTE9SU1xuJGJsYWNrOiAjMDAwMDAwO1xuJHdoaXRlOiAjRkZGRkZGO1xuXG4kcHJpbWFyeTogIzFFMzE0MTtcbiRzZWNvbmRhcnk6ICM3MDcwNzA7XG5cbiRhY2NlbnQtMTogIzA3MTQ0RTtcblxuLy8gRk9OVFNcbiRoZWFkaW5nRkY6ICdFeHBsZXR1cyBTYW5zJywgY3Vyc2l2ZTtcbiRjb3B5RkY6ICdBc3Npc3RhbnQnLCBzYW5zLXNlcmlmO1xuJGx0OiAzMDA7XG4kcmVnOiA0MDA7XG4kYm9sZDogNzAwO1xuXG4vLyBCUkVBS1BPSU5UU1xuJG1lZGlhWHM6IFwic2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweClcIjtcbiRtZWRpYVBob25lOiBcInNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3LjlweClcIjtcbiRtZWRpYVRhYmxldDogXCJzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KVwiO1xuJG1lZGlhVGFibGV0T25seTogXCJzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNC45cHgpXCI7XG4kbWVkaWFUb2dnbGVIZWFkZXI6IFwic2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI0LjlweClcIjtcbiRtZWRpYURlc2t0b3A6IFwic2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpXCI7XG4kbWVkaWFGdWxsOiBcInNjcmVlbiBhbmQgKG1pbi13aWR0aDogI3skbXhXfSlcIjtcblxuLy8gRElNRU5TSU9OU1xuJGhlYWRlckhlaWdodDogNzBweDtcbiIsIkBpbXBvcnQgJ2hlYWRpbmdzJztcblxucCB7XG4gIC8vY29sb3I6ICRwcmltYXJ5O1xuICBmb250LXNpemU6IDE4cHg7XG4gIGxpbmUtaGVpZ2h0OiAoMjcgLyAyMSkgKiAxZW07XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cbiIsIi5tYWluLWhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICRoZWFkZXJIZWlnaHQ7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAxMDtcbiAgYmFja2dyb3VuZDogcmdiYSgkd2hpdGUsLjk5KTtcblxuICAubG9nZ2VkaW4gJiB7XG4gICAgdG9wOiAzMnB4O1xuICB9XG5cbiAgPiBkaXYge1xuICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcblxuICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgfVxuICB9XG4gIGJ1dHRvbiB7XG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbiAgaDEge1xuXG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgY29sb3I6ICRzZWNvbmRhcnk7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gIH1cblxuICBAaW1wb3J0ICdfbmF2Jztcbn1cbiIsIm5hdiB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICBmb250LXNpemU6IDE1cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICBhIHtcbiAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgY29sb3I6ICRzZWNvbmRhcnk7XG4gICAgfVxuXG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgcGFkZGluZzogMCAxMnB4O1xuICAgIH1cbiAgfVxuICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgbWFyZ2luOiAwIC0xMnB4O1xuICB9XG5cbiAgdWwubWVudSB7XG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgfVxuXG4gICAgPiBsaSB7XG4gICAgICA+IGEge1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMS4xM3B4O1xuICAgICAgfVxuXG4gICAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgICAgICAuc3ViLW1lbnUge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuc3ViLW1lbnUge1xuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAxMDAlO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBtaW4td2lkdGg6IDEwMCU7XG5cbiAgICAgIGEge1xuICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIubWFpbi1mb290ZXIge1xuICA+IGRpdiB7XG4gICAgQGluY2x1ZGUgY29udGVudFdpZHRoO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG5cbiAgLmNvbnRhY3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAxLjczcHg7XG4gICAgY29sb3I6ICRwcmltYXJ5O1xuXG4gICAgcCB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICB9XG5cbiAgPiBkaXYge1xuXG4gIH1cbn1cblxuLmZvb3Rlci1sb2dvIHtcbiAgc3ZnIHtcbiAgICB3aWR0aDogODVweDtcbiAgICBoZWlnaHQ6IDk5cHg7XG4gICAgZmlsbDogJGFjY2VudC0xO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4iLCJib2R5LnBhZ2U6bm90KC5mcm9udC1wYWdlKSB7XG4gID4gbWFpbiB7XG4gICAgcGFkZGluZzogNzBweCAwO1xuICAgID4gc2VjdGlvbiB7XG4gICAgICA+IGRpdiB7XG4gICAgICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcbiAgICAgIH1cblxuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuXG4gICAgICAmLmJnLXByaW1hcnkge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgcGFkZGluZzogNjBweCAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4uc2VjdGlvbi1pbm5lciB7XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cbiIsIiVpbWdDb3ZlciB7XG4gIEBpbmNsdWRlIGltZ0NvdmVyO1xufVxuLmhwLXNsaWRlc2hvdyB7XG4gIGhlaWdodDogMTAwdmg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAub3dsLWNhcm91c2VsIHtcbiAgICAub3dsLWl0ZW0ge1xuICAgICAgaGVpZ2h0OiAxMDB2aDtcblxuICAgICAgPiBkaXYge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIH1cblxuICAgICAgaW1nIHtcbiAgICAgICAgQGV4dGVuZCAlaW1nQ292ZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLm93bC1uYXYge1xuICAgICAgYnV0dG9uIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgIGhlaWdodDogNTBweDtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICR3aGl0ZTtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJHdoaXRlO1xuXG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgIEBpbmNsdWRlIHNyT25seTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAub3dsLXByZXYge1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgfVxuXG4gICAgICAub3dsLW5leHQge1xuICAgICAgICByaWdodDogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLmhwLW5hdmlnYXRpb24ge1xuICBhIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGZvbnQtc2l6ZTogNTBweDtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LXNoYWRvdzogMHB4IDRweCA3cHggJHNlY29uZGFyeTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1mYW1pbHk6ICRoZWFkaW5nRkY7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcblxuICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgZm9udC1zaXplOiA4MHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIGZvbnQtc2l6ZTogMTU1cHg7XG4gICAgfVxuXG4gICAgc3BhbiB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB6LWluZGV4OiAxO1xuICAgIH1cblxuICAgIGltZyB7XG4gICAgICBAZXh0ZW5kICVpbWdDb3ZlcjtcbiAgICAgIHotaW5kZXg6IDA7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICAgIGZpbHRlcjogYmx1cigxOHB4KTtcblxuICAgICAgQHN1cHBvcnRzIChvYmplY3QtZml0OiBjb3Zlcikge1xuICAgICAgICB3aWR0aDogMTAzJTtcbiAgICAgICAgaGVpZ2h0OiAxMDMlO1xuICAgICAgfVxuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgaW1nIHtcbiAgICAgICAgZmlsdGVyOiBibHVyKDApO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmNvbnRlbnQtZ3JpZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW46IDAgLTEycHg7XG5cbiAgW2NsYXNzXj1cImNvbFwiXSB7XG4gICAgcGFkZGluZzogMTJweDtcbiAgfVxuXG4gIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbi5jb2wtMSB7XG4gIHdpZHRoOiAzMy4zMyU7XG4gIGZsZXg6IDAgMCAzMy4zMyU7XG59XG5cbi5jb2wtMiB7XG4gIHdpZHRoOiA2Ni42NyU7XG4gIGZsZXg6IDAgMCA2Ni42NyU7XG59XG5cbi5jb2wtMyB7XG4gIHdpZHRoOiAxMDAlO1xuICBmbGV4OiAwIDAgMTAwJTtcbn1cbiIsIi8vIFNJTkdMRSBQUk9KRUNUXG4ucHJvamVjdC1oZXJvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXgtaGVpZ2h0OiAxMDB2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWJvdHRvbTogMTJweDtcblxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gIH1cbn1cblxuLmdyaWQtdGl0bGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAgMjRweCAzOHB4IDI0cHg7XG4gIGNvbG9yOiAkd2hpdGU7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuXG4gIHNtYWxsIHtcbiAgICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgICBsaW5lLWhlaWdodDogKDQwIC8gMzApICogMWVtO1xuICAgIGZvbnQtd2VpZ2h0OiAkYm9sZDtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gIH1cbn1cblxuLnByb2plY3QtbWFpbiB7XG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gIH1cbn1cblxuLy8gUFJPSkVDVCBHUklEXG4ucmVsYXRlZC1wcm9qZWN0cyB7XG4gIHBhZGRpbmc6IDcwcHggMDtcbn1cblxuLnByb2plY3QtZ3JpZCB7XG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gIH1cblxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIGFydGljbGUge1xuICAgIHBhZGRpbmc6IDEycHg7XG4gICAgd2lkdGg6IDMzLjMzJTtcbiAgICBmbGV4OiAwIDAgMzMuMzMlO1xuXG4gICAgJjpudGgtY2hpbGQoM24gKyAyKSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTcwcHgpO1xuICAgIH1cbiAgfVxuXG4gIGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBjb2xvcjogJHdoaXRlO1xuICB9XG5cbiAgc21hbGwge1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgfVxuXG4gIC5ncmlkLXRpdGxlIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNDhweDtcbiAgfVxuXG4gICYuYXJjaGl2ZSB7XG4gICAgYmFja2dyb3VuZDogJHByaW1hcnk7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgfVxufVxuXG4ucHJvamVjdC1ncmlkLWlubmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIG1hcmdpbjogMCAtMTJweDtcbiAgcGFkZGluZzogNjhweCAwIDcwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiIsIi5wcmVzcy1saXN0aW5nIHtcbiAgcGFkZGluZzogNzBweCAwO1xuXG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIH1cbiAgfVxuXG4gIC5hcnRpY2xlcyB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGFydGljbGUge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMS40ZW07XG4gICAgICBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG4gICAgfVxuXG4gICAgYSB7XG4gICAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgICAgc3BhbjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4ub3V0bGV0LWdyaWQge1xuICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICB3aWR0aDogNTYuNSU7XG5cbiAgICBuYXYge1xuICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgIHRvcDogJGhlYWRlckhlaWdodDtcbiAgICB9XG4gIH1cblxuICB1bCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luOiAtMTJweDtcbiAgfVxuXG4gIGxpIHtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZzogMTJweDtcblxuICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgZmxleDogMCAwIDMzLjMlO1xuICAgICAgd2lkdGg6IDMzLjMlO1xuICAgIH1cbiAgfVxuXG4gIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgc3BhbiB7XG4gICAgQGluY2x1ZGUgc3JPbmx5O1xuICB9XG5cbiAgYSB7XG4gICAgdHJhbnNpdGlvbjogYWxsIC41cztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjREREREREO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgb3BhY2l0eTogLjI1O1xuICAgIH1cbiAgfVxuXG4gICYudGF4LWFyY2hpdmUge1xuICAgIGEge1xuICAgICAgb3BhY2l0eTogLjI1O1xuXG4gICAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IC43NTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsaS5hY3RpdmUgYSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgfVxufVxuXG4uYXJ0aWNsZXMge1xuICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICBmbGV4OiAwIDAgMzIuMiU7XG4gICAgd2lkdGg6IDMyLjIlO1xuICB9XG59XG4iLCIucGVvcGxlID4gbWFpbiB7XG4gIHBhZGRpbmc6IDcwcHggMDtcbn1cbi5wZW9wbGUtZ3JpZCB7XG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gIH1cblxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5ncmlkLXRpdGxlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgYXJ0aWNsZSB7XG4gICAgcGFkZGluZzogMTJweDtcbiAgICB3aWR0aDogMzMuMzMlO1xuICAgIGZsZXg6IDAgMCAzMy4zMyU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJjpudGgtY2hpbGQoM24gKyAyKSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTcwcHgpO1xuICAgIH1cblxuICAgIGEge1xuICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAuZ3JpZC10aXRsZSB7XG4gICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4ucGVvcGxlLWdyaWQtaW5uZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgbWFyZ2luOiAwIC0xMnB4O1xuICBwYWRkaW5nOiA2OHB4IDAgNzBweDtcbn1cblxuLnBlb3BsZS1iaW8ge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAxMDAlO1xuICB0b3A6IDA7XG4gIHBhZGRpbmc6IDEycHg7XG4gIGRpc3BsYXk6IG5vbmU7XG5cbiAgcCB7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBmb250LXNpemU6IDIxcHg7XG4gICAgbGluZS1oZWlnaHQ6ICgyNyAvIDIxKSAqIDFlbTtcbiAgfVxuXG4gID4gZGl2IHtcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuICAgIHBhZGRpbmc6IDE4cHg7XG4gIH1cblxuICBidXR0b24ge1xuICAgIHdpZHRoOiAyNXB4O1xuICAgIGhlaWdodDogMjVweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyNXB4ICsgMTI7XG4gICAgcmlnaHQ6IDI1cHggKyAxMjtcblxuICAgIGJvcmRlcjogMXB4IHNvbGlkICR3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB0ZXh0LWluZGVudDogLTk5OTlweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcblxuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgd2lkdGg6IDE0MCU7XG4gICAgICBoZWlnaHQ6IDFweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgIH1cblxuICAgICY6YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoNDVkZWcpO1xuICAgIH1cbiAgICAmOmFmdGVyIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKCR3aGl0ZSwuOSk7XG4gICAgICBib3JkZXItY29sb3I6ICRwcmltYXJ5O1xuXG4gICAgICAmOmJlZm9yZSxcbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLmJpby10aXRsZSB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAzNXB4KTtcbiAgcCB7XG4gICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZSB7XG4gICY6bnRoLWNoaWxkKDNuKSxcbiAgJjpudGgtY2hpbGQoM24rMSkge1xuICAgIC5wZW9wbGUtYmlvIHtcbiAgICAgIHRvcDogLTcwcHg7XG4gICAgfVxuICB9XG5cbiAgJjpudGgtY2hpbGQoM24rMikge1xuICAgIC5wZW9wbGUtYmlvIHtcbiAgICAgIHRvcDogNzBweDtcbiAgICB9XG4gIH1cblxuICAmOm50aC1jaGlsZCgzbikge1xuICAgIC5wZW9wbGUtYmlvIHtcbiAgICAgIGxlZnQ6IGF1dG87XG4gICAgICByaWdodDogMTAwJTtcbiAgICB9XG4gIH1cbiAgJi5vcGVuIHtcbiAgICB6LWluZGV4OiAxMDtcblxuICAgIC5wZW9wbGUtYmlvIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuICB9XG59XG4iXX0= */