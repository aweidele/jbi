/*
 *  Owl Carousel - Core
 */

@import url("https://fonts.googleapis.com/css?family=Assistant:300,400,700|Expletus+Sans:400,700&display=swap");

.owl-carousel {
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1;
}

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden;
  /* fix firefox animation glitch */
}

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  /* fix for flashing background */
  -webkit-transform: translate3d(0px, 0px, 0px);
}

.owl-carousel .owl-wrapper,
.owl-carousel .owl-item {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
}

.owl-carousel .owl-item {
  position: relative;
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

.owl-carousel .owl-item img {
  display: block;
  width: 100%;
}

.owl-carousel .owl-nav.disabled,
.owl-carousel .owl-dots.disabled {
  display: none;
}

.owl-carousel .owl-nav .owl-prev,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-dot {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel .owl-nav button.owl-prev,
.owl-carousel .owl-nav button.owl-next,
.owl-carousel button.owl-dot {
  background: none;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit;
}

.owl-carousel.owl-loaded {
  display: block;
}

.owl-carousel.owl-loading {
  opacity: 0;
  display: block;
}

.owl-carousel.owl-hidden {
  opacity: 0;
}

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden;
}

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
      touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel.owl-grab {
  cursor: move;
  cursor: -webkit-grab;
  cursor: grab;
}

.owl-carousel.owl-rtl {
  direction: rtl;
}

.owl-carousel.owl-rtl .owl-item {
  float: right;
}

/* No Js */

.no-js .owl-carousel {
  display: block;
}

/*
 *  Owl Carousel - Animate Plugin
 */

.owl-carousel .animated {
  -webkit-animation-duration: 1000ms;
          animation-duration: 1000ms;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.owl-carousel .owl-animated-in {
  z-index: 0;
}

.owl-carousel .owl-animated-out {
  z-index: 1;
}

.owl-carousel .fadeOut {
  -webkit-animation-name: fadeOut;
          animation-name: fadeOut;
}

@-webkit-keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

/*
 * 	Owl Carousel - Auto Height Plugin
 */

.owl-height {
  -webkit-transition: height 500ms ease-in-out;
  transition: height 500ms ease-in-out;
}

/*
 * 	Owl Carousel - Lazy Load Plugin
 */

.owl-carousel .owl-item {
  /**
			This is introduced due to a bug in IE11 where lazy loading combined with autoheight plugin causes a wrong
			calculation of the height of the owl-item that breaks page layouts
		 */
}

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-item .owl-lazy[src^=""],
.owl-carousel .owl-item .owl-lazy:not([src]) {
  max-height: 0;
}

.owl-carousel .owl-item img.owl-lazy {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

/*
 * 	Owl Carousel - Video Plugin
 */

.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000;
}

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 5rem;
  width: 5rem;
  left: 50%;
  top: 50%;
  margin-left: -2.5rem;
  margin-top: -2.5rem;
  background: url("owl.video.play.png") no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  -webkit-transition: -webkit-transform 100ms ease;
  transition: -webkit-transform 100ms ease;
  transition: transform 100ms ease;
  transition: transform 100ms ease, -webkit-transform 100ms ease;
}

.owl-carousel .owl-video-play-icon:hover {
  -webkit-transform: scale(1.3, 1.3);
          transform: scale(1.3, 1.3);
}

.owl-carousel .owl-video-playing .owl-video-tn,
.owl-carousel .owl-video-playing .owl-video-play-icon {
  display: none;
}

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%;
}

/*
 * 	Default theme - Owl Carousel CSS File
 */

.owl-theme .owl-nav {
  margin-top: 0.625rem;
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-nav [class*='owl-'] {
  color: #FFF;
  font-size: 0.875rem;
  margin: 0.3125rem;
  padding: 0.25rem 0.4375rem;
  background: #D6D6D6;
  display: inline-block;
  cursor: pointer;
  border-radius: 0.1875rem;
}

.owl-theme .owl-nav [class*='owl-']:hover {
  background: #869791;
  color: #FFF;
  text-decoration: none;
}

.owl-theme .owl-nav .disabled {
  opacity: 0.5;
  cursor: default;
}

.owl-theme .owl-nav.disabled + .owl-dots {
  margin-top: 0.625rem;
}

.owl-theme .owl-dots {
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-dots .owl-dot {
  display: inline-block;
  zoom: 1;
  *display: inline;
}

.owl-theme .owl-dots .owl-dot span {
  width: 0.625rem;
  height: 0.625rem;
  margin: 0.3125rem 0.4375rem;
  background: #D6D6D6;
  display: block;
  -webkit-backface-visibility: visible;
  -webkit-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  border-radius: 1.875rem;
}

.owl-theme .owl-dots .owl-dot.active span,
.owl-theme .owl-dots .owl-dot:hover span {
  background: #869791;
}

* {
  margin: 0;
  padding: 0;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

ul,
ol {
  list-style: none;
}

a {
  -webkit-transition: all .25s;
  transition: all .25s;
}

.sr-only {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

strong {
  font-weight: 700;
}

body {
  font-family: "Assistant", sans-serif;
}

body.front-page > main,
body.project-detail > main {
  padding-top: 0;
  position: relative;
  z-index: 0;
}

body.front-page .main-header,
body.project-detail:not(.scrolled) .main-header {
  background: transparent;
}

body.front-page .main-header > div,
body.project-detail:not(.scrolled) .main-header > div {
  position: relative;
  z-index: 1;
}

body.front-page .main-header:before,
body.project-detail:not(.scrolled) .main-header:before {
  width: 100%;
  height: 9.4375rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  content: "";
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.3)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.3) 100%);
  -webkit-transition: all .25s;
  transition: all .25s;
}

body.front-page .main-header h1 a,
body.project-detail:not(.scrolled) .main-header h1 a {
  color: #FFFFFF;
}

body.front-page .main-header h1 a:hover,
body.front-page .main-header h1 a:focus,
body.project-detail:not(.scrolled) .main-header h1 a:hover,
body.project-detail:not(.scrolled) .main-header h1 a:focus {
  color: rgba(255, 255, 255, 0.4);
}

body.front-page .main-header .hamburger:not(.open) span,
body.front-page .main-header .hamburger:not(.open):before,
body.front-page .main-header .hamburger:not(.open):after,
body.project-detail:not(.scrolled) .main-header .hamburger:not(.open) span,
body.project-detail:not(.scrolled) .main-header .hamburger:not(.open):before,
body.project-detail:not(.scrolled) .main-header .hamburger:not(.open):after {
  background: #FFFFFF;
}

body.front-page > main > section > div {
  padding: 0;
}

h1,
.h1 {
  font-family: "Assistant", sans-serif;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 1.5625rem;
}

h2,
.h2 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.875rem;
  text-transform: uppercase;
  line-height: 1.33333em;
  font-weight: 700;
}

h3,
.h3 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.5rem;
  text-transform: uppercase;
  line-height: 1.33333em;
  font-weight: 700;
}

h5,
.h5 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.125rem;
}

p {
  font-size: 1.125rem;
  line-height: 1.28571em;
  margin-bottom: 1em;
}

.main-header {
  width: 100%;
  height: 3.4375rem;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  background: rgba(255, 255, 255, 0.99);
  -webkit-transition: all .25s;
  transition: all .25s;
}

.loggedin .main-header {
  top: 2rem;
}

.main-header h1 {
  position: relative;
  z-index: 20;
}

.main-header > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding-top: 0.625rem;
}

.main-header .hamburger {
  width: 2rem;
  height: 2rem;
  position: relative;
  background-color: transparent;
  z-index: 20;
}

.main-header .hamburger:before,
.main-header .hamburger:after,
.main-header .hamburger span {
  width: 1rem;
  height: 0.125rem;
  position: absolute;
  top: 0.9375rem;
  left: 0.5rem;
  content: "";
  background: #1E3141;
  -webkit-transition: all .25s;
  transition: all .25s;
  text-indent: -999999px;
}

.main-header .hamburger:before {
  -webkit-transform: translateY(-6px);
          transform: translateY(-6px);
}

.main-header .hamburger:after {
  -webkit-transform: translateY(6px);
          transform: translateY(6px);
}

.main-header .hamburger.open:before {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

.main-header .hamburger.open:after {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

.main-header .hamburger.open span {
  opacity: 0;
}

.main-header a {
  color: #1E3141;
  text-decoration: none;
}

.main-header a:hover,
.main-header a:focus {
  color: #707070;
}

.main-header nav {
  font-family: "Expletus Sans", cursive;
  font-size: 0.9375rem;
  position: relative;
}

.main-header nav a {
  color: #1E3141;
  text-decoration: none;
}

.main-header nav a:hover,
.main-header nav a:focus {
  color: #707070;
}

.main-header nav ul.menu > li > a {
  text-transform: uppercase;
  letter-spacing: 1.13px;
}

.main-header nav ul.menu li.current-menu-item > a,
.main-header nav ul.menu li.current-menu-ancestor > a {
  font-weight: 800;
}

.main-footer {
  padding: 1.25rem 0;
}

.main-footer a {
  color: #1E3141;
  text-decoration: none;
}

.main-footer a:hover,
.main-footer a:focus {
  text-decoration: underline;
}

.main-footer > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.main-footer .contact {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-style: normal;
  font-size: 0.9375rem;
  text-transform: uppercase;
  letter-spacing: 1.73px;
  color: #1E3141;
}

.main-footer .contact p {
  margin: 0;
  font-size: 0.875rem;
}

.main-footer .social {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.main-footer .social a {
  width: 1.5rem;
  height: 1.5rem;
  margin-left: 0.625rem;
}

.main-footer .social a svg {
  width: 100%;
  height: 100%;
}

.main-footer .social a span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.footer-logo svg {
  width: 5.3125rem;
  height: 6.1875rem;
  fill: #07144E;
  display: block;
}

body > main {
  padding: 3.4375rem 0;
}

body > main > section {
  color: #1E3141;
}

body > main > section > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

body > main > section.bg-primary {
  background: #1E3141;
  color: #FFFFFF;
  padding: 3.75rem 0;
}

.section-inner {
  padding: 0 1.25rem;
}

.hp-slideshow .js-carousel .owl-item img,
.hp-navigation a img {
  min-height: 100%;
  min-width: 100%;
  width: auto;
  height: auto;
  display: block;
  margin: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .hp-slideshow .js-carousel .owl-item img,
  .hp-navigation a img {
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }
}

.hp-slideshow {
  height: 100vh;
  position: relative;
}

.hp-slideshow .js-carousel .owl-item {
  height: 100vh;
}

.hp-slideshow .js-carousel .owl-item > div {
  height: 100%;
  position: relative;
}

.hp-slideshow .js-carousel .owl-nav button {
  position: absolute;
  top: calc(50% - 2.9375rem);
  width: 2.875rem;
  height: 5.9375rem;
  background-image: url("../images/arrow.svg");
  background-size: contain;
  background-repeat: no-repeat;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.hp-slideshow .js-carousel .owl-nav button span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.hp-slideshow .js-carousel .owl-nav button:focus,
.hp-slideshow .js-carousel .owl-nav button:active {
  border: 0;
  outline: none;
}

.hp-slideshow .js-carousel .owl-nav button:hover,
.hp-slideshow .js-carousel .owl-nav button:focus {
  opacity: .5;
}

.hp-slideshow .js-carousel .owl-nav .owl-prev {
  left: 1.25rem;
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.hp-slideshow .js-carousel .owl-nav .owl-next {
  right: 1.25rem;
}

.hp-slideshow .scroll-down {
  width: 2.875rem;
  height: 5.9375rem;
  position: absolute;
  bottom: 1.25rem;
  left: calc(50% - 1.125rem);
  z-index: 10;
  background-image: url("../images/arrow.svg");
  background-size: contain;
  background-repeat: no-repeat;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  overflow: hidden;
  text-indent: -999999px;
}

.hp-slideshow .scroll-down:hover,
.hp-slideshow .scroll-down:focus {
  opacity: .5;
}

.hp-navigation a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
  height: 100vh;
  overflow: hidden;
  font-size: 3.125rem;
  color: #FFFFFF;
  text-align: center;
  text-shadow: 0px 4px 7px #707070;
  text-decoration: none;
  font-family: "Expletus Sans", cursive;
  font-weight: 700;
  background: #1E3141;
}

.hp-navigation a span {
  position: relative;
  z-index: 1;
}

.hp-navigation a img {
  z-index: 0;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-filter: blur(18px);
          filter: blur(18px);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .hp-navigation a img {
    width: 103%;
    height: 103%;
  }
}

.hp-navigation .active a img {
  -webkit-filter: blur(0);
          filter: blur(0);
}

.content-grid {
  margin: 0 -0.375rem;
}

.content-grid [class^="col"] {
  padding: 0.375rem;
}

.content-grid picture {
  display: block;
  height: 100%;
  overflow: hidden;
}

.content-grid img {
  width: 100%;
  height: auto;
  display: block;
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .content-grid img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }
}

.map {
  width: 100%;
  padding-bottom: 72%;
  position: relative;
}

.map iframe {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
}

.project-hero {
  position: relative;
  max-height: 100vh;
  overflow: hidden;
  margin-bottom: 0.75rem;
}

.project-hero img {
  width: 100%;
  height: auto;
  display: block;
}

.project-hero .project-title {
  width: 100%;
  position: absolute;
  left: 0;
  bottom: 0;
  color: #FFFFFF;
  text-shadow: 0 0 2px #000000;
  padding-bottom: 2.8125rem;
}

.project-hero .project-title span,
.project-hero .project-title small {
  display: block;
}

.project-hero .project-title small {
  font-size: 1em;
  text-transform: none;
}

.project-hero .project-title > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.grid-title {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  padding: 0 1.5rem 2.375rem 1.5rem;
  color: #FFFFFF;
  -webkit-transition: all .25s;
  transition: all .25s;
  text-shadow: 0px 0px 2px #000000;
}

.grid-title h4 {
  font-size: 1.5rem;
  text-transform: uppercase;
}

.grid-title small {
  font-family: "Expletus Sans", cursive;
  line-height: 1.33333em;
  font-weight: 700;
  font-size: 1.25em;
}

.project-main > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.project-stats {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-gap: 5px 20px;
  margin-top: 3em;
}

.project-stats dt {
  text-transform: uppercase;
}

.project-grid {
  font-family: "Expletus Sans", cursive;
}

.project-grid > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.project-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.project-grid article {
  padding: 0.375rem;
}

.project-grid a {
  display: block;
  position: relative;
  color: #FFFFFF;
}

.project-grid a:before {
  width: 100%;
  height: 9.4375rem;
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 0;
  content: "";
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0) 100%);
}

.project-grid small {
  font-size: 1.3125rem;
}

.project-grid .grid-title {
  padding-bottom: 3rem;
}

.project-grid.archive {
  background: #1E3141;
  color: #FFFFFF;
}

.project-grid-inner {
  padding: 0 0 4.375rem;
  text-align: center;
  margin: 0 -0.375rem;
}

.press-listing {
  padding: 4.375rem 0;
}

.press-listing > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.press-listing .articles {
  font-size: 1.125rem;
}

.press-listing .articles article {
  margin-bottom: 1.4em;
}

.press-listing .articles article .date {
  font-family: "Expletus Sans", cursive;
}

.press-listing .articles article span {
  display: block;
}

.press-listing .articles a {
  color: #1E3141;
  text-decoration: none;
}

.press-listing .articles a:hover span:last-child,
.press-listing .articles a:focus span:last-child {
  text-decoration: underline;
}

.outlet-grid ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: -0.75rem;
}

.outlet-grid li {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
  width: 50%;
  padding: 0.75rem;
}

.outlet-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.outlet-grid span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.outlet-grid a {
  -webkit-transition: all .25s;
  transition: all .25s;
  display: block;
  border: 0.0625rem solid #DDDDDD;
}

.outlet-grid a:hover,
.outlet-grid a:focus {
  opacity: .25;
}

.outlet-grid.tax-archive a {
  opacity: .25;
}

.outlet-grid.tax-archive a:hover,
.outlet-grid.tax-archive a:focus {
  opacity: .75;
}

.outlet-grid.tax-archive li.active a {
  opacity: 1;
}

.s-news {
  padding: 4.6875rem 0;
}

.news-carousel article {
  font-size: 1.125rem;
  padding: 0.0625rem;
}

.news-carousel article a {
  color: #1E3141;
  display: block;
  height: 100%;
  padding: 1.25rem;
  border: 0.0625rem solid #1E3141;
  text-decoration: none;
}

.news-carousel article a:hover,
.news-carousel article a:focus {
  background: rgba(30, 49, 65, 0.2);
}

.news-carousel .owl-item:nth-child(2n) article a {
  color: #FFFFFF;
  background: #1E3141;
}

.news-carousel .owl-item:nth-child(2n) article a:hover,
.news-carousel .owl-item:nth-child(2n) article a:focus {
  color: #1E3141;
  background: rgba(30, 49, 65, 0.2);
}

.news-carousel .owl-stage {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
}

.news-carousel article,
.news-carousel a {
  height: 100%;
}

.news-carousel .date {
  margin-bottom: .5em;
}

.people > main {
  padding: 4.375rem 0;
}

.people-grid h4 {
  font-family: "Expletus Sans", cursive;
}

.people-grid > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.people-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.people-grid .grid-title {
  opacity: 0;
}

.people-grid article {
  position: relative;
  padding: 0.375rem;
}

.people-grid article a {
  display: block;
  position: relative;
}

.people-grid article a:hover .grid-title,
.people-grid article a:focus .grid-title {
  opacity: 1;
}

.people-grid article a:before {
  width: 100%;
  height: 9.4375rem;
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 0;
  content: "";
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0) 100%);
}

.people-grid-inner {
  padding: 4.25rem 0 4.375rem;
  margin: 0 -0.375rem;
}

.people-bio {
  width: 100%;
  min-height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  display: none;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio p {
  color: #FFFFFF;
  font-size: 1.3125rem;
  line-height: 1.28571em;
}

.people-bio > div {
  min-height: 100%;
  background: #1E3141;
  padding: 1.125rem;
}

.people-bio button {
  width: 1.5625rem;
  height: 1.5625rem;
  position: absolute;
  top: 2.3125rem;
  right: 2.3125rem;
  border: 0.0625rem solid #FFFFFF;
  background-color: transparent;
  text-indent: -9999px;
  overflow: hidden;
  cursor: pointer;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio button:before,
.people-bio button:after {
  width: 140%;
  height: 0.0625rem;
  position: absolute;
  top: 50%;
  left: 50%;
  content: "";
  background: #FFFFFF;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio button:before {
  -webkit-transform: translateX(-50%) rotate(45deg);
          transform: translateX(-50%) rotate(45deg);
}

.people-bio button:after {
  -webkit-transform: translateX(-50%) rotate(-45deg);
          transform: translateX(-50%) rotate(-45deg);
}

.people-bio button:hover,
.people-bio button:focus {
  background: rgba(255, 255, 255, 0.9);
  border-color: #1E3141;
}

.people-bio button:hover:before,
.people-bio button:hover:after,
.people-bio button:focus:before,
.people-bio button:focus:after {
  background-color: #1E3141;
}

.bio-title {
  width: calc(100% - 2.1875rem);
}

.bio-title p:first-child {
  text-transform: uppercase;
  margin: 0;
}

.people-grid article.open {
  z-index: 10;
}

.people-grid article.open .people-bio {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.feedback {
  font-size: 0.6875rem;
  background: rgba(30, 49, 65, 0.8);
  color: #FFFFFF;
  padding: 0.3125rem;
  position: fixed;
  z-index: 9999;
  right: 0.625rem;
  bottom: 0.625rem;
}

@media screen and (min-width: 768px) {
  .main-header > div {
    -webkit-box-align: end;
        -ms-flex-align: end;
            align-items: flex-end;
  }

  .hp-navigation a {
    font-size: 5rem;
  }

  .content-grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }

  .col-1 {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .col-2 {
    width: 66.67%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 66.67%;
            flex: 0 0 66.67%;
  }

  .col-3 {
    width: 100%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
  }

  .project-grid article {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .project-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-35px);
            transform: translateY(-35px);
  }

  .project-grid-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    padding-top: 4.375rem;
  }

  .press-listing > div {
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
        -ms-flex-direction: row-reverse;
            flex-direction: row-reverse;
  }

  .outlet-grid {
    width: 75%;
  }

  .outlet-grid nav {
    position: -webkit-sticky;
    position: sticky;
    top: 5rem;
  }

  .outlet-grid li {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    width: 25%;
  }

  .articles {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    width: 20%;
  }

  .people-grid article {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .people-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-35px);
            transform: translateY(-35px);
  }

  .people-grid-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }

  .people-bio {
    left: 100%;
  }

  .people-grid article:nth-child(3n) .people-bio,
  .people-grid article:nth-child(3n+1) .people-bio {
    top: -4.375rem;
  }

  .people-grid article:nth-child(3n+2) .people-bio {
    top: 4.375rem;
  }

  .people-grid article:nth-child(3n) .people-bio {
    left: auto;
    right: 100%;
  }
}

@media screen and (min-width: 1025px) {
  body.front-page .main-header a,
  body.front-page .main-header span,
  body.project-detail:not(.scrolled) .main-header a,
  body.project-detail:not(.scrolled) .main-header span {
    color: #FFFFFF;
  }

  body.front-page .main-header a:hover,
  body.front-page .main-header a:focus,
  body.front-page .main-header span:hover,
  body.front-page .main-header span:focus,
  body.project-detail:not(.scrolled) .main-header a:hover,
  body.project-detail:not(.scrolled) .main-header a:focus,
  body.project-detail:not(.scrolled) .main-header span:hover,
  body.project-detail:not(.scrolled) .main-header span:focus {
    color: rgba(255, 255, 255, 0.4);
  }

  .main-header {
    height: 5rem;
  }

  .main-header button {
    display: none;
  }

  .main-header nav a {
    padding: 0 0.75rem;
  }

  .main-header nav {
    margin: 0 -0.75rem;
  }

  .main-header nav ul.menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
  }

  .main-header nav ul.menu > li:hover .sub-menu,
  .main-header nav ul.menu > li.current-menu-item .sub-menu,
  .main-header nav ul.menu > li.current-menu-ancestor .sub-menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }

  .main-header nav .sub-menu {
    display: none;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    position: absolute;
    top: 100%;
    right: 0;
    min-width: 100%;
  }

  .main-header nav .sub-menu a,
  .main-header nav .sub-menu span {
    padding: 0.625rem 0.75rem 0;
    display: block;
  }

  body > main {
    padding: 5rem 0;
  }

  .section-inner {
    padding: 0 5.75rem;
  }

  .hp-navigation a {
    font-size: 9.6875rem;
  }

  .content-grid {
    margin: 0 3.75rem;
  }

  .content-grid [class^="col"] {
    padding: 0.75rem;
  }

  .grid-title h4 {
    font-size: 1.875rem;
  }

  .related-projects {
    padding: 4.375rem 0;
  }

  .project-grid article {
    padding: 0.75rem;
  }

  .project-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-70px);
            transform: translateY(-70px);
  }

  .project-grid-inner {
    margin: 0 3.75rem;
    padding-top: 2.1875rem;
  }

  .people-grid article {
    padding: 0.75rem;
  }

  .people-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-70px);
            transform: translateY(-70px);
  }

  .people-grid-inner {
    margin: 0 3.75rem;
  }

  .people-bio {
    padding: 0.75rem;
  }
}

@media screen and (max-width: 1024.9px) {
  body.front-page .main-header .open h1 a,
  body.project-detail:not(.scrolled) .main-header .open h1 a {
    color: #1E3141;
  }

  body.front-page .main-header .open h1 a:hover,
  body.front-page .main-header .open h1 a:focus,
  body.project-detail:not(.scrolled) .main-header .open h1 a:hover,
  body.project-detail:not(.scrolled) .main-header .open h1 a:focus {
    color: rgba(30, 49, 65, 0.4);
  }

  .main-header .hamburger.open + nav {
    -webkit-transform: translate(-100%);
            transform: translate(-100%);
  }

  .main-header nav {
    position: fixed;
    top: 0;
    left: 100%;
    z-index: 10;
    width: 100vw;
    height: 100vh;
    background: #FFFFFF;
    padding: 3.75rem 1.25rem;
    font-size: 1.125rem;
    -webkit-transition: all .25s;
    transition: all .25s;
  }

  .main-header nav > div {
    height: 100%;
    overflow: auto;
  }

  .main-header nav .sub-menu {
    display: none;
    width: 100%;
    font-size: 0.875rem;
  }

  .main-header nav .sub-menu a,
  .main-header nav .sub-menu span {
    display: block;
    padding: 0.3125rem 0.625rem;
  }

  .main-header nav .menu > li {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    margin: 0.625rem 0;
  }

  .main-header nav .menu > li > a {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
  }

  .main-header nav .menu > li > button {
    width: 2rem;
    height: 2rem;
    position: relative;
    background-color: transparent;
    border: 0;
  }

  .main-header nav .menu > li > button:before,
  .main-header nav .menu > li > button:after {
    width: 1rem;
    height: 0.125rem;
    position: absolute;
    top: 0.9375rem;
    left: 0.5rem;
    content: "";
    background: #1E3141;
    -webkit-transition: all .25s;
    transition: all .25s;
  }

  .main-header nav .menu > li > button:after {
    -webkit-transform: rotate(90deg);
            transform: rotate(90deg);
  }

  .main-header nav .menu > li > button span {
    position: absolute;
    width: 0.0625rem;
    height: 0.0625rem;
    padding: 0;
    margin: -0.0625rem;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
  }

  .main-header nav .menu > li.current-menu-item > button:after {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }

  .main-header nav .menu > li.current-menu-item .sub-menu {
    display: block;
  }
}

@media screen and (max-width: 767.9px) {
  .content-grid .col-1 img {
    width: auto;
    max-height: 520px;
    margin: auto;
  }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3MvX2NvcmUuc2NzcyIsIm1haW4uY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fYW5pbWF0ZS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fYXV0b2hlaWdodC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fbGF6eWxvYWQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3MvX3ZpZGVvLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL190aGVtZS5kZWZhdWx0LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL190aGVtZS5zY3NzIiwiYmFzZS9fcmVzZXQuc2NzcyIsImJhc2UvX21peGlucy5zY3NzIiwic3RydWN0dXJlL19iYXNlLnNjc3MiLCJiYXNlL192YXJpYWJsZXMuc2NzcyIsInN0cnVjdHVyZS9jb3B5L19oZWFkaW5ncy5zY3NzIiwic3RydWN0dXJlL2NvcHkvX2Jhc2Uuc2NzcyIsInN0cnVjdHVyZS9oZWFkZXIvX2hlYWRlci5zY3NzIiwic3RydWN0dXJlL2hlYWRlci9fbmF2LnNjc3MiLCJzdHJ1Y3R1cmUvZm9vdGVyL19mb290ZXIuc2NzcyIsInN0cnVjdHVyZS9fcGFnZS5zY3NzIiwic3RydWN0dXJlL19mcm9udC1wYWdlLnNjc3MiLCJjb21wb25lbnRzL19ncmlkLnNjc3MiLCJjb21wb25lbnRzL19tYXAuc2NzcyIsImZlZWRzL3Byb2plY3RzL19iYXNlLnNjc3MiLCJmZWVkcy9wcmVzcy9fYmFzZS5zY3NzIiwiZmVlZHMvcGVvcGxlL19iYXNlLnNjc3MiLCJtYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7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Y0FBVztFQUNYLDBCQUFXO01BQ1gsdUJBQWtCO1VBQ2Isb0JBQUk7RUFDVCwwQkFBUztNQUNULHVCQUFXO1VBQ1gsK0JIcERXO0VHcURYLHNCQUFZO0Nid2JqQjs7QUFFRDtFYXZmQSxZQXdDRTtFQTBCSSxhQUFXO0VBQ1osbUJBQUE7RWJ3YkgsOEJBQThCO0VhM2ZoQyxZQXdDRTtDYnFkRDs7QUFFRDs7O0VhcGJPLFlBQUE7RWJ3YkwsaUJBQVk7RWFuZ0JkLG1CQXdDRTtFQXFDTSxlQUFTO0VBQ1YsYUFBQTtFYnliTCxZQUFZO0VhdmdCZCxvQkF3Q0U7RUF3Q00sNkJBQVU7RUFDWCxxQkFBQTtFYjBiTCx1QkFBdUI7Q2F4Ym5COztBYjJiTjtFQUNFLG9DYXpiTztVYjBiQyw0QkFBNEI7Q0FDckM7O0FBRUQ7RWFuYkksbUNBQXFCO1VBS3RCLDJCQUFBO0NiaWJGOztBQUVEO0VROWdCRyxpQ0FBQTtVUmdoQk8seUJBQXlCO0NhMWhCbkM7O0FiNmhCQTtFYzFoQkUsa0NBQWtCO1VBdUpuQiwwQkFBQTtDZHNZQTs7QUFFRDtFYzNoQkksV0FBQTtDQVVEOztBTlZEO0VNR0ksZUpEYTtFRkNoQixzQkFBQTtDUitoQkY7O0FBRUQ7O0VBRUUsZWM1aEJDO0NkNmhCRjs7QWM1aEJDO0VEbEJGLHNDQ0FJO0Vka2pCRixxQmMvaEJVO0VkZ2lCVixtQmN6WkQ7Q2QwWkE7O0FjOWhCQztFRHRCRixlQ0FBO0Vkd2pCRSxzQmNqaUJpQjtDZGtpQmxCOztBQUVEOztFQUVFLGVjamlCZTtDZGtpQmhCOztBQUVEO0VBQ0UsMEJjamlCc0I7RWRraUJ0Qix1QmN4YUQ7Q2R5YUE7O0FBRUQ7O0VhcmtCQSxpQkN1Q0k7Q2RpaUJIOztBQUVEO0VBQ0UsbUJjMWhCRztDZDJoQko7O0FBRUQ7RUFDRSxlY2hpQmU7RWRpaUJmLHNCY2hpQks7Q2RpaUJOOztBQUVEOztFQUVFLDJCYzdoQm9CO0NkOGhCckI7O0FBRUQ7RUFDRSxrQmM3aEJPO0VENURULGFDQUE7RWQybEJFLG1CYzVoQm1CO0VkNmhCbkIscUJjNWhCb0I7RWQ2aEJwQixxQmM1aEIwQjtFZDZoQjFCLGNjNWhCUTtFZDZoQlIsMEJjNWhCaUI7TUFxQlYsdUJBQUE7VUR4RlQsK0JDOERnQjtDZG9pQmY7O0FBRUQ7RUFDRSxxQmMzaEJtQjtFZDRoQm5CLHFCYzNoQm1CO0VkNGhCbkIsY2MzaEJxQjtFZDRoQnJCLG1CVWhtQlE7RVZpbUJSLHFCYzNoQnNCO0VkNGhCdEIsMEJjM2hCUztFRC9FWCx1QkNtRFM7RWR5akJQLGVjMWhCcUI7Q2QyaEJ0Qjs7QUFFRDtFQUNFLFVRam1CTztFUmttQlAsb0JRam1CVztDUmttQlo7O0FBRUQ7RUFDRSxxQlFqbUJNO0VSa21CTixxQlFqbUJTO0VSa21CVCxjY2hpQlM7Q2RpaUJWOztBQUVEO0VhMW5CQSxjQUFZO0ViNG5CVixlYzFoQm1CO0VkMmhCbkIsc0JjMWhCUztDZDJoQlY7O0FjcGhCRztFRDFHSixZQUFZO0Via29CVixhY3ZoQmE7Q2R3aEJkOztBQUVEO0VBQ0UsbUJBQW1CO0VhdG9CckIsaUJDQUE7RUFpSFEsa0JBQUE7RUFDQSxXQUFBO0VBQ0QsbUJBQUE7RWR3aEJMLGlCQUFpQjtFY3RoQmIsdUJBQW1CO0VEckh6QixVQUFBO0NiOG9CQzs7QUFFRDtFQUNFLGlCQUFZO0VhanBCZCxrQkNBQTtFQW9JVSxjQUFhO0VBQ2QsZUFBQTtDZGdoQlI7O0FBRUQ7RUFDRSxxQmM1Z0JpQjtDZDZnQmxCOztBQUVEO0VBQ0UsZWM1Z0JZO0NkNmdCYjs7QUFFRDtFYS9wQkEsa0JDdUNJO0VkMG5CRixhYzVnQmU7RWQ2Z0JmLG1CYzVnQm9CO0NkNmdCckI7O0FBRUQ7RWVycUJBLG9CQUFhO0VBQ1gsZUFBa0I7RUFrRG5CLG1CQUFBO0Nmc25CQTs7QUFFRDtFZXRxQkksbUJBQWU7Q0FJaEI7O0FQRkQ7O0VBR0MsaUJBQUE7RVJ3cUJELGdCQUFnQjtFZWxyQmxCLFlBQVk7RVBDVixhRUFJO0VGQ0osZUFBWTtFQUNaLFVBQVU7RU9TUixtQkFBYTtFQUNiLFNBQUE7RUFDRCxVQUFBO0VmNHFCRCx5Q0FBeUM7VWUxckIzQyxpQ0FnQlc7Q2Y0cUJWOztB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QUFxQjtJQUNyQixxQkFBcUI7SUFDckIsY0FBYztJQUNkLDBCQUEwQjtRQUN0Qix1QkFBdUI7WUFDbkIsK0JBQStCO0lBQ3ZDLG9CQUFvQjtRQUNoQixnQkFBZ0I7SUFDcEIsbUJBQWU7R0FDaEI7O0VBRUQ7SUFDRSxvQkFBb0I7UUFDaEIscUJBQXFCO1lBQ2pCLGFBQWE7R0FDdEI7O0VBRUQ7SUFDRSxZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiw4QkFBOEI7SUFDOUIsVUFBVTtHQUNYOztFQUVEOztJQUVFLFlBQVk7SUFDWixpQkFBWTtJQUNaLG1CQUFtQjtJQUNuQixlQUFVO0lBQ1YsYUFBVTtJQUNWLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIsNkJBQTZCO0lBQzdCLHFCQUFxQjtHQUN0Qjs7RUFFRDtJQUNFLGlDQUFpQztZQUN6Qix5QkFBeUI7R0FDbEM7O0VBRUQ7SUFDRSxtQkFBbUI7SUFDbkIsaUJBQVc7SUFDWCxrQkFBWTtJQUNaLFdBQVc7SUFDWCxtQkFBYTtJQUNiLGlCQUFpQjtJQUNqQix1QkFBdUI7SUFDdkIsVUFBVTtHQUNYOztFQUVEO0lBQ0UsZ0NBQWdDO1lBQ3hCLHdCQUF3QjtHQUNqQzs7RUFFRDtJQUNFLGVBQWU7R0FDaEI7Q0FDRjs7QUFFRDtFQUNFO0lBQ0UsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixhQUFhO0dBQ2Q7Q0FDRiIsImZpbGUiOiJ0by5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogIE93bCBDYXJvdXNlbCAtIENvcmVcbiAqL1xuLm93bC1jYXJvdXNlbCB7XG5cdGRpc3BsYXk6IG5vbmU7XG5cdHdpZHRoOiAxMDAlO1xuXHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHQvKiBwb3NpdGlvbiByZWxhdGl2ZSBhbmQgei1pbmRleCBmaXggd2Via2l0IHJlbmRlcmluZyBmb250cyBpc3N1ZSAqL1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHotaW5kZXg6IDE7XG5cblx0Lm93bC1zdGFnZSB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdC1tcy10b3VjaC1hY3Rpb246IHBhbi1ZO1xuXHRcdHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuXHRcdC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyAvKiBmaXggZmlyZWZveCBhbmltYXRpb24gZ2xpdGNoICovXG5cdH1cblxuXHQub3dsLXN0YWdlOmFmdGVyIHtcblx0XHRjb250ZW50OiBcIi5cIjtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRjbGVhcjogYm90aDtcblx0XHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0bGluZS1oZWlnaHQ6IDA7XG5cdFx0aGVpZ2h0OiAwO1xuXHR9XG5cblx0Lm93bC1zdGFnZS1vdXRlciB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0LyogZml4IGZvciBmbGFzaGluZyBiYWNrZ3JvdW5kICovXG5cdFx0LXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpO1xuXHR9XG5cblx0Lm93bC13cmFwcGVyLFxuXHQub3dsLWl0ZW17XG5cdFx0LXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0LW1vei1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0LW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcblx0XHQtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuXHRcdC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLDAsMCk7XG5cdFx0LW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuXHR9XG5cblx0Lm93bC1pdGVtIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0bWluLWhlaWdodDogMXB4O1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHRcdC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0LXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuXHR9XG5cdC5vd2wtaXRlbSBpbWcge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG5cblx0Lm93bC1uYXYuZGlzYWJsZWQsXG5cdC5vd2wtZG90cy5kaXNhYmxlZCB7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0fVxuXG5cdC5vd2wtbmF2IC5vd2wtcHJldixcblx0Lm93bC1uYXYgLm93bC1uZXh0LFxuXHQub3dsLWRvdCB7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LWtodG1sLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LW1zLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdHVzZXItc2VsZWN0OiBub25lO1xuXHR9XG5cblx0Lm93bC1uYXYgYnV0dG9uLm93bC1wcmV2LFxuXHQub3dsLW5hdiBidXR0b24ub3dsLW5leHQsXG5cdGJ1dHRvbi5vd2wtZG90IHtcblx0XHRiYWNrZ3JvdW5kOiBub25lO1xuXHRcdGNvbG9yOiBpbmhlcml0O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRwYWRkaW5nOjAhaW1wb3J0YW50O1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdH1cblxuXHQmLm93bC1sb2FkZWQge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHR9XG5cblx0Ji5vd2wtbG9hZGluZyB7XG5cdFx0b3BhY2l0eTogMDtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0fVxuXG5cdCYub3dsLWhpZGRlbiB7XG5cdFx0b3BhY2l0eTogMDtcblx0fVxuXG5cdCYub3dsLXJlZnJlc2ggLm93bC1pdGVtIHtcblx0XHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdH1cblxuXHQmLm93bC1kcmFnIC5vd2wtaXRlbSB7XG5cdFx0dG91Y2gtYWN0aW9uOiBwYW4teTtcblx0XHQtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LW1zLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdHVzZXItc2VsZWN0OiBub25lO1xuXHR9XG5cblx0Ji5vd2wtZ3JhYiB7XG5cdFx0Y3Vyc29yOiBtb3ZlO1xuXHRcdGN1cnNvcjogZ3JhYjtcblx0fVxuXG5cdCYub3dsLXJ0bCB7XG5cdFx0ZGlyZWN0aW9uOiBydGw7XG5cdH1cblxuXHQmLm93bC1ydGwgLm93bC1pdGVtIHtcblx0XHRmbG9hdDogcmlnaHQ7XG5cdH1cbn1cblxuLyogTm8gSnMgKi9cbi5uby1qcyAub3dsLWNhcm91c2VsIHtcblx0ZGlzcGxheTogYmxvY2s7XG59XG4iLCIvKlxuICogIE93bCBDYXJvdXNlbCAtIENvcmVcbiAqL1xuXG5AaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Bc3Npc3RhbnQ6MzAwLDQwMCw3MDB8RXhwbGV0dXMrU2Fuczo0MDAsNzAwJmRpc3BsYXk9c3dhcFwiKTtcblxuLm93bC1jYXJvdXNlbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHdpZHRoOiAxMDAlO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiBwb3NpdGlvbiByZWxhdGl2ZSBhbmQgei1pbmRleCBmaXggd2Via2l0IHJlbmRlcmluZyBmb250cyBpc3N1ZSAqL1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1zdGFnZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLW1zLXRvdWNoLWFjdGlvbjogcGFuLVk7XG4gIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLyogZml4IGZpcmVmb3ggYW5pbWF0aW9uIGdsaXRjaCAqL1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtc3RhZ2U6YWZ0ZXIge1xuICBjb250ZW50OiBcIi5cIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNsZWFyOiBib3RoO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBoZWlnaHQ6IDA7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1zdGFnZS1vdXRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgLyogZml4IGZvciBmbGFzaGluZyBiYWNrZ3JvdW5kICovXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDBweCwgMHB4KTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXdyYXBwZXIsXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSB7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWluLWhlaWdodDogMXB4O1xuICBmbG9hdDogbGVmdDtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2LmRpc2FibGVkLFxuLm93bC1jYXJvdXNlbCAub3dsLWRvdHMuZGlzYWJsZWQge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2IC5vd2wtcHJldixcbi5vd2wtY2Fyb3VzZWwgLm93bC1uYXYgLm93bC1uZXh0LFxuLm93bC1jYXJvdXNlbCAub3dsLWRvdCB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLW5hdiBidXR0b24ub3dsLXByZXYsXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbi5vd2wtbmV4dCxcbi5vd2wtY2Fyb3VzZWwgYnV0dG9uLm93bC1kb3Qge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLWxvYWRlZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1sb2FkaW5nIHtcbiAgb3BhY2l0eTogMDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLWhpZGRlbiB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLXJlZnJlc2ggLm93bC1pdGVtIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1kcmFnIC5vd2wtaXRlbSB7XG4gIC1tcy10b3VjaC1hY3Rpb246IHBhbi15O1xuICAgICAgdG91Y2gtYWN0aW9uOiBwYW4teTtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtZ3JhYiB7XG4gIGN1cnNvcjogbW92ZTtcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG4gIGN1cnNvcjogZ3JhYjtcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtcnRsIHtcbiAgZGlyZWN0aW9uOiBydGw7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLXJ0bCAub3dsLWl0ZW0ge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi8qIE5vIEpzICovXG5cbi5uby1qcyAub3dsLWNhcm91c2VsIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiAgT3dsIENhcm91c2VsIC0gQW5pbWF0ZSBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIC5hbmltYXRlZCB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAxMDAwbXM7XG4gICAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMDAwbXM7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtYW5pbWF0ZWQtaW4ge1xuICB6LWluZGV4OiAwO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtYW5pbWF0ZWQtb3V0IHtcbiAgei1pbmRleDogMTtcbn1cblxuLm93bC1jYXJvdXNlbCAuZmFkZU91dCB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IGZhZGVPdXQ7XG4gICAgICAgICAgYW5pbWF0aW9uLW5hbWU6IGZhZGVPdXQ7XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlT3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgZmFkZU91dCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG4vKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBBdXRvIEhlaWdodCBQbHVnaW5cbiAqL1xuXG4ub3dsLWhlaWdodCB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogaGVpZ2h0IDUwMG1zIGVhc2UtaW4tb3V0O1xuICB0cmFuc2l0aW9uOiBoZWlnaHQgNTAwbXMgZWFzZS1pbi1vdXQ7XG59XG5cbi8qXG4gKiBcdE93bCBDYXJvdXNlbCAtIExhenkgTG9hZCBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSB7XG4gIC8qKlxuXHRcdFx0VGhpcyBpcyBpbnRyb2R1Y2VkIGR1ZSB0byBhIGJ1ZyBpbiBJRTExIHdoZXJlIGxhenkgbG9hZGluZyBjb21iaW5lZCB3aXRoIGF1dG9oZWlnaHQgcGx1Z2luIGNhdXNlcyBhIHdyb25nXG5cdFx0XHRjYWxjdWxhdGlvbiBvZiB0aGUgaGVpZ2h0IG9mIHRoZSBvd2wtaXRlbSB0aGF0IGJyZWFrcyBwYWdlIGxheW91dHNcblx0XHQgKi9cbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gLm93bC1sYXp5IHtcbiAgb3BhY2l0eTogMDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDQwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gLm93bC1sYXp5W3NyY149XCJcIl0sXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSAub3dsLWxhenk6bm90KFtzcmNdKSB7XG4gIG1heC1oZWlnaHQ6IDA7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIGltZy5vd2wtbGF6eSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbiAgICAgICAgICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xufVxuXG4vKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBWaWRlbyBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tcGxheS1pY29uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDgwcHg7XG4gIHdpZHRoOiA4MHB4O1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTQwcHg7XG4gIG1hcmdpbi10b3A6IC00MHB4O1xuICBiYWNrZ3JvdW5kOiB1cmwoXCJvd2wudmlkZW8ucGxheS5wbmdcIikgbm8tcmVwZWF0O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHotaW5kZXg6IDE7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDEwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDEwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxMDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMTAwbXMgZWFzZSwgLXdlYmtpdC10cmFuc2Zvcm0gMTAwbXMgZWFzZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXZpZGVvLXBsYXktaWNvbjpob3ZlciB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjMsIDEuMyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjMsIDEuMyk7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby1wbGF5aW5nIC5vd2wtdmlkZW8tdG4sXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tcGxheWluZyAub3dsLXZpZGVvLXBsYXktaWNvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby10biB7XG4gIG9wYWNpdHk6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBlYXNlO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tZnJhbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi8qXG4gKiBcdERlZmF1bHQgdGhlbWUgLSBPd2wgQ2Fyb3VzZWwgQ1NTIEZpbGVcbiAqL1xuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IFtjbGFzcyo9J293bC0nXSB7XG4gIGNvbG9yOiAjRkZGO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbjogNXB4O1xuICBwYWRkaW5nOiA0cHggN3B4O1xuICBiYWNrZ3JvdW5kOiAjRDZENkQ2O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IFtjbGFzcyo9J293bC0nXTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4Njk3OTE7XG4gIGNvbG9yOiAjRkZGO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1uYXYgLmRpc2FibGVkIHtcbiAgb3BhY2l0eTogMC41O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1uYXYuZGlzYWJsZWQgKyAub3dsLWRvdHMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtZG90cyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLm93bC10aGVtZSAub3dsLWRvdHMgLm93bC1kb3Qge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHpvb206IDE7XG4gICpkaXNwbGF5OiBpbmxpbmU7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1kb3RzIC5vd2wtZG90IHNwYW4ge1xuICB3aWR0aDogMTBweDtcbiAgaGVpZ2h0OiAxMHB4O1xuICBtYXJnaW46IDVweCA3cHg7XG4gIGJhY2tncm91bmQ6ICNENkQ2RDY7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IHZpc2libGU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAyMDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDIwMG1zIGVhc2U7XG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1kb3RzIC5vd2wtZG90LmFjdGl2ZSBzcGFuLFxuLm93bC10aGVtZSAub3dsLWRvdHMgLm93bC1kb3Q6aG92ZXIgc3BhbiB7XG4gIGJhY2tncm91bmQ6ICM4Njk3OTE7XG59XG5cbioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbnVsLFxub2wge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5hIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5zci1vbmx5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG59XG5cbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJBc3Npc3RhbnRcIiwgc2Fucy1zZXJpZjtcbn1cblxuYm9keS5mcm9udC1wYWdlID4gbWFpbixcbmJvZHkucHJvamVjdC1kZXRhaWwgPiBtYWluIHtcbiAgcGFkZGluZy10b3A6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMDtcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlcixcbmJvZHkucHJvamVjdC1kZXRhaWw6bm90KC5zY3JvbGxlZCkgLm1haW4taGVhZGVyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbmJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgPiBkaXYsXG5ib2R5LnByb2plY3QtZGV0YWlsOm5vdCguc2Nyb2xsZWQpIC5tYWluLWhlYWRlciA+IGRpdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlcjpiZWZvcmUsXG5ib2R5LnByb2plY3QtZGV0YWlsOm5vdCguc2Nyb2xsZWQpIC5tYWluLWhlYWRlcjpiZWZvcmUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNTFweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDA7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IGJvdHRvbSwgbGVmdCB0b3AsIGZyb20ocmdiYSgwLCAwLCAwLCAwKSksIHRvKHJnYmEoMCwgMCwgMCwgMC4zKSkpO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiYSgwLCAwLCAwLCAwKSAwJSwgcmdiYSgwLCAwLCAwLCAwLjMpIDEwMCUpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlciBoMSBhLFxuYm9keS5wcm9qZWN0LWRldGFpbDpub3QoLnNjcm9sbGVkKSAubWFpbi1oZWFkZXIgaDEgYSB7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG5ib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIGgxIGE6aG92ZXIsXG5ib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIGgxIGE6Zm9jdXMsXG5ib2R5LnByb2plY3QtZGV0YWlsOm5vdCguc2Nyb2xsZWQpIC5tYWluLWhlYWRlciBoMSBhOmhvdmVyLFxuYm9keS5wcm9qZWN0LWRldGFpbDpub3QoLnNjcm9sbGVkKSAubWFpbi1oZWFkZXIgaDEgYTpmb2N1cyB7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG59XG5cbmJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgLmhhbWJ1cmdlcjpub3QoLm9wZW4pIHNwYW4sXG5ib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIC5oYW1idXJnZXI6bm90KC5vcGVuKTpiZWZvcmUsXG5ib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIC5oYW1idXJnZXI6bm90KC5vcGVuKTphZnRlcixcbmJvZHkucHJvamVjdC1kZXRhaWw6bm90KC5zY3JvbGxlZCkgLm1haW4taGVhZGVyIC5oYW1idXJnZXI6bm90KC5vcGVuKSBzcGFuLFxuYm9keS5wcm9qZWN0LWRldGFpbDpub3QoLnNjcm9sbGVkKSAubWFpbi1oZWFkZXIgLmhhbWJ1cmdlcjpub3QoLm9wZW4pOmJlZm9yZSxcbmJvZHkucHJvamVjdC1kZXRhaWw6bm90KC5zY3JvbGxlZCkgLm1haW4taGVhZGVyIC5oYW1idXJnZXI6bm90KC5vcGVuKTphZnRlciB7XG4gIGJhY2tncm91bmQ6ICNGRkZGRkY7XG59XG5cbmJvZHkuZnJvbnQtcGFnZSA+IG1haW4gPiBzZWN0aW9uID4gZGl2IHtcbiAgcGFkZGluZzogMDtcbn1cblxuaDEsXG4uaDEge1xuICBmb250LWZhbWlseTogXCJBc3Npc3RhbnRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAyNXB4O1xufVxuXG5oMixcbi5oMiB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgZm9udC1zaXplOiAzMHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsaW5lLWhlaWdodDogMS4zMzMzM2VtO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5oMyxcbi5oMyB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsaW5lLWhlaWdodDogMS4zMzMzM2VtO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5oNSxcbi5oNSB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG5wIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogMS4yODU3MWVtO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5tYWluLWhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDU1cHg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAxMDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjk5KTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5sb2dnZWRpbiAubWFpbi1oZWFkZXIge1xuICB0b3A6IDMycHg7XG59XG5cbi5tYWluLWhlYWRlciBoMSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjA7XG59XG5cbi5tYWluLWhlYWRlciA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuXG4ubWFpbi1oZWFkZXIgLmhhbWJ1cmdlciB7XG4gIHdpZHRoOiAzMnB4O1xuICBoZWlnaHQ6IDMycHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHotaW5kZXg6IDIwO1xufVxuXG4ubWFpbi1oZWFkZXIgLmhhbWJ1cmdlcjpiZWZvcmUsXG4ubWFpbi1oZWFkZXIgLmhhbWJ1cmdlcjphZnRlcixcbi5tYWluLWhlYWRlciAuaGFtYnVyZ2VyIHNwYW4ge1xuICB3aWR0aDogMTZweDtcbiAgaGVpZ2h0OiAycHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxNXB4O1xuICBsZWZ0OiA4cHg7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQ6ICMxRTMxNDE7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xufVxuXG4ubWFpbi1oZWFkZXIgLmhhbWJ1cmdlcjpiZWZvcmUge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNnB4KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTZweCk7XG59XG5cbi5tYWluLWhlYWRlciAuaGFtYnVyZ2VyOmFmdGVyIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNnB4KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNnB4KTtcbn1cblxuLm1haW4taGVhZGVyIC5oYW1idXJnZXIub3BlbjpiZWZvcmUge1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG59XG5cbi5tYWluLWhlYWRlciAuaGFtYnVyZ2VyLm9wZW46YWZ0ZXIge1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbn1cblxuLm1haW4taGVhZGVyIC5oYW1idXJnZXIub3BlbiBzcGFuIHtcbiAgb3BhY2l0eTogMDtcbn1cblxuLm1haW4taGVhZGVyIGEge1xuICBjb2xvcjogIzFFMzE0MTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubWFpbi1oZWFkZXIgYTpob3Zlcixcbi5tYWluLWhlYWRlciBhOmZvY3VzIHtcbiAgY29sb3I6ICM3MDcwNzA7XG59XG5cbi5tYWluLWhlYWRlciBuYXYge1xuICBmb250LWZhbWlseTogXCJFeHBsZXR1cyBTYW5zXCIsIGN1cnNpdmU7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubWFpbi1oZWFkZXIgbmF2IGEge1xuICBjb2xvcjogIzFFMzE0MTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubWFpbi1oZWFkZXIgbmF2IGE6aG92ZXIsXG4ubWFpbi1oZWFkZXIgbmF2IGE6Zm9jdXMge1xuICBjb2xvcjogIzcwNzA3MDtcbn1cblxuLm1haW4taGVhZGVyIG5hdiB1bC5tZW51ID4gbGkgPiBhIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDEuMTNweDtcbn1cblxuLm1haW4taGVhZGVyIG5hdiB1bC5tZW51IGxpLmN1cnJlbnQtbWVudS1pdGVtID4gYSxcbi5tYWluLWhlYWRlciBuYXYgdWwubWVudSBsaS5jdXJyZW50LW1lbnUtYW5jZXN0b3IgPiBhIHtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbn1cblxuLm1haW4tZm9vdGVyIHtcbiAgcGFkZGluZzogMjBweCAwO1xufVxuXG4ubWFpbi1mb290ZXIgYSB7XG4gIGNvbG9yOiAjMUUzMTQxO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5tYWluLWZvb3RlciBhOmhvdmVyLFxuLm1haW4tZm9vdGVyIGE6Zm9jdXMge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLm1haW4tZm9vdGVyID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLm1haW4tZm9vdGVyIC5jb250YWN0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDEuNzNweDtcbiAgY29sb3I6ICMxRTMxNDE7XG59XG5cbi5tYWluLWZvb3RlciAuY29udGFjdCBwIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5tYWluLWZvb3RlciAuc29jaWFsIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ubWFpbi1mb290ZXIgLnNvY2lhbCBhIHtcbiAgd2lkdGg6IDI0cHg7XG4gIGhlaWdodDogMjRweDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG5cbi5tYWluLWZvb3RlciAuc29jaWFsIGEgc3ZnIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLm1haW4tZm9vdGVyIC5zb2NpYWwgYSBzcGFuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG59XG5cbi5mb290ZXItbG9nbyBzdmcge1xuICB3aWR0aDogODVweDtcbiAgaGVpZ2h0OiA5OXB4O1xuICBmaWxsOiAjMDcxNDRFO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYm9keSA+IG1haW4ge1xuICBwYWRkaW5nOiA1NXB4IDA7XG59XG5cbmJvZHkgPiBtYWluID4gc2VjdGlvbiB7XG4gIGNvbG9yOiAjMUUzMTQxO1xufVxuXG5ib2R5ID4gbWFpbiA+IHNlY3Rpb24gPiBkaXYge1xuICBtYXgtd2lkdGg6IDE2MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbmJvZHkgPiBtYWluID4gc2VjdGlvbi5iZy1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZDogIzFFMzE0MTtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIHBhZGRpbmc6IDYwcHggMDtcbn1cblxuLnNlY3Rpb24taW5uZXIge1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtaXRlbSBpbWcsXG4uaHAtbmF2aWdhdGlvbiBhIGltZyB7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIG1pbi13aWR0aDogMTAwJTtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuXG5Ac3VwcG9ydHMgKCgtby1vYmplY3QtZml0OiBjb3Zlcikgb3IgKG9iamVjdC1maXQ6IGNvdmVyKSkge1xuICAuaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLWl0ZW0gaW1nLFxuICAuaHAtbmF2aWdhdGlvbiBhIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB9XG59XG5cbi5ocC1zbGlkZXNob3cge1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtaXRlbSB7XG4gIGhlaWdodDogMTAwdmg7XG59XG5cbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtaXRlbSA+IGRpdiB7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLW5hdiBidXR0b24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYyg1MCUgLSA0N3B4KTtcbiAgd2lkdGg6IDQ2cHg7XG4gIGhlaWdodDogOTVweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2Fycm93LnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbn1cblxuLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1uYXYgYnV0dG9uIHNwYW4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbn1cblxuLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1uYXYgYnV0dG9uOmZvY3VzLFxuLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1uYXYgYnV0dG9uOmFjdGl2ZSB7XG4gIGJvcmRlcjogMDtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1uYXYgYnV0dG9uOmhvdmVyLFxuLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1uYXYgYnV0dG9uOmZvY3VzIHtcbiAgb3BhY2l0eTogLjU7XG59XG5cbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IC5vd2wtcHJldiB7XG4gIGxlZnQ6IDIwcHg7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuXG4uaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLW5hdiAub3dsLW5leHQge1xuICByaWdodDogMjBweDtcbn1cblxuLmhwLXNsaWRlc2hvdyAuc2Nyb2xsLWRvd24ge1xuICB3aWR0aDogNDZweDtcbiAgaGVpZ2h0OiA5NXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMjBweDtcbiAgbGVmdDogY2FsYyg1MCUgLSAxOHB4KTtcbiAgei1pbmRleDogMTA7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9hcnJvdy5zdmdcIik7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1pbmRlbnQ6IC05OTk5OTlweDtcbn1cblxuLmhwLXNsaWRlc2hvdyAuc2Nyb2xsLWRvd246aG92ZXIsXG4uaHAtc2xpZGVzaG93IC5zY3JvbGwtZG93bjpmb2N1cyB7XG4gIG9wYWNpdHk6IC41O1xufVxuXG4uaHAtbmF2aWdhdGlvbiBhIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmb250LXNpemU6IDUwcHg7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtc2hhZG93OiAwcHggNHB4IDdweCAjNzA3MDcwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgYmFja2dyb3VuZDogIzFFMzE0MTtcbn1cblxuLmhwLW5hdmlnYXRpb24gYSBzcGFuIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xufVxuXG4uaHAtbmF2aWdhdGlvbiBhIGltZyB7XG4gIHotaW5kZXg6IDA7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAtd2Via2l0LWZpbHRlcjogYmx1cigxOHB4KTtcbiAgICAgICAgICBmaWx0ZXI6IGJsdXIoMThweCk7XG59XG5cbkBzdXBwb3J0cyAoKC1vLW9iamVjdC1maXQ6IGNvdmVyKSBvciAob2JqZWN0LWZpdDogY292ZXIpKSB7XG4gIC5ocC1uYXZpZ2F0aW9uIGEgaW1nIHtcbiAgICB3aWR0aDogMTAzJTtcbiAgICBoZWlnaHQ6IDEwMyU7XG4gIH1cbn1cblxuLmhwLW5hdmlnYXRpb24gLmFjdGl2ZSBhIGltZyB7XG4gIC13ZWJraXQtZmlsdGVyOiBibHVyKDApO1xuICAgICAgICAgIGZpbHRlcjogYmx1cigwKTtcbn1cblxuLmNvbnRlbnQtZ3JpZCB7XG4gIG1hcmdpbjogMCAtNnB4O1xufVxuXG4uY29udGVudC1ncmlkIFtjbGFzc149XCJjb2xcIl0ge1xuICBwYWRkaW5nOiA2cHg7XG59XG5cbi5jb250ZW50LWdyaWQgcGljdHVyZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5jb250ZW50LWdyaWQgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbkBzdXBwb3J0cyAoKC1vLW9iamVjdC1maXQ6IGNvdmVyKSBvciAob2JqZWN0LWZpdDogY292ZXIpKSB7XG4gIC5jb250ZW50LWdyaWQgaW1nIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gIH1cbn1cblxuLm1hcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWJvdHRvbTogNzIlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5tYXAgaWZyYW1lIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG59XG5cbi5wcm9qZWN0LWhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC1oZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xufVxuXG4ucHJvamVjdC1oZXJvIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvamVjdC1oZXJvIC5wcm9qZWN0LXRpdGxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgdGV4dC1zaGFkb3c6IDAgMCAycHggIzAwMDAwMDtcbiAgcGFkZGluZy1ib3R0b206IDQ1cHg7XG59XG5cbi5wcm9qZWN0LWhlcm8gLnByb2plY3QtdGl0bGUgc3Bhbixcbi5wcm9qZWN0LWhlcm8gLnByb2plY3QtdGl0bGUgc21hbGwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnByb2plY3QtaGVybyAucHJvamVjdC10aXRsZSBzbWFsbCB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLnByb2plY3QtaGVybyAucHJvamVjdC10aXRsZSA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLmdyaWQtdGl0bGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAgMjRweCAzOHB4IDI0cHg7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdGV4dC1zaGFkb3c6IDBweCAwcHggMnB4ICMwMDAwMDA7XG59XG5cbi5ncmlkLXRpdGxlIGg0IHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uZ3JpZC10aXRsZSBzbWFsbCB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgbGluZS1oZWlnaHQ6IDEuMzMzMzNlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG59XG5cbi5wcm9qZWN0LW1haW4gPiBkaXYge1xuICBtYXgtd2lkdGg6IDE2MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbi5wcm9qZWN0LXN0YXRzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIDFmcjtcbiAgZ3JpZC1nYXA6IDVweCAyMHB4O1xuICBtYXJnaW4tdG9wOiAzZW07XG59XG5cbi5wcm9qZWN0LXN0YXRzIGR0IHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLnByb2plY3QtZ3JpZCB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbn1cblxuLnByb2plY3QtZ3JpZCA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLnByb2plY3QtZ3JpZCBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnByb2plY3QtZ3JpZCBhcnRpY2xlIHtcbiAgcGFkZGluZzogNnB4O1xufVxuXG4ucHJvamVjdC1ncmlkIGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjb2xvcjogI0ZGRkZGRjtcbn1cblxuLnByb2plY3QtZ3JpZCBhOmJlZm9yZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDE1MXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogMDtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgYm90dG9tLCBsZWZ0IHRvcCwgZnJvbShyZ2JhKDAsIDAsIDAsIDAuMykpLCB0byhyZ2JhKDAsIDAsIDAsIDApKSk7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCByZ2JhKDAsIDAsIDAsIDAuMykgMCUsIHJnYmEoMCwgMCwgMCwgMCkgMTAwJSk7XG59XG5cbi5wcm9qZWN0LWdyaWQgc21hbGwge1xuICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5wcm9qZWN0LWdyaWQgLmdyaWQtdGl0bGUge1xuICBwYWRkaW5nLWJvdHRvbTogNDhweDtcbn1cblxuLnByb2plY3QtZ3JpZC5hcmNoaXZlIHtcbiAgYmFja2dyb3VuZDogIzFFMzE0MTtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbi5wcm9qZWN0LWdyaWQtaW5uZXIge1xuICBwYWRkaW5nOiAwIDAgNzBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDAgLTZweDtcbn1cblxuLnByZXNzLWxpc3Rpbmcge1xuICBwYWRkaW5nOiA3MHB4IDA7XG59XG5cbi5wcmVzcy1saXN0aW5nID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnByZXNzLWxpc3RpbmcgLmFydGljbGVzIHtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMgYXJ0aWNsZSB7XG4gIG1hcmdpbi1ib3R0b206IDEuNGVtO1xufVxuXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMgYXJ0aWNsZSAuZGF0ZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbn1cblxuLnByZXNzLWxpc3RpbmcgLmFydGljbGVzIGFydGljbGUgc3BhbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMgYSB7XG4gIGNvbG9yOiAjMUUzMTQxO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5wcmVzcy1saXN0aW5nIC5hcnRpY2xlcyBhOmhvdmVyIHNwYW46bGFzdC1jaGlsZCxcbi5wcmVzcy1saXN0aW5nIC5hcnRpY2xlcyBhOmZvY3VzIHNwYW46bGFzdC1jaGlsZCB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4ub3V0bGV0LWdyaWQgdWwge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbjogLTEycHg7XG59XG5cbi5vdXRsZXQtZ3JpZCBsaSB7XG4gIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgICAtbXMtZmxleDogMCAwIDUwJTtcbiAgICAgICAgICBmbGV4OiAwIDAgNTAlO1xuICB3aWR0aDogNTAlO1xuICBwYWRkaW5nOiAxMnB4O1xufVxuXG4ub3V0bGV0LWdyaWQgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5vdXRsZXQtZ3JpZCBzcGFuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG59XG5cbi5vdXRsZXQtZ3JpZCBhIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3JkZXI6IDFweCBzb2xpZCAjREREREREO1xufVxuXG4ub3V0bGV0LWdyaWQgYTpob3Zlcixcbi5vdXRsZXQtZ3JpZCBhOmZvY3VzIHtcbiAgb3BhY2l0eTogLjI1O1xufVxuXG4ub3V0bGV0LWdyaWQudGF4LWFyY2hpdmUgYSB7XG4gIG9wYWNpdHk6IC4yNTtcbn1cblxuLm91dGxldC1ncmlkLnRheC1hcmNoaXZlIGE6aG92ZXIsXG4ub3V0bGV0LWdyaWQudGF4LWFyY2hpdmUgYTpmb2N1cyB7XG4gIG9wYWNpdHk6IC43NTtcbn1cblxuLm91dGxldC1ncmlkLnRheC1hcmNoaXZlIGxpLmFjdGl2ZSBhIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLnMtbmV3cyB7XG4gIHBhZGRpbmc6IDc1cHggMDtcbn1cblxuLm5ld3MtY2Fyb3VzZWwgYXJ0aWNsZSB7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgcGFkZGluZzogMXB4O1xufVxuXG4ubmV3cy1jYXJvdXNlbCBhcnRpY2xlIGEge1xuICBjb2xvcjogIzFFMzE0MTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogMjBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzFFMzE0MTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubmV3cy1jYXJvdXNlbCBhcnRpY2xlIGE6aG92ZXIsXG4ubmV3cy1jYXJvdXNlbCBhcnRpY2xlIGE6Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMwLCA0OSwgNjUsIDAuMik7XG59XG5cbi5uZXdzLWNhcm91c2VsIC5vd2wtaXRlbTpudGgtY2hpbGQoMm4pIGFydGljbGUgYSB7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBiYWNrZ3JvdW5kOiAjMUUzMTQxO1xufVxuXG4ubmV3cy1jYXJvdXNlbCAub3dsLWl0ZW06bnRoLWNoaWxkKDJuKSBhcnRpY2xlIGE6aG92ZXIsXG4ubmV3cy1jYXJvdXNlbCAub3dsLWl0ZW06bnRoLWNoaWxkKDJuKSBhcnRpY2xlIGE6Zm9jdXMge1xuICBjb2xvcjogIzFFMzE0MTtcbiAgYmFja2dyb3VuZDogcmdiYSgzMCwgNDksIDY1LCAwLjIpO1xufVxuXG4ubmV3cy1jYXJvdXNlbCAub3dsLXN0YWdlIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogc3RyZXRjaDtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBzdHJldGNoO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xufVxuXG4ubmV3cy1jYXJvdXNlbCBhcnRpY2xlLFxuLm5ld3MtY2Fyb3VzZWwgYSB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLm5ld3MtY2Fyb3VzZWwgLmRhdGUge1xuICBtYXJnaW4tYm90dG9tOiAuNWVtO1xufVxuXG4ucGVvcGxlID4gbWFpbiB7XG4gIHBhZGRpbmc6IDcwcHggMDtcbn1cblxuLnBlb3BsZS1ncmlkIGg0IHtcbiAgZm9udC1mYW1pbHk6IFwiRXhwbGV0dXMgU2Fuc1wiLCBjdXJzaXZlO1xufVxuXG4ucGVvcGxlLWdyaWQgPiBkaXYge1xuICBtYXgtd2lkdGg6IDE2MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbi5wZW9wbGUtZ3JpZCBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBlb3BsZS1ncmlkIC5ncmlkLXRpdGxlIHtcbiAgb3BhY2l0eTogMDtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDZweDtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGUgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5wZW9wbGUtZ3JpZCBhcnRpY2xlIGE6aG92ZXIgLmdyaWQtdGl0bGUsXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZSBhOmZvY3VzIC5ncmlkLXRpdGxlIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGUgYTpiZWZvcmUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNTFweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDA7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IGJvdHRvbSwgbGVmdCB0b3AsIGZyb20ocmdiYSgwLCAwLCAwLCAwLjMpKSwgdG8ocmdiYSgwLCAwLCAwLCAwKSkpO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiYSgwLCAwLCAwLCAwLjMpIDAlLCByZ2JhKDAsIDAsIDAsIDApIDEwMCUpO1xufVxuXG4ucGVvcGxlLWdyaWQtaW5uZXIge1xuICBwYWRkaW5nOiA2OHB4IDAgNzBweDtcbiAgbWFyZ2luOiAwIC02cHg7XG59XG5cbi5wZW9wbGUtYmlvIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBkaXNwbGF5OiBub25lO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbn1cblxuLnBlb3BsZS1iaW8gcCB7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBmb250LXNpemU6IDIxcHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjI4NTcxZW07XG59XG5cbi5wZW9wbGUtYmlvID4gZGl2IHtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogIzFFMzE0MTtcbiAgcGFkZGluZzogMThweDtcbn1cblxuLnBlb3BsZS1iaW8gYnV0dG9uIHtcbiAgd2lkdGg6IDI1cHg7XG4gIGhlaWdodDogMjVweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDM3cHg7XG4gIHJpZ2h0OiAzN3B4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjRkZGRkZGO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdGV4dC1pbmRlbnQ6IC05OTk5cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5wZW9wbGUtYmlvIGJ1dHRvbjpiZWZvcmUsXG4ucGVvcGxlLWJpbyBidXR0b246YWZ0ZXIge1xuICB3aWR0aDogMTQwJTtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5wZW9wbGUtYmlvIGJ1dHRvbjpiZWZvcmUge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoNDVkZWcpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoNDVkZWcpO1xufVxuXG4ucGVvcGxlLWJpbyBidXR0b246YWZ0ZXIge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKC00NWRlZyk7XG59XG5cbi5wZW9wbGUtYmlvIGJ1dHRvbjpob3Zlcixcbi5wZW9wbGUtYmlvIGJ1dHRvbjpmb2N1cyB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTtcbiAgYm9yZGVyLWNvbG9yOiAjMUUzMTQxO1xufVxuXG4ucGVvcGxlLWJpbyBidXR0b246aG92ZXI6YmVmb3JlLFxuLnBlb3BsZS1iaW8gYnV0dG9uOmhvdmVyOmFmdGVyLFxuLnBlb3BsZS1iaW8gYnV0dG9uOmZvY3VzOmJlZm9yZSxcbi5wZW9wbGUtYmlvIGJ1dHRvbjpmb2N1czphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxRTMxNDE7XG59XG5cbi5iaW8tdGl0bGUge1xuICB3aWR0aDogY2FsYygxMDAlIC0gMzVweCk7XG59XG5cbi5iaW8tdGl0bGUgcDpmaXJzdC1jaGlsZCB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbjogMDtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGUub3BlbiB7XG4gIHotaW5kZXg6IDEwO1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZS5vcGVuIC5wZW9wbGUtYmlvIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uZmVlZGJhY2sge1xuICBmb250LXNpemU6IDExcHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMzAsIDQ5LCA2NSwgMC44KTtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIHBhZGRpbmc6IDVweDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA5OTk5O1xuICByaWdodDogMTBweDtcbiAgYm90dG9tOiAxMHB4O1xufVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYldGcGJpNWpjM01pTENKemIzVnlZMlZ6SWpwYkltMWhhVzR1YzJOemN5SXNJaTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl2ZDJ3dVkyRnliM1Z6Wld3dmMzSmpMM05qYzNNdmIzZHNMbU5oY205MWMyVnNMbk5qYzNNaUxDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZiM2RzTG1OaGNtOTFjMlZzTDNOeVl5OXpZM056TDE5amIzSmxMbk5qYzNNaUxDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZiM2RzTG1OaGNtOTFjMlZzTDNOeVl5OXpZM056TDE5aGJtbHRZWFJsTG5OamMzTWlMQ0l1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12YjNkc0xtTmhjbTkxYzJWc0wzTnlZeTl6WTNOekwxOWhkWFJ2YUdWcFoyaDBMbk5qYzNNaUxDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZiM2RzTG1OaGNtOTFjMlZzTDNOeVl5OXpZM056TDE5c1lYcDViRzloWkM1elkzTnpJaXdpTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDI5M2JDNWpZWEp2ZFhObGJDOXpjbU12YzJOemN5OWZkbWxrWlc4dWMyTnpjeUlzSWk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5dmQyd3VZMkZ5YjNWelpXd3ZjM0pqTDNOamMzTXZiM2RzTG5Sb1pXMWxMbVJsWm1GMWJIUXVjMk56Y3lJc0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXZkMnd1WTJGeWIzVnpaV3d2YzNKakwzTmpjM012WDNSb1pXMWxMbVJsWm1GMWJIUXVjMk56Y3lJc0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXZkMnd1WTJGeWIzVnpaV3d2YzNKakwzTmpjM012WDNSb1pXMWxMbk5qYzNNaUxDSmlZWE5sTDE5MllYSnBZV0pzWlhNdWMyTnpjeUlzSW1KaGMyVXZYMjFwZUdsdWN5NXpZM056SWl3aVltRnpaUzlmY21WelpYUXVjMk56Y3lJc0ltSmhjMlV2WDJadmJuUnpMbk5qYzNNaUxDSnpkSEoxWTNSMWNtVXZYMkpoYzJVdWMyTnpjeUlzSW5OMGNuVmpkSFZ5WlM5amIzQjVMMTlpWVhObExuTmpjM01pTENKemRISjFZM1IxY21VdlkyOXdlUzlmYUdWaFpHbHVaM011YzJOemN5SXNJbk4wY25WamRIVnlaUzlvWldGa1pYSXZYMmhsWVdSbGNpNXpZM056SWl3aWMzUnlkV04wZFhKbEwyaGxZV1JsY2k5ZmJtRjJMbk5qYzNNaUxDSnpkSEoxWTNSMWNtVXZabTl2ZEdWeUwxOW1iMjkwWlhJdWMyTnpjeUlzSW5OMGNuVmpkSFZ5WlM5ZmNHRm5aUzV6WTNOeklpd2ljM1J5ZFdOMGRYSmxMMTltY205dWRDMXdZV2RsTG5OamMzTWlMQ0pqYjIxd2IyNWxiblJ6TDE5bmNtbGtMbk5qYzNNaUxDSmpiMjF3YjI1bGJuUnpMMTl0WVhBdWMyTnpjeUlzSW1abFpXUnpMM0J5YjJwbFkzUnpMMTlpWVhObExuTmpjM01pTENKbVpXVmtjeTl3Y21WemN5OWZZbUZ6WlM1elkzTnpJaXdpWm1WbFpITXZjR1Z2Y0d4bEwxOWlZWE5sTG5OamMzTWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTHk4Z1JWaFVSVkpPUVV3Z1UwRlRVMXh1UUdsdGNHOXlkQ0FuTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDI5M2JDNWpZWEp2ZFhObGJDOXpjbU12YzJOemN5OXZkMnd1WTJGeWIzVnpaV3d1YzJOemN5YzdYRzVBYVcxd2IzSjBJQ2N1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12YjNkc0xtTmhjbTkxYzJWc0wzTnlZeTl6WTNOekwyOTNiQzUwYUdWdFpTNWtaV1poZFd4MExuTmpjM01uTzF4dUx5OGdRa0ZUUlNCSlRWQlBVbFJUWEc1QWFXMXdiM0owSUNkaVlYTmxMMTkyWVhKcFlXSnNaWE1uTzF4dVFHbHRjRzl5ZENBblltRnpaUzlmYldsNGFXNXpKenRjYmtCcGJYQnZjblFnSjJKaGMyVXZYM0psYzJWMEp6dGNia0JwYlhCdmNuUWdKMkpoYzJVdlgyWnZiblJ6Snp0Y2JseHVMeThnVTFSU1ZVTlVWVkpGWEc1QWFXMXdiM0owSUNkemRISjFZM1IxY21VdlgySmhjMlVuTzF4dVhHNHZMeUJEVDAxUVQwNUZUbFJUWEc1QWFXMXdiM0owSUNkamIyMXdiMjVsYm5SekwxOW5jbWxrSnp0Y2JrQnBiWEJ2Y25RZ0oyTnZiWEJ2Ym1WdWRITXZYMjFoY0NjN1hHNWNiaTh2SUVaRlJVUlRYRzVBYVcxd2IzSjBJQ2RtWldWa2N5OXdjbTlxWldOMGN5OWZZbUZ6WlNjN1hHNUFhVzF3YjNKMElDZG1aV1ZrY3k5d2NtVnpjeTlmWW1GelpTYzdYRzVBYVcxd2IzSjBJQ2RtWldWa2N5OXdaVzl3YkdVdlgySmhjMlVuTzF4dVhHNHVabVZsWkdKaFkyc2dlMXh1SUNCbWIyNTBMWE5wZW1VNklERXhjSGc3WEc0Z0lHSmhZMnRuY205MWJtUTZJSEpuWW1Fb0pIQnlhVzFoY25rc0xqZ3BPMXh1SUNCamIyeHZjam9nSkhkb2FYUmxPMXh1SUNCd1lXUmthVzVuT2lBMWNIZzdYRzRnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjYmlBZ2VpMXBibVJsZURvZ09UazVPVHRjYmlBZ2NtbG5hSFE2SURFd2NIZzdYRzRnSUdKdmRIUnZiVG9nTVRCd2VEdGNibjFjYmlJc0lrQnBiWEJ2Y25RZ0oyTnZjbVVuTzF4dVFHbHRjRzl5ZENBbllXNXBiV0YwWlNjN1hHNUFhVzF3YjNKMElDZGhkWFJ2YUdWcFoyaDBKenRjYmtCcGJYQnZjblFnSjJ4aGVubHNiMkZrSnp0Y2JrQnBiWEJ2Y25RZ0ozWnBaR1Z2Snp0Y2JpSXNJaThxWEc0Z0tpQWdUM2RzSUVOaGNtOTFjMlZzSUMwZ1EyOXlaVnh1SUNvdlhHNHViM2RzTFdOaGNtOTFjMlZzSUh0Y2JseDBaR2x6Y0d4aGVUb2dibTl1WlR0Y2JseDBkMmxrZEdnNklERXdNQ1U3WEc1Y2RDMTNaV0pyYVhRdGRHRndMV2hwWjJoc2FXZG9kQzFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblE3WEc1Y2RDOHFJSEJ2YzJsMGFXOXVJSEpsYkdGMGFYWmxJR0Z1WkNCNkxXbHVaR1Y0SUdacGVDQjNaV0pyYVhRZ2NtVnVaR1Z5YVc1bklHWnZiblJ6SUdsemMzVmxJQ292WEc1Y2RIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibHgwZWkxcGJtUmxlRG9nTVR0Y2JseHVYSFF1YjNkc0xYTjBZV2RsSUh0Y2JseDBYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2RGeDBMVzF6TFhSdmRXTm9MV0ZqZEdsdmJqb2djR0Z1TFZrN1hHNWNkRngwZEc5MVkyZ3RZV04wYVc5dU9pQnRZVzVwY0hWc1lYUnBiMjQ3WEc1Y2RGeDBMVzF2ZWkxaVlXTnJabUZqWlMxMmFYTnBZbWxzYVhSNU9pQm9hV1JrWlc0N0lDOHFJR1pwZUNCbWFYSmxabTk0SUdGdWFXMWhkR2x2YmlCbmJHbDBZMmdnS2k5Y2JseDBmVnh1WEc1Y2RDNXZkMnd0YzNSaFoyVTZZV1owWlhJZ2UxeHVYSFJjZEdOdmJuUmxiblE2SUZ3aUxsd2lPMXh1WEhSY2RHUnBjM0JzWVhrNklHSnNiMk5yTzF4dVhIUmNkR05zWldGeU9pQmliM1JvTzF4dVhIUmNkSFpwYzJsaWFXeHBkSGs2SUdocFpHUmxianRjYmx4MFhIUnNhVzVsTFdobGFXZG9kRG9nTUR0Y2JseDBYSFJvWldsbmFIUTZJREE3WEc1Y2RIMWNibHh1WEhRdWIzZHNMWE4wWVdkbExXOTFkR1Z5SUh0Y2JseDBYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2RGeDBiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNibHgwWEhRdktpQm1hWGdnWm05eUlHWnNZWE5vYVc1bklHSmhZMnRuY205MWJtUWdLaTljYmx4MFhIUXRkMlZpYTJsMExYUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxNMlFvTUhCNExDQXdjSGdzSURCd2VDazdYRzVjZEgxY2JseHVYSFF1YjNkc0xYZHlZWEJ3WlhJc1hHNWNkQzV2ZDJ3dGFYUmxiWHRjYmx4MFhIUXRkMlZpYTJsMExXSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJqdGNibHgwWEhRdGJXOTZMV0poWTJ0bVlXTmxMWFpwYzJsaWFXeHBkSGs2SUdocFpHUmxianRjYmx4MFhIUXRiWE10WW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dVhIUmNkQzEzWldKcmFYUXRkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1V6WkNnd0xEQXNNQ2s3WEc1Y2RGeDBMVzF2ZWkxMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpUTmtLREFzTUN3d0tUdGNibHgwWEhRdGJYTXRkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1V6WkNnd0xEQXNNQ2s3WEc1Y2RIMWNibHh1WEhRdWIzZHNMV2wwWlcwZ2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JseDBYSFJ0YVc0dGFHVnBaMmgwT2lBeGNIZzdYRzVjZEZ4MFpteHZZWFE2SUd4bFpuUTdYRzVjZEZ4MExYZGxZbXRwZEMxaVlXTnJabUZqWlMxMmFYTnBZbWxzYVhSNU9pQm9hV1JrWlc0N1hHNWNkRngwTFhkbFltdHBkQzEwWVhBdGFHbG5hR3hwWjJoMExXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNibHgwWEhRdGQyVmlhMmwwTFhSdmRXTm9MV05oYkd4dmRYUTZJRzV2Ym1VN1hHNWNkSDFjYmx4MExtOTNiQzFwZEdWdElHbHRaeUI3WEc1Y2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNWNkRngwZDJsa2RHZzZJREV3TUNVN1hHNWNkSDFjYmx4dVhIUXViM2RzTFc1aGRpNWthWE5oWW14bFpDeGNibHgwTG05M2JDMWtiM1J6TG1ScGMyRmliR1ZrSUh0Y2JseDBYSFJrYVhOd2JHRjVPaUJ1YjI1bE8xeHVYSFI5WEc1Y2JseDBMbTkzYkMxdVlYWWdMbTkzYkMxd2NtVjJMRnh1WEhRdWIzZHNMVzVoZGlBdWIzZHNMVzVsZUhRc1hHNWNkQzV2ZDJ3dFpHOTBJSHRjYmx4MFhIUmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNWNkRngwTFhkbFltdHBkQzExYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MFhIUXRhMmgwYld3dGRYTmxjaTF6Wld4bFkzUTZJRzV2Ym1VN1hHNWNkRngwTFcxdmVpMTFjMlZ5TFhObGJHVmpkRG9nYm05dVpUdGNibHgwWEhRdGJYTXRkWE5sY2kxelpXeGxZM1E2SUc1dmJtVTdYRzVjZEZ4MGRYTmxjaTF6Wld4bFkzUTZJRzV2Ym1VN1hHNWNkSDFjYmx4dVhIUXViM2RzTFc1aGRpQmlkWFIwYjI0dWIzZHNMWEJ5WlhZc1hHNWNkQzV2ZDJ3dGJtRjJJR0oxZEhSdmJpNXZkMnd0Ym1WNGRDeGNibHgwWW5WMGRHOXVMbTkzYkMxa2IzUWdlMXh1WEhSY2RHSmhZMnRuY205MWJtUTZJRzV2Ym1VN1hHNWNkRngwWTI5c2IzSTZJR2x1YUdWeWFYUTdYRzVjZEZ4MFltOXlaR1Z5T2lCdWIyNWxPMXh1WEhSY2RIQmhaR1JwYm1jNk1DRnBiWEJ2Y25SaGJuUTdYRzVjZEZ4MFptOXVkRG9nYVc1b1pYSnBkRHRjYmx4MGZWeHVYRzVjZENZdWIzZHNMV3h2WVdSbFpDQjdYRzVjZEZ4MFpHbHpjR3hoZVRvZ1lteHZZMnM3WEc1Y2RIMWNibHh1WEhRbUxtOTNiQzFzYjJGa2FXNW5JSHRjYmx4MFhIUnZjR0ZqYVhSNU9pQXdPMXh1WEhSY2RHUnBjM0JzWVhrNklHSnNiMk5yTzF4dVhIUjlYRzVjYmx4MEppNXZkMnd0YUdsa1pHVnVJSHRjYmx4MFhIUnZjR0ZqYVhSNU9pQXdPMXh1WEhSOVhHNWNibHgwSmk1dmQyd3RjbVZtY21WemFDQXViM2RzTFdsMFpXMGdlMXh1WEhSY2RIWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJqdGNibHgwZlZ4dVhHNWNkQ1l1YjNkc0xXUnlZV2NnTG05M2JDMXBkR1Z0SUh0Y2JseDBYSFIwYjNWamFDMWhZM1JwYjI0NklIQmhiaTE1TzF4dVhIUmNkQzEzWldKcmFYUXRkWE5sY2kxelpXeGxZM1E2SUc1dmJtVTdYRzVjZEZ4MExXMXZlaTExYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MFhIUXRiWE10ZFhObGNpMXpaV3hsWTNRNklHNXZibVU3WEc1Y2RGeDBkWE5sY2kxelpXeGxZM1E2SUc1dmJtVTdYRzVjZEgxY2JseHVYSFFtTG05M2JDMW5jbUZpSUh0Y2JseDBYSFJqZFhKemIzSTZJRzF2ZG1VN1hHNWNkRngwWTNWeWMyOXlPaUJuY21GaU8xeHVYSFI5WEc1Y2JseDBKaTV2ZDJ3dGNuUnNJSHRjYmx4MFhIUmthWEpsWTNScGIyNDZJSEowYkR0Y2JseDBmVnh1WEc1Y2RDWXViM2RzTFhKMGJDQXViM2RzTFdsMFpXMGdlMXh1WEhSY2RHWnNiMkYwT2lCeWFXZG9kRHRjYmx4MGZWeHVmVnh1WEc0dktpQk9ieUJLY3lBcUwxeHVMbTV2TFdweklDNXZkMnd0WTJGeWIzVnpaV3dnZTF4dVhIUmthWE53YkdGNU9pQmliRzlqYXp0Y2JuMWNiaUlzSWk4cVhHNGdLaUFnVDNkc0lFTmhjbTkxYzJWc0lDMGdRVzVwYldGMFpTQlFiSFZuYVc1Y2JpQXFMMXh1TG05M2JDMWpZWEp2ZFhObGJIdGNibHgwTG1GdWFXMWhkR1ZrSUh0Y2JseDBYSFJoYm1sdFlYUnBiMjR0WkhWeVlYUnBiMjQ2SURFd01EQnRjenRjYmx4MFhIUmhibWx0WVhScGIyNHRabWxzYkMxdGIyUmxPaUJpYjNSb08xeHVYSFI5WEc1Y2RDNXZkMnd0WVc1cGJXRjBaV1F0YVc0Z2UxeHVYSFJjZEhvdGFXNWtaWGc2SURBN1hHNWNkSDFjYmx4MExtOTNiQzFoYm1sdFlYUmxaQzF2ZFhRZ2UxeHVYSFJjZEhvdGFXNWtaWGc2SURFN1hHNWNkSDFjYmx4MExtWmhaR1ZQZFhRZ2UxeHVYSFJjZEdGdWFXMWhkR2x2YmkxdVlXMWxPaUJtWVdSbFQzVjBPMXh1WEhSOVhHNTlYRzVjYmtCclpYbG1jbUZ0WlhNZ1ptRmtaVTkxZENCN1hHNWNkREFsSUh0Y2JseDBYSFJ2Y0dGamFYUjVPaUF4TzF4dVhIUjlYRzVjYmx4ME1UQXdKU0I3WEc1Y2RGeDBiM0JoWTJsMGVUb2dNRHRjYmx4MGZWeHVmVnh1SWl3aUx5cGNiaUFxSUZ4MFQzZHNJRU5oY205MWMyVnNJQzBnUVhWMGJ5QklaV2xuYUhRZ1VHeDFaMmx1WEc0Z0tpOWNibHh1TG05M2JDMW9aV2xuYUhRZ2UxeHVYSFIwY21GdWMybDBhVzl1T2lCb1pXbG5hSFFnTlRBd2JYTWdaV0Z6WlMxcGJpMXZkWFE3WEc1OVhHNGlMQ0l2S2x4dUlDb2dYSFJQZDJ3Z1EyRnliM1Z6Wld3Z0xTQk1ZWHA1SUV4dllXUWdVR3gxWjJsdVhHNGdLaTljYmx4dUxtOTNiQzFqWVhKdmRYTmxiQ0I3WEc1Y2RDNXZkMnd0YVhSbGJTQjdYRzVjZEZ4MExtOTNiQzFzWVhwNUlIdGNibHgwWEhSY2RGeDBiM0JoWTJsMGVUb2dNRHRjYmx4MFhIUmNkRngwZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBME1EQnRjeUJsWVhObE8xeHVYSFJjZEgxY2JseHVYSFJjZEM4cUtseHVYSFJjZEZ4MFZHaHBjeUJwY3lCcGJuUnliMlIxWTJWa0lHUjFaU0IwYnlCaElHSjFaeUJwYmlCSlJURXhJSGRvWlhKbElHeGhlbmtnYkc5aFpHbHVaeUJqYjIxaWFXNWxaQ0IzYVhSb0lHRjFkRzlvWldsbmFIUWdjR3gxWjJsdUlHTmhkWE5sY3lCaElIZHliMjVuWEc1Y2RGeDBYSFJqWVd4amRXeGhkR2x2YmlCdlppQjBhR1VnYUdWcFoyaDBJRzltSUhSb1pTQnZkMnd0YVhSbGJTQjBhR0YwSUdKeVpXRnJjeUJ3WVdkbElHeGhlVzkxZEhOY2JseDBYSFFnS2k5Y2JseDBYSFF1YjNkc0xXeGhlbmxiYzNKalhqMWNJbHdpWFN3Z0xtOTNiQzFzWVhwNU9tNXZkQ2hiYzNKalhTa2dlMXh1WEhSY2RGeDBiV0Y0TFdobGFXZG9kRG9nTUR0Y2JseDBYSFI5WEc1Y2JseDBYSFJwYldjdWIzZHNMV3hoZW5rZ2UxeHVYSFJjZEZ4MGRISmhibk5tYjNKdExYTjBlV3hsT2lCd2NtVnpaWEoyWlMwelpEdGNibHgwWEhSOVhHNWNkSDFjYm4xY2JseHVJaXdpSkc5M2JDMXBiV0ZuWlMxd1lYUm9PaUJjSWx3aUlDRmtaV1poZFd4ME8xeHVYRzR2S2x4dUlDb2dYSFJQZDJ3Z1EyRnliM1Z6Wld3Z0xTQldhV1JsYnlCUWJIVm5hVzVjYmlBcUwxeHVYRzR1YjNkc0xXTmhjbTkxYzJWc2UxeHVYSFF1YjNkc0xYWnBaR1Z2TFhkeVlYQndaWElnZTF4dVhIUmNkSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmx4MFhIUm9aV2xuYUhRNklERXdNQ1U3WEc1Y2RGeDBZbUZqYTJkeWIzVnVaRG9nSXpBd01EdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGRtbGtaVzh0Y0d4aGVTMXBZMjl1SUh0Y2JseDBYSFJ3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc1Y2RGeDBhR1ZwWjJoME9pQTRNSEI0TzF4dVhIUmNkSGRwWkhSb09pQTRNSEI0TzF4dVhIUmNkR3hsWm5RNklEVXdKVHRjYmx4MFhIUjBiM0E2SURVd0pUdGNibHgwWEhSdFlYSm5hVzR0YkdWbWREb2dMVFF3Y0hnN1hHNWNkRngwYldGeVoybHVMWFJ2Y0RvZ0xUUXdjSGc3WEc1Y2RGeDBZbUZqYTJkeWIzVnVaRG9nZFhKc0tGd2lJM3NrYjNkc0xXbHRZV2RsTFhCaGRHaDliM2RzTG5acFpHVnZMbkJzWVhrdWNHNW5YQ0lwSUc1dkxYSmxjR1ZoZER0Y2JseDBYSFJqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzVjZEZ4MGVpMXBibVJsZURvZ01UdGNibHgwWEhRdGQyVmlhMmwwTFdKaFkydG1ZV05sTFhacGMybGlhV3hwZEhrNklHaHBaR1JsYmp0Y2JseDBYSFIwY21GdWMybDBhVzl1T2lCMGNtRnVjMlp2Y20wZ01UQXdiWE1nWldGelpUdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGRtbGtaVzh0Y0d4aGVTMXBZMjl1T21odmRtVnlJSHRjYmx4MFhIUjBjbUZ1YzJadmNtMDZJSE5qWVd4bEtERXVNeXdnTVM0ektUdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGRtbGtaVzh0Y0d4aGVXbHVaeUF1YjNkc0xYWnBaR1Z2TFhSdUxGeHVYSFF1YjNkc0xYWnBaR1Z2TFhCc1lYbHBibWNnTG05M2JDMTJhV1JsYnkxd2JHRjVMV2xqYjI0Z2UxeHVYSFJjZEdScGMzQnNZWGs2SUc1dmJtVTdYRzVjZEgxY2JseHVYSFF1YjNkc0xYWnBaR1Z2TFhSdUlIdGNibHgwWEhSdmNHRmphWFI1T2lBd08xeHVYSFJjZEdobGFXZG9kRG9nTVRBd0pUdGNibHgwWEhSaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQmpaVzUwWlhJZ1kyVnVkR1Z5TzF4dVhIUmNkR0poWTJ0bmNtOTFibVF0Y21Wd1pXRjBPaUJ1YnkxeVpYQmxZWFE3WEc1Y2RGeDBZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQmpiMjUwWVdsdU8xeHVYSFJjZEhSeVlXNXphWFJwYjI0NklHOXdZV05wZEhrZ05EQXdiWE1nWldGelpUdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGRtbGtaVzh0Wm5KaGJXVWdlMXh1WEhSY2RIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibHgwWEhSNkxXbHVaR1Y0T2lBeE8xeHVYSFJjZEdobGFXZG9kRG9nTVRBd0pUdGNibHgwWEhSM2FXUjBhRG9nTVRBd0pUdGNibHgwZlZ4dWZWeHVJaXdpUUdsdGNHOXlkQ0JjSW5Sb1pXMWxMbVJsWm1GMWJIUmNJanNpTENJdktseHVJQ29nWEhSRVpXWmhkV3gwSUhSb1pXMWxJQzBnVDNkc0lFTmhjbTkxYzJWc0lFTlRVeUJHYVd4bFhHNGdLaTljYmx4dUpHTnZiRzl5TFdKaGMyVTZYSFJjZEZ4MEl6ZzJPVGM1TVNBaFpHVm1ZWFZzZER0Y2JpUmpiMnh2Y2kxM2FHbDBaVHBjZEZ4MFhIUWpSa1pHSUNGa1pXWmhkV3gwTzF4dUpHTnZiRzl5TFdkeVlYazZYSFJjZEZ4MEkwUTJSRFpFTmlBaFpHVm1ZWFZzZER0Y2JseHVMeTl1WVhaY2JseHVKRzVoZGkxamIyeHZjam9nWEhSY2RGeDBKR052Ykc5eUxYZG9hWFJsSUNGa1pXWmhkV3gwTzF4dUpHNWhkaTFqYjJ4dmNpMW9iM1psY2pwY2RGeDBKR052Ykc5eUxYZG9hWFJsSUNGa1pXWmhkV3gwTzF4dUpHNWhkaTFtYjI1MExYTnBlbVU2SUZ4MFhIUXhOSEI0SUNGa1pXWmhkV3gwTzF4dUpHNWhkaTF5YjNWdVpHVmtPaUJjZEZ4MFhIUXpjSGdnSVdSbFptRjFiSFE3WEc0a2JtRjJMVzFoY21kcGJqb2dYSFJjZEZ4ME5YQjRJQ0ZrWldaaGRXeDBPMXh1Skc1aGRpMXdZV1JrYVc1bk9pQmNkRngwWEhRMGNIZ2dOM0I0SUNGa1pXWmhkV3gwTzF4dUpHNWhkaTFpWVdOclozSnZkVzVrT2lCY2RGeDBKR052Ykc5eUxXZHlZWGtnSVdSbFptRjFiSFE3WEc0a2JtRjJMV0poWTJ0bmNtOTFibVF0YUc5MlpYSTZYSFFrWTI5c2IzSXRZbUZ6WlNBaFpHVm1ZWFZzZER0Y2JpUnVZWFl0WkdsellXSnNaV1F0YjNCaFkybDBlVG9nWEhRd0xqVWdJV1JsWm1GMWJIUTdYRzVjYmk4dlpHOTBjMXh1WEc0a1pHOTBMWGRwWkhSb09seDBYSFJjZEZ4ME1UQndlQ0FoWkdWbVlYVnNkRHRjYmlSa2IzUXRhR1ZwWjJoME9seDBYSFJjZERFd2NIZ2dJV1JsWm1GMWJIUTdYRzRrWkc5MExYSnZkVzVrWldRNlhIUmNkRngwTXpCd2VDQWhaR1ZtWVhWc2REdGNiaVJrYjNRdGJXRnlaMmx1T2lCY2RGeDBYSFExY0hnZ04zQjRJQ0ZrWldaaGRXeDBPMXh1SkdSdmRDMWlZV05yWjNKdmRXNWtPbHgwWEhRa1kyOXNiM0l0WjNKaGVTQWhaR1ZtWVhWc2REdGNiaVJrYjNRdFltRmphMmR5YjNWdVpDMWhZM1JwZG1VNlhIUWtZMjlzYjNJdFltRnpaU0FoWkdWbVlYVnNkRHRjYmx4dVFHbHRjRzl5ZENBbmRHaGxiV1VuTzF4dUlpd2lYRzR1YjNkc0xYUm9aVzFsSUh0Y2JseDBMeThnVTNSNWJHbHVaeUJPWlhoMElHRnVaQ0JRY21WMklHSjFkSFJ2Ym5OY2JseDBMbTkzYkMxdVlYWWdlMXh1WEhSY2RHMWhjbWRwYmkxMGIzQTZJREV3Y0hnN1hHNWNkRngwZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dVhIUmNkQzEzWldKcmFYUXRkR0Z3TFdocFoyaHNhV2RvZEMxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN1hHNWNibHgwWEhSYlkyeGhjM01xUFNkdmQyd3RKMTBnZTF4dVhIUmNkRngwWTI5c2IzSTZJQ1J1WVhZdFkyOXNiM0k3WEc1Y2RGeDBYSFJtYjI1MExYTnBlbVU2SUNSdVlYWXRabTl1ZEMxemFYcGxPMXh1WEhSY2RGeDBiV0Z5WjJsdU9pQWtibUYyTFcxaGNtZHBianRjYmx4MFhIUmNkSEJoWkdScGJtYzZJQ1J1WVhZdGNHRmtaR2x1Wnp0Y2JseDBYSFJjZEdKaFkydG5jbTkxYm1RNklDUnVZWFl0WW1GamEyZHliM1Z1WkR0Y2JseDBYSFJjZEdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNibHgwWEhSY2RHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JseDBYSFJjZEdKdmNtUmxjaTF5WVdScGRYTTZJRE53ZUR0Y2JseHVYSFJjZEZ4MEpqcG9iM1psY2lCN1hHNWNkRngwWEhSY2RHSmhZMnRuY205MWJtUTZJQ1J1WVhZdFltRmphMmR5YjNWdVpDMW9iM1psY2p0Y2JseDBYSFJjZEZ4MFkyOXNiM0k2Skc1aGRpMWpiMnh2Y2kxb2IzWmxjanRjYmx4MFhIUmNkRngwZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgxY2JseDBYSFF1WkdsellXSnNaV1FnZTF4dVhIUmNkRngwYjNCaFkybDBlVG9nSkc1aGRpMWthWE5oWW14bFpDMXZjR0ZqYVhSNU8xeHVYSFJjZEZ4MFkzVnljMjl5T2lCa1pXWmhkV3gwTzF4dVhIUmNkSDFjYmx4MGZWeHVYRzVjZEM4dklGTjBlV3hwYm1jZ1pHOTBjMXh1WEhRdWIzZHNMVzVoZGk1a2FYTmhZbXhsWkNBcklDNXZkMnd0Wkc5MGN5QjdYRzVjZEZ4MGJXRnlaMmx1TFhSdmNEb2dNVEJ3ZUR0Y2JseDBmVnh1WEc1Y2RDNXZkMnd0Wkc5MGN5QjdYRzVjZEZ4MGRHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVYSFJjZEMxM1pXSnJhWFF0ZEdGd0xXaHBaMmhzYVdkb2RDMWpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUTdYRzVjYmx4MFhIUXViM2RzTFdSdmRDQjdYRzVjZEZ4MFhIUmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc1Y2RGeDBYSFI2YjI5dE9pQXhPMXh1WEhSY2RGeDBLbVJwYzNCc1lYazZJR2x1YkdsdVpUdGNibHh1WEhSY2RGeDBjM0JoYmlCN1hHNWNkRngwWEhSY2RIZHBaSFJvT2lBa1pHOTBMWGRwWkhSb08xeHVYSFJjZEZ4MFhIUm9aV2xuYUhRNklDUmtiM1F0YUdWcFoyaDBPMXh1WEhSY2RGeDBYSFJ0WVhKbmFXNDZJQ1JrYjNRdGJXRnlaMmx1TzF4dVhIUmNkRngwWEhSaVlXTnJaM0p2ZFc1a09pQWtaRzkwTFdKaFkydG5jbTkxYm1RN1hHNWNkRngwWEhSY2RHUnBjM0JzWVhrNklHSnNiMk5yTzF4dVhIUmNkRngwWEhRdGQyVmlhMmwwTFdKaFkydG1ZV05sTFhacGMybGlhV3hwZEhrNklIWnBjMmxpYkdVN1hHNWNkRngwWEhSY2RIUnlZVzV6YVhScGIyNDZJRzl3WVdOcGRIa2dNakF3YlhNZ1pXRnpaVHRjYmx4MFhIUmNkRngwWW05eVpHVnlMWEpoWkdsMWN6b2dKR1J2ZEMxeWIzVnVaR1ZrTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhRbUxtRmpkR2wyWlN4Y2JseDBYSFJjZENZNmFHOTJaWElnZTF4dVhIUmNkRngwWEhSemNHRnVJSHRjYmx4MFhIUmNkRngwWEhSaVlXTnJaM0p2ZFc1a09pQWtaRzkwTFdKaFkydG5jbTkxYm1RdFlXTjBhWFpsTzF4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSOVhHNWNkRngwZlZ4dVhIUjlYRzU5WEc0aUxDSXZMeUJUVUVGRFNVNUhYRzRrYlhoWE9pQXhOakF3Y0hnN1hHNGtaM1YwZEdWeU9pQXlNSEI0TzF4dVhHNHZMeUJEVDB4UFVsTmNiaVJpYkdGamF6b2dJekF3TURBd01EdGNiaVIzYUdsMFpUb2dJMFpHUmtaR1JqdGNibHh1SkhCeWFXMWhjbms2SUNNeFJUTXhOREU3WEc0a2MyVmpiMjVrWVhKNU9pQWpOekEzTURjd08xeHVYRzRrWVdOalpXNTBMVEU2SUNNd056RTBORVU3WEc1Y2JpOHZJRVpQVGxSVFhHNGthR1ZoWkdsdVowWkdPaUFuUlhod2JHVjBkWE1nVTJGdWN5Y3NJR04xY25OcGRtVTdYRzRrWTI5d2VVWkdPaUFuUVhOemFYTjBZVzUwSnl3Z2MyRnVjeTF6WlhKcFpqdGNiaVJzZERvZ016QXdPMXh1SkhKbFp6b2dOREF3TzF4dUpHSnZiR1E2SURjd01EdGNibHh1THk4Z1FsSkZRVXRRVDBsT1ZGTmNiaVJ0WldScFlWaHpPaUJjSW5OamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dNemMxY0hncFhDSTdYRzRrYldWa2FXRlFhRzl1WlRvZ1hDSnpZM0psWlc0Z1lXNWtJQ2h0WVhndGQybGtkR2c2SURjMk55NDVjSGdwWENJN1hHNGtiV1ZrYVdGVVlXSnNaWFE2SUZ3aWMyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUEzTmpod2VDbGNJanRjYmlSdFpXUnBZVlJoWW14bGRFOXViSGs2SUZ3aWMyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUEzTmpod2VDa2dZVzVrSUNodFlYZ3RkMmxrZEdnNklERXdNalF1T1hCNEtWd2lPMXh1SkcxbFpHbGhWRzluWjJ4bFNHVmhaR1Z5T2lCY0luTmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTVRBeU5DNDVjSGdwWENJN1hHNGtiV1ZrYVdGRVpYTnJkRzl3T2lCY0luTmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nTVRBeU5YQjRLVndpTzF4dUpHMWxaR2xoUm5Wc2JEb2dYQ0p6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklDTjdKRzE0VjMwcFhDSTdYRzVjYmk4dklFUkpUVVZPVTBsUFRsTmNiaVJvWldGa1pYSklaV2xuYUhSTk9pQTFOWEI0TzF4dUpHaGxZV1JsY2tobGFXZG9kRG9nT0RCd2VEdGNiaUlzSWtCdGFYaHBiaUJqYjI1MFpXNTBWMmxrZEdnZ2UxeHVJQ0J0WVhndGQybGtkR2c2SUNSdGVGYzdYRzRnSUcxaGNtZHBiam9nWVhWMGJ6dGNiaUFnY0dGa1pHbHVaem9nTUNBa1ozVjBkR1Z5TzF4dWZWeHVYRzVBYldsNGFXNGdhRzkyWlhJZ2UxeHVJQ0FtT21odmRtVnlMRnh1SUNBbU9tWnZZM1Z6SUh0Y2JpQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ2ZWeHVmVnh1WEc1QWJXbDRhVzRnYzNKUGJteDVJSHRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0IzYVdSMGFEb2dNWEI0TzF4dUlDQm9aV2xuYUhRNklERndlRHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnYldGeVoybHVPaUF0TVhCNE8xeHVJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNCamJHbHdPaUJ5WldOMEtEQXNNQ3d3TERBcE8xeHVJQ0JpYjNKa1pYSTZJREE3WEc1OVhHNWNia0J0YVhocGJpQnBiV2REYjNabGNpQjdYRzRnSUcxcGJpMW9aV2xuYUhRNklERXdNQ1U3WEc0Z0lHMXBiaTEzYVdSMGFEb2dNVEF3SlR0Y2JpQWdkMmxrZEdnNklHRjFkRzg3WEc0Z0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lHMWhjbWRwYmpvZ01EdGNibHh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSFJ2Y0RvZ05UQWxPMXh1SUNCc1pXWjBPaUExTUNVN1hHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0MwMU1DVXNMVFV3SlNrN1hHNWNiaUFnUUhOMWNIQnZjblJ6SUNodlltcGxZM1F0Wm1sME9pQmpiM1psY2lrZ2UxeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnSUNCdlltcGxZM1F0Wm1sME9pQmpiM1psY2p0Y2JpQWdmVnh1ZlZ4dUlpd2lLaUI3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdZbTl5WkdWeU9pQXdPMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1ZlZ4dVhHNTFiQ3hjYm05c0lIdGNiaUFnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjYm4xY2JseHVZU0I3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1qVnpPMXh1SUNBdkx5QjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1OVhHNWNiaTV6Y2kxdmJteDVJSHRjYmlBZ1FHbHVZMngxWkdVZ2MzSlBibXg1TzF4dWZWeHVYRzV6ZEhKdmJtY2dlMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dKR0p2YkdRN1hHNTlYRzVjYm1KdlpIa2dlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dKR052Y0hsR1JqdGNibjFjYmlJc0lrQnBiWEJ2Y25RZ2RYSnNLQ2RvZEhSd2N6b3ZMMlp2Ym5SekxtZHZiMmRzWldGd2FYTXVZMjl0TDJOemN6OW1ZVzFwYkhrOVFYTnphWE4wWVc1ME9qTXdNQ3cwTURBc056QXdmRVY0Y0d4bGRIVnpLMU5oYm5NNk5EQXdMRGN3TUNaa2FYTndiR0Y1UFhOM1lYQW5LVHRjYmlJc0ltSnZaSGtnZTF4dUlDQW1MbVp5YjI1MExYQmhaMlVzWEc0Z0lDWXVjSEp2YW1WamRDMWtaWFJoYVd3Z2UxeHVJQ0FnSUQ0Z2JXRnBiaUI3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01EdGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNBZ0lIb3RhVzVrWlhnNklEQTdYRzRnSUNBZ2ZTQWdJQ0JjYmlBZ2ZWeHVJQ0FtTG1aeWIyNTBMWEJoWjJVc1hHNGdJQ1l1Y0hKdmFtVmpkQzFrWlhSaGFXdzZibTkwS0M1elkzSnZiR3hsWkNrZ2UxeHVYRzRnSUNBZ0lDNXRZV2x1TFdobFlXUmxjaUI3WEc0Z0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RISmhibk53WVhKbGJuUTdYRzRnSUNBZ0lDQWdQaUJrYVhZZ2UxeHVJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lDQWdJQ0FnZWkxcGJtUmxlRG9nTVR0Y2JpQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0pqcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURFMU1YQjRPMXh1SUNBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJQ0FnSUNBZ2RHOXdPaUF3TzF4dUlDQWdJQ0FnSUNBZ2JHVm1kRG9nTUR0Y2JpQWdJQ0FnSUNBZ0lIb3RhVzVrWlhnNklEQTdYRzRnSUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nYkdsdVpXRnlMV2R5WVdScFpXNTBLREJrWldjc2NtZGlZU2drWW14aFkyc3NNQ2tnTUNVc0lISm5ZbUVvSkdKc1lXTnJMQzR6S1NBeE1EQWxLVHRjYmlBZ0lDQWdJQ0FnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TWpWek8xeHVJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJR2d4SUdFZ2UxeHVJQ0FnSUNBZ0lDQWdZMjlzYjNJNklDUjNhR2wwWlR0Y2JseHVJQ0FnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdhRzkyWlhJZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2djbWRpWVNna2QyaHBkR1VzTGpRcE8xeHVJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVlJ2WjJkc1pVaGxZV1JsY24wZ2UxeHVJQ0FnSUNBZ0lDQWdJQzV2Y0dWdUlHZ3hJR0VnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklDUndjbWx0WVhKNU8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCb2IzWmxjaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQnlaMkpoS0NSd2NtbHRZWEo1TEM0MEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnUUcxbFpHbGhJQ043SkcxbFpHbGhSR1Z6YTNSdmNIMGdlMXh1SUNBZ0lDQWdJQ0FnWVN4Y2JpQWdJQ0FnSUNBZ0lITndZVzRnZTF4dUlDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nY21kaVlTZ2tkMmhwZEdVc0xqUXBPMXh1SUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnTG1oaGJXSjFjbWRsY2pwdWIzUW9MbTl3Wlc0cElIdGNiaUFnSUNBZ0lDQWdJSE53WVc0c1hHNGdJQ0FnSUNBZ0lDQW1PbUpsWm05eVpTeGNiaUFnSUNBZ0lDQWdJQ1k2WVdaMFpYSWdlMXh1SUNBZ0lDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQWtkMmhwZEdVN1hHNGdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdmVnh1SUNBZ0lDQjlYRzRnSUNCOVhHNWNiaUFnSUNZdVpuSnZiblF0Y0dGblpTQjdYRzRnSUNBZ0lDQStJRzFoYVc0Z1BpQnpaV04wYVc5dUlENGdaR2wySUh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnSUNBZ0lIMWNiaUFnSUgxY2JuMWNibHh1UUdsdGNHOXlkQ0FuWTI5d2VTOWZZbUZ6WlNjN1hHNUFhVzF3YjNKMElDZG9aV0ZrWlhJdlgyaGxZV1JsY2ljN1hHNUFhVzF3YjNKMElDZG1iMjkwWlhJdlgyWnZiM1JsY2ljN1hHNUFhVzF3YjNKMElDZGZjR0ZuWlNjN1hHNUFhVzF3YjNKMElDZGZabkp2Ym5RdGNHRm5aU2M3WEc0aUxDSkFhVzF3YjNKMElDZG9aV0ZrYVc1bmN5YzdYRzVjYm5BZ2UxeHVJQ0F2TDJOdmJHOXlPaUFrY0hKcGJXRnllVHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhPSEI0TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nS0RJM0lDOGdNakVwSUNvZ01XVnRPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4WlcwN1hHNTlYRzRpTENKb01Td3VhREVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkdOdmNIbEdSanRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJQ1JzZER0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnWm05dWRDMXphWHBsT2lBeU5YQjRPMXh1ZlZ4dVhHNW9NaXd1YURJZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0pHaGxZV1JwYm1kR1JqdGNiaUFnWm05dWRDMXphWHBsT2lBek1IQjRPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nS0RRd0lDOGdNekFwSUNvZ01XVnRPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dKR0p2YkdRN1hHNTlYRzVvTXl3dWFETWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dKR2hsWVdScGJtZEdSanRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ0tEUXdJQzhnTXpBcElDb2dNV1Z0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nSkdKdmJHUTdYRzU5WEc1b05Td3VhRFVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkdobFlXUnBibWRHUmp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4T0hCNE8xeHVmVnh1SWl3aUxtMWhhVzR0YUdWaFpHVnlJSHRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUdobGFXZG9kRG9nSkdobFlXUmxja2hsYVdkb2RFMDdYRzRnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjYmlBZ2RHOXdPaUF3TzF4dUlDQnNaV1owT2lBd08xeHVJQ0I2TFdsdVpHVjRPaUF4TUR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nY21kaVlTZ2tkMmhwZEdVc0xqazVLVHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eU5YTTdYRzVjYmlBZ1FHMWxaR2xoSUNON0pHMWxaR2xoUkdWemEzUnZjSDBnZTF4dUlDQWdJR2hsYVdkb2REb2dKR2hsWVdSbGNraGxhV2RvZER0Y2JpQWdmVnh1WEc0Z0lDNXNiMmRuWldScGJpQW1JSHRjYmlBZ0lDQjBiM0E2SURNeWNIZzdYRzRnSUgxY2JseHVJQ0JvTVNCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJSG90YVc1a1pYZzZJREl3TzF4dUlDQjlYRzVjYmlBZ1BpQmthWFlnZTF4dUlDQWdJRUJwYm1Oc2RXUmxJR052Ym5SbGJuUlhhV1IwYUR0Y2JseHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYRzRnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREV3Y0hnN1hHNGdJQ0FnUUcxbFpHbGhJQ043SkcxbFpHbGhWR0ZpYkdWMGZTQjdYRzRnSUNBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWm14bGVDMWxibVE3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJR0oxZEhSdmJpQjdYRzRnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoUkdWemEzUnZjSDBnZTF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXVhR0Z0WW5WeVoyVnlJSHRjYmlBZ0lDQjNhV1IwYURvZ016SndlRHRjYmlBZ0lDQm9aV2xuYUhRNklETXljSGc3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNBZ0lIb3RhVzVrWlhnNklESXdPMXh1WEc0Z0lDQWdjM0JoYmlCN1hHNWNiaUFnSUNCOVhHNWNiaUFnSUNBbU9tSmxabTl5WlN4Y2JpQWdJQ0FtT21GbWRHVnlMRnh1SUNBZ0lITndZVzRnZTF4dUlDQWdJQ0FnZDJsa2RHZzZJREUyY0hnN1hHNGdJQ0FnSUNCb1pXbG5hSFE2SURKd2VEdGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lIUnZjRG9nTVRWd2VEdGNiaUFnSUNBZ0lHeGxablE2SURod2VEdGNiaUFnSUNBZ0lHTnZiblJsYm5RNklGd2lYQ0k3WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBa2NISnBiV0Z5ZVR0Y2JpQWdJQ0FnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TWpWek8xeHVJQ0FnSUNBZ2RHVjRkQzFwYm1SbGJuUTZJQzA1T1RrNU9UbHdlRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTFRad2VDazdYRzRnSUNBZ2ZWeHVJQ0FnSUNZNllXWjBaWElnZTF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktEWndlQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKaTV2Y0dWdUlIdGNiaUFnSUNBZ0lDWTZZbVZtYjNKbElIdGNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9ORFZrWldjcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0pqcGhablJsY2lCN1hHNGdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtDMDBOV1JsWnlrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCemNHRnVJSHRjYmlBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nTUR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoVkc5bloyeGxTR1ZoWkdWeWZTQjdYRzRnSUNBZ0lDQWdJQ3NnYm1GMklIdGNiaUFnSUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlNndE1UQXdKU2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNiaUFnYURFZ2UxeHVYRzRnSUgxY2JseHVJQ0JoSUh0Y2JpQWdJQ0JqYjJ4dmNqb2dKSEJ5YVcxaGNuazdYRzRnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1WEc0Z0lDQWdRR2x1WTJ4MVpHVWdhRzkyWlhJZ2UxeHVJQ0FnSUNBZ1kyOXNiM0k2SUNSelpXTnZibVJoY25rN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1FHbHRjRzl5ZENBblgyNWhkaWM3WEc1OVhHNGlMQ0p1WVhZZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0pHaGxZV1JwYm1kR1JqdGNiaUFnWm05dWRDMXphWHBsT2lBeE5YQjRPMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNWNiaUFnWVNCN1hHNGdJQ0FnWTI5c2IzSTZJQ1J3Y21sdFlYSjVPMXh1SUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUlIdGNiaUFnSUNBZ0lHTnZiRzl5T2lBa2MyVmpiMjVrWVhKNU8xeHVJQ0FnSUNBZ0x5OTBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdRRzFsWkdsaElDTjdKRzFsWkdsaFJHVnphM1J2Y0gwZ2UxeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01DQXhNbkI0TzF4dUlDQWdJSDFjYmlBZ2ZWeHVJQ0JBYldWa2FXRWdJM3NrYldWa2FXRkVaWE5yZEc5d2ZTQjdYRzRnSUNBZ2JXRnlaMmx1T2lBd0lDMHhNbkI0TzF4dUlDQjlYRzVjYmlBZ1FHMWxaR2xoSUNON0pHMWxaR2xoVkc5bloyeGxTR1ZoWkdWeWZTQjdYRzRnSUNBZ2NHOXphWFJwYjI0NklHWnBlR1ZrTzF4dUlDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNCc1pXWjBPaUF4TURBbE8xeHVJQ0FnSUhvdGFXNWtaWGc2SURFd08xeHVJQ0FnSUhkcFpIUm9PaUF4TURCMmR6dGNiaUFnSUNCb1pXbG5hSFE2SURFd01IWm9PMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ1IzYUdsMFpUdGNiaUFnSUNCd1lXUmthVzVuT2lBMk1IQjRJREl3Y0hnN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeE9IQjRPMXh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1qVnpPMXh1WEc0Z0lDQWdQaUJrYVhZZ2UxeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNBZ0lDQWdiM1psY21ac2IzYzZJR0YxZEc4N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTG5OMVlpMXRaVzUxSUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRSd2VEdGNibHh1SUNBZ0lDQWdZU3hjYmlBZ0lDQWdJSE53WVc0Z2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ05YQjRJREV3Y0hnN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTG0xbGJuVWdlMXh1SUNBZ0lDQWdQaUJzYVNCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nYzNCaFkyVXRZbVYwZDJWbGJqdGNiaUFnSUNBZ0lDQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0NklERXdjSGdnTUR0Y2JseHVJQ0FnSUNBZ0lDQStJR0VnZTF4dUlDQWdJQ0FnSUNBZ0lHWnNaWGd0WjNKdmR6b2dNVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lENGdZblYwZEc5dUlIdGNiaUFnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNekp3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklETXljSGc3WEc0Z0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQWdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ01EdGNibHh1SUNBZ0lDQWdJQ0FnSUNZNlltVm1iM0psTEZ4dUlDQWdJQ0FnSUNBZ0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREUyY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJREp3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnZjRG9nTVRWd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4bFpuUTZJRGh3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBa2NISnBiV0Z5ZVR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXVNalZ6TzF4dUlDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNZNllXWjBaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9PVEJrWldjcE8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lITndZVzRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdjM0pQYm14NU8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDWXVZM1Z5Y21WdWRDMXRaVzUxTFdsMFpXMGdlMXh1SUNBZ0lDQWdJQ0FnSUQ0Z1luVjBkRzl1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ1k2WVdaMFpYSWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3daR1ZuS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0F1YzNWaUxXMWxiblVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnZFd3dWJXVnVkU0I3WEc0Z0lDQWdRRzFsWkdsaElDTjdKRzFsWkdsaFJHVnphM1J2Y0gwZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2dabXhsZUMxbGJtUTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1BpQnNhU0I3WEc0Z0lDQWdJQ0ErSUdFZ2UxeHVJQ0FnSUNBZ0lDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0FnSUNBZ0lDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ01TNHhNM0I0TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCQWJXVmthV0VnSTNza2JXVmthV0ZFWlhOcmRHOXdmU0I3WEc0Z0lDQWdJQ0FnSUNZNmFHOTJaWElzWEc0Z0lDQWdJQ0FnSUNZdVkzVnljbVZ1ZEMxdFpXNTFMV2wwWlcwc1hHNGdJQ0FnSUNBZ0lDWXVZM1Z5Y21WdWRDMXRaVzUxTFdGdVkyVnpkRzl5SUh0Y2JpQWdJQ0FnSUNBZ0lDQXVjM1ZpTFcxbGJuVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCc2FTQjdYRzRnSUNBZ0lDQW1MbU4xY25KbGJuUXRiV1Z1ZFMxcGRHVnRMRnh1SUNBZ0lDQWdKaTVqZFhKeVpXNTBMVzFsYm5VdFlXNWpaWE4wYjNJZ2UxeHVJQ0FnSUNBZ0lDQStJR0VnZTF4dUlDQWdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUE0TURBN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXVjM1ZpTFcxbGJuVWdlMXh1SUNBZ0lFQnRaV1JwWVNBamV5UnRaV1JwWVVSbGMydDBiM0I5SUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHWnNaWGd0Wlc1a08xeHVJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ2RHOXdPaUF4TURBbE8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURBN1hHNGdJQ0FnSUNCdGFXNHRkMmxrZEdnNklERXdNQ1U3WEc1Y2JpQWdJQ0FnSUdFc1hHNGdJQ0FnSUNCemNHRnVJSHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTVRCd2VDQXhNbkI0SURBN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1SWl3aUxtMWhhVzR0Wm05dmRHVnlJSHRjYmlBZ2NHRmtaR2x1WnpvZ0pHZDFkSFJsY2lBd08xeHVYRzRnSUdFZ2UxeHVJQ0FnSUdOdmJHOXlPaUFrY0hKcGJXRnllVHRjYmlBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdhRzkyWlhJZ2UxeHVJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCMWJtUmxjbXhwYm1VN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUQ0Z1pHbDJJSHRjYmlBZ0lDQkFhVzVqYkhWa1pTQmpiMjUwWlc1MFYybGtkR2c3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJSE53WVdObExXSmxkSGRsWlc0N1hHNGdJSDFjYmx4dUlDQXVZMjl1ZEdGamRDQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhOWEI0TzF4dUlDQWdJSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYRzRnSUNBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SURFdU56TndlRHRjYmlBZ0lDQmpiMnh2Y2pvZ0pIQnlhVzFoY25rN1hHNWNiaUFnSUNCd0lIdGNiaUFnSUNBZ0lHMWhjbWRwYmpvZ01EdGNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVFJ3ZUR0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBK0lHUnBkaUI3WEc1Y2JpQWdmVnh1WEc0Z0lDNXpiMk5wWVd3Z2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ1lTQjdYRzRnSUNBZ0lDQjNhV1IwYURvZ01qUndlRHRjYmlBZ0lDQWdJR2hsYVdkb2REb2dNalJ3ZUR0Y2JpQWdJQ0FnSUcxaGNtZHBiaTFzWldaME9pQXhNSEI0TzF4dVhHNGdJQ0FnSUNCemRtY2dlMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0J6Y0dGdUlIdGNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdjM0pQYm14NU8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNHVabTl2ZEdWeUxXeHZaMjhnZTF4dUlDQnpkbWNnZTF4dUlDQWdJSGRwWkhSb09pQTROWEI0TzF4dUlDQWdJR2hsYVdkb2REb2dPVGx3ZUR0Y2JpQWdJQ0JtYVd4c09pQWtZV05qWlc1MExURTdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lIMWNibjFjYmlJc0ltSnZaSGtnZTF4dUlDQStJRzFoYVc0Z2UxeHVJQ0FnSUhCaFpHUnBibWM2SUNSb1pXRmtaWEpJWldsbmFIUk5JREE3WEc1Y2JpQWdJQ0JBYldWa2FXRWdJM3NrYldWa2FXRkVaWE5yZEc5d2ZTQjdYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQWthR1ZoWkdWeVNHVnBaMmgwSURBN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnUGlCelpXTjBhVzl1SUh0Y2JpQWdJQ0FnSUQ0Z1pHbDJJSHRjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnWTI5dWRHVnVkRmRwWkhSb08xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0pIQnlhVzFoY25rN1hHNWNiaUFnSUNBZ0lDWXVZbWN0Y0hKcGJXRnllU0I3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUndjbWx0WVhKNU8xeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsTzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBMk1IQjRJREE3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzVjYmk4dklHSnZaSGt1Y0hKdmFtVmpkQzFrWlhSaGFXd2dlMXh1THk4Z0lDQStJRzFoYVc0Z2UxeHVMeThnSUNBZ0lIQmhaR1JwYm1jNklEQTdYRzR2THlBZ0lIMWNiaTh2SUgxY2JseHVMbk5sWTNScGIyNHRhVzV1WlhJZ2UxeHVJQ0J3WVdSa2FXNW5PaUF3SURJd2NIZzdYRzVjYmlBZ1FHMWxaR2xoSUNON0pHMWxaR2xoUkdWemEzUnZjSDBnZTF4dUlDQWdJSEJoWkdScGJtYzZJREFnT1RKd2VEdGNiaUFnZlZ4dWZWeHVJaXdpSldsdFowTnZkbVZ5SUh0Y2JpQWdRR2x1WTJ4MVpHVWdhVzFuUTI5MlpYSTdYRzU5WEc0dWFIQXRjMnhwWkdWemFHOTNJSHRjYmlBZ2FHVnBaMmgwT2lBeE1EQjJhRHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVYRzRnSUM1cWN5MWpZWEp2ZFhObGJDQjdYRzRnSUNBZ0xtOTNiQzFwZEdWdElIdGNiaUFnSUNBZ0lHaGxhV2RvZERvZ01UQXdkbWc3WEc1Y2JpQWdJQ0FnSUQ0Z1pHbDJJSHRjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4TURBbE8xeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR2x0WnlCN1hHNGdJQ0FnSUNBZ0lFQmxlSFJsYm1RZ0pXbHRaME52ZG1WeU8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM1dmQyd3RibUYySUh0Y2JpQWdJQ0FnSUdKMWRIUnZiaUI3WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ2RHOXdPaUJqWVd4aktEVXdKU0F0SURRM2NIZ3BPMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dORFp3ZUR0Y2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBNU5YQjRPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b0p5NHVMMmx0WVdkbGN5OWhjbkp2ZHk1emRtY25LVHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjI1MFlXbHVPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTGpJMWN6dGNibHh1SUNBZ0lDQWdJQ0J6Y0dGdUlIdGNiaUFnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J6Y2s5dWJIazdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBbU9tWnZZM1Z6TEZ4dUlDQWdJQ0FnSUNBbU9tRmpkR2wyWlNCN1hHNGdJQ0FnSUNBZ0lDQWdZbTl5WkdWeU9pQXdPMXh1SUNBZ0lDQWdJQ0FnSUc5MWRHeHBibVU2SUc1dmJtVTdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCb2IzWmxjaUI3WEc0Z0lDQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ0xqVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnTG05M2JDMXdjbVYySUh0Y2JpQWdJQ0FnSUNBZ2JHVm1kRG9nSkdkMWRIUmxjanRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTVRnd1pHVm5LVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnTG05M2JDMXVaWGgwSUh0Y2JpQWdJQ0FnSUNBZ2NtbG5hSFE2SUNSbmRYUjBaWEk3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnTG5OamNtOXNiQzFrYjNkdUlIdGNiaUFnSUNCM2FXUjBhRG9nTkRad2VEdGNiaUFnSUNCb1pXbG5hSFE2SURrMWNIZzdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUdKdmRIUnZiVG9nSkdkMWRIUmxjanRjYmlBZ0lDQnNaV1owT2lCallXeGpLRFV3SlNBdElERTRjSGdwTzF4dUlDQWdJSG90YVc1a1pYZzZJREV3TzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNnbkxpNHZhVzFoWjJWekwyRnljbTkzTG5OMlp5Y3BPMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ1kyOXVkR0ZwYmp0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXVNalZ6TzF4dUlDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLRGt3WkdWbktUdGNiaUFnSUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dUlDQWdJSFJsZUhRdGFXNWtaVzUwT2lBdE9UazVPVGs1Y0hnN1hHNWNiaUFnSUNCQWFXNWpiSFZrWlNCb2IzWmxjaUI3WEc0Z0lDQWdJQ0J2Y0dGamFYUjVPaUF1TlR0Y2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUxtaHdMVzVoZG1sbllYUnBiMjRnZTF4dUlDQmhJSHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYRzRnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJQ0FnYUdWcFoyaDBPaUF4TURCMmFEdGNiaUFnSUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTlRCd2VEdGNiaUFnSUNCamIyeHZjam9nSkhkb2FYUmxPMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnSUNCMFpYaDBMWE5vWVdSdmR6b2dNSEI0SURSd2VDQTNjSGdnSkhObFkyOXVaR0Z5ZVR0Y2JpQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1VN1hHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDUm9aV0ZrYVc1blJrWTdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBa2NISnBiV0Z5ZVR0Y2JseHVJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVlJoWW14bGRIMGdlMXh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUE0TUhCNE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVVJsYzJ0MGIzQjlJSHRjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRVMWNIZzdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2MzQmhiaUI3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0I2TFdsdVpHVjRPaUF4TzF4dUlDQWdJSDFjYmx4dUlDQWdJR2x0WnlCN1hHNGdJQ0FnSUNCQVpYaDBaVzVrSUNWcGJXZERiM1psY2p0Y2JpQWdJQ0FnSUhvdGFXNWtaWGc2SURBN1hHNGdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTGpJMWN6dGNiaUFnSUNBZ0lHWnBiSFJsY2pvZ1lteDFjaWd4T0hCNEtUdGNibHh1SUNBZ0lDQWdRSE4xY0hCdmNuUnpJQ2h2WW1wbFkzUXRabWwwT2lCamIzWmxjaWtnZTF4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBekpUdGNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQXhNRE1sTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVYRzVjYmlBZ0xtRmpkR2wyWlNCaElIdGNiaUFnSUNCcGJXY2dlMXh1SUNBZ0lDQWdabWxzZEdWeU9pQmliSFZ5S0RBcE8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dUlpd2lMbU52Ym5SbGJuUXRaM0pwWkNCN1hHNGdJRzFoY21kcGJqb2dNQ0F0Tm5CNE8xeHVYRzRnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVlJoWW14bGRIMGdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQm1iR1Y0TFhOMFlYSjBPMXh1SUNBZ0lHWnNaWGd0ZDNKaGNEb2dkM0poY0R0Y2JpQWdmVnh1WEc0Z0lFQnRaV1JwWVNBamV5UnRaV1JwWVVSbGMydDBiM0I5SUh0Y2JpQWdJQ0J0WVhKbmFXNDZJREFnTmpCd2VEdGNiaUFnZlZ4dVhHNGdJRnRqYkdGemMxNDlYQ0pqYjJ4Y0lsMGdlMXh1SUNBZ0lIQmhaR1JwYm1jNklEWndlRHRjYmx4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklERXljSGc3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnY0dsamRIVnlaU0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnYUdWcFoyaDBPaUF4TURBbE8xeHVJQ0FnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc0Z0lIMWNibHh1SUNCcGJXY2dlMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JseHVJQ0FnSUVCemRYQndiM0owY3lodlltcGxZM1F0Wm1sME9pQmpiM1psY2lrZ2UxeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNBZ0lDQWdiMkpxWldOMExXWnBkRG9nWTI5MlpYSTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdRRzFsWkdsaElDTjdKRzFsWkdsaFVHaHZibVY5SUh0Y2JpQWdJQ0F1WTI5c0xURWdlMXh1SUNBZ0lDQWdhVzFuSUh0Y2JpQWdJQ0FnSUNBZ2QybGtkR2c2SUdGMWRHODdYRzRnSUNBZ0lDQWdJRzFoZUMxb1pXbG5hSFE2SURVeU1IQjRPMXh1SUNBZ0lDQWdJQ0J0WVhKbmFXNDZJR0YxZEc4N1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JrQnRaV1JwWVNBamV5UnRaV1JwWVZSaFlteGxkSDBnZTF4dUlDQXVZMjlzTFRFZ2UxeHVJQ0FnSUhkcFpIUm9PaUF6TXk0ek15VTdYRzRnSUNBZ1pteGxlRG9nTUNBd0lETXpMak16SlR0Y2JpQWdmVnh1WEc0Z0lDNWpiMnd0TWlCN1hHNGdJQ0FnZDJsa2RHZzZJRFkyTGpZM0pUdGNiaUFnSUNCbWJHVjRPaUF3SURBZ05qWXVOamNsTzF4dUlDQjlYRzVjYmlBZ0xtTnZiQzB6SUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0JtYkdWNE9pQXdJREFnTVRBd0pUdGNiaUFnZlZ4dWZWeHVJaXdpTHk4Z0xtMWhjQzEzY21Gd2NHVnlJSHRjYmk4dklDQWdkMmxrZEdnNklERXdNQ1U3WEc0dkx5QWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQTNOU1U3WEc0dkx5QWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmk4dklDQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdJMEZCUVR0Y2JpOHZYRzR2THlBZ0lENGdaR2wySUh0Y2JpOHZJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaTh2SUNBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0dkx5QWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUx5OGdJQ0FnSUhSdmNEb2dNRHRjYmk4dklDQWdJQ0JzWldaME9pQXdPMXh1THk4Z0lDQjlYRzR2THlCOVhHNWNiaTV0WVhBZ2UxeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEY3lKVHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVYRzRnSUdsbWNtRnRaU0I3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdhR1ZwWjJoME9pQXhNREFsTzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUhSdmNEb2dNRHRjYmlBZ2ZWeHVmVnh1SWl3aUx5OGdVMGxPUjB4RklGQlNUMHBGUTFSY2JpNXdjbTlxWldOMExXaGxjbThnZTF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUcxaGVDMW9aV2xuYUhRNklERXdNSFpvTzF4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhNbkI0TzF4dVhHNGdJR2x0WnlCN1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnYUdWcFoyaDBPaUJoZFhSdk8xeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCOVhHNWNiaUFnTG5CeWIycGxZM1F0ZEdsMGJHVWdlMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNCc1pXWjBPaUF3TzF4dUlDQWdJR0p2ZEhSdmJUb2dNRHRjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsTzF4dUlDQWdJSFJsZUhRdGMyaGhaRzkzT2lBd0lEQWdNbkI0SUNSaWJHRmphenRjYmlBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ05EVndlRHRjYmx4dUlDQWdJSE53WVc0c1hHNGdJQ0FnYzIxaGJHd2dlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYzIxaGJHd2dlMXh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4WlcwN1hHNGdJQ0FnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nYm05dVpUdGNiaUFnSUNCOVhHNWNiaUFnSUNBK0lHUnBkaUI3WEc0Z0lDQWdJQ0JBYVc1amJIVmtaU0JqYjI1MFpXNTBWMmxrZEdnN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpNW5jbWxrTFhScGRHeGxJSHRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0JzWldaME9pQXdPMXh1SUNCaWIzUjBiMjA2SURBN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQndZV1JrYVc1bk9pQXdJREkwY0hnZ016aHdlQ0F5TkhCNE8xeHVJQ0JqYjJ4dmNqb2dKSGRvYVhSbE8xeHVJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dMakkxY3p0Y2JpQWdkR1Y0ZEMxemFHRmtiM2M2SURCd2VDQXdjSGdnTW5CNElDUmliR0ZqYXp0Y2JseHVJQ0JvTkNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeU5IQjRPMXh1SUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNWNiaUFnSUNCQWJXVmthV0VnSTNza2JXVmthV0ZFWlhOcmRHOXdmU0I3WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURNd2NIZzdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdjMjFoYkd3Z2UxeHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWthR1ZoWkdsdVowWkdPMXh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUFvTkRBZ0x5QXpNQ2tnS2lBeFpXMDdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJQ1JpYjJ4a08xeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ0tETXdJQzhnTWpRcElDb2dNV1Z0TzF4dUlDQjlYRzU5WEc1Y2JpNXdjbTlxWldOMExXMWhhVzRnZTF4dUlDQStJR1JwZGlCN1hHNGdJQ0FnUUdsdVkyeDFaR1VnWTI5dWRHVnVkRmRwWkhSb08xeHVJQ0I5WEc1OVhHNWNiaTV3Y205cVpXTjBMWE4wWVhSeklIdGNiaUFnWkdsemNHeGhlVG9nWjNKcFpEdGNiaUFnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQmhkWFJ2SURGbWNqdGNiaUFnWjNKcFpDMW5ZWEE2SURWd2VDQXlNSEI0TzF4dUlDQnRZWEpuYVc0dGRHOXdPaUF6WlcwN1hHNWNiaUFnWkhRZ2UxeHVJQ0FnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc0Z0lIMWNibjFjYmx4dUx5OGdVRkpQU2tWRFZDQkhVa2xFWEc0dWNtVnNZWFJsWkMxd2NtOXFaV04wY3lCN1hHNGdJQzh2Y0dGa1pHbHVaem9nTkRCd2VDQXdPMXh1WEc0Z0lFQnRaV1JwWVNBamV5UnRaV1JwWVVSbGMydDBiM0I5SUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUEzTUhCNElEQTdYRzRnSUgxY2JuMWNibHh1TG5CeWIycGxZM1F0WjNKcFpDQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQWthR1ZoWkdsdVowWkdPMXh1SUNBK0lHUnBkaUI3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZMjl1ZEdWdWRGZHBaSFJvTzF4dUlDQjlYRzVjYmlBZ2FXMW5JSHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQm9aV2xuYUhRNklHRjFkRzg3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJSDFjYmx4dUlDQmhjblJwWTJ4bElIdGNiaUFnSUNCd1lXUmthVzVuT2lBMmNIZzdYRzVjYmlBZ0lDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGVVlXSnNaWFI5SUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF6TXk0ek15VTdYRzRnSUNBZ0lDQm1iR1Y0T2lBd0lEQWdNek11TXpNbE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVVJsYzJ0MGIzQjlJSHRjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREV5Y0hnN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmpwdWRHZ3RZMmhwYkdRb00yNGdLeUF5S1NCN1hHNGdJQ0FnSUNCQWJXVmthV0VnSTNza2JXVmthV0ZVWVdKc1pYUjlJSHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMHpOWEI0S1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVVJsYzJ0MGIzQjlJSHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMDNNSEI0S1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCaElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ1kyOXNiM0k2SUNSM2FHbDBaVHRjYmx4dUlDQWdJQ1k2WW1WbWIzSmxJSHRjYmlBZ0lDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJQ0FnYUdWcFoyaDBPaUF4TlRGd2VEdGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lHSnZkSFJ2YlRvZ01EdGNiaUFnSUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnSUNCNkxXbHVaR1Y0T2lBd08xeHVJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNJanRjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUd4cGJtVmhjaTFuY21Ga2FXVnVkQ2d3WkdWbkxISm5ZbUVvSkdKc1lXTnJMQzR6S1NBd0pTd2djbWRpWVNna1lteGhZMnNzTUNrZ01UQXdKU2s3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnYzIxaGJHd2dlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNakZ3ZUR0Y2JpQWdmVnh1WEc0Z0lDNW5jbWxrTFhScGRHeGxJSHRjYmlBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ05EaHdlRHRjYmlBZ2ZWeHVYRzRnSUNZdVlYSmphR2wyWlNCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pIQnlhVzFoY25rN1hHNGdJQ0FnWTI5c2IzSTZJQ1IzYUdsMFpUdGNiaUFnZlZ4dWZWeHVYRzR1Y0hKdmFtVmpkQzFuY21sa0xXbHVibVZ5SUh0Y2JpQWdjR0ZrWkdsdVp6b2dNQ0F3SURjd2NIZzdYRzRnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdiV0Z5WjJsdU9pQXdJQzAyY0hnN1hHNWNiaUFnUUcxbFpHbGhJQ043SkcxbFpHbGhWR0ZpYkdWMGZTQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQm1iR1Y0TFhkeVlYQTZJSGR5WVhBN1hHNGdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJtYkdWNExYTjBZWEowTzF4dUlDQWdJSEJoWkdScGJtY3RkRzl3T2lBM01IQjRPMXh1SUNCOVhHNWNiaUFnUUcxbFpHbGhJQ043SkcxbFpHbGhSR1Z6YTNSdmNIMGdlMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQTJNSEI0TzF4dUlDQWdJSEJoWkdScGJtY3RkRzl3T2lBek5YQjRPMXh1SUNCOVhHNTlYRzVjYmx4dUx5OGdRR3RsZVdaeVlXMWxjeUIzWldVZ2UxeHVMeThnSUNBd0pTQjdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLREJrWldjcE8zMWNiaTh2SUNBZ01UQXdKU0I3SUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RNMk1HUmxaeWs3ZlZ4dUx5OGdmVnh1THk5Y2JpOHZJR0p2WkhrZ2UxeHVMeThnSUNCaGJtbHRZWFJwYjI0NklIZGxaU0F4TUhNZ2FXNW1hVzVwZEdVZ2JHbHVaV0Z5TzF4dUx5OGdmVnh1SWl3aUxuQnlaWE56TFd4cGMzUnBibWNnZTF4dUlDQndZV1JrYVc1bk9pQTNNSEI0SURBN1hHNWNiaUFnUGlCa2FYWWdlMXh1SUNBZ0lFQnBibU5zZFdSbElHTnZiblJsYm5SWGFXUjBhRHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNWNiaUFnSUNCQWJXVmthV0VnSTNza2JXVmthV0ZVWVdKc1pYUjlJSHRjYmlBZ0lDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JpQWdJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJ5YjNjdGNtVjJaWEp6WlR0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdVlYSjBhV05zWlhNZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjYmlBZ0lDQmhjblJwWTJ4bElIdGNiaUFnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFdU5HVnRPMXh1SUNBZ0lDQWdMbVJoZEdVZ2UxeHVJQ0FnSUNBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSkdobFlXUnBibWRHUmp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUhOd1lXNGdlMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCaElIdGNiaUFnSUNBZ0lHTnZiRzl5T2lBa2NISnBiV0Z5ZVR0Y2JpQWdJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNibHh1SUNBZ0lDQWdRR2x1WTJ4MVpHVWdhRzkyWlhJZ2UxeHVJQ0FnSUNBZ0lDQnpjR0Z1T214aGMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dkVzVrWlhKc2FXNWxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzVjYmk1dmRYUnNaWFF0WjNKcFpDQjdYRzRnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVlJoWW14bGRIMGdlMXh1SUNBZ0lIZHBaSFJvT2lBM05TVTdYRzVjYmlBZ0lDQnVZWFlnZTF4dUlDQWdJQ0FnY0c5emFYUnBiMjQ2SUhOMGFXTnJlVHRjYmlBZ0lDQWdJSFJ2Y0RvZ0pHaGxZV1JsY2tobGFXZG9kRHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0IxYkNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNCbWJHVjRMWGR5WVhBNklIZHlZWEE3WEc0Z0lDQWdiV0Z5WjJsdU9pQXRNVEp3ZUR0Y2JpQWdmVnh1WEc0Z0lHeHBJSHRjYmlBZ0lDQm1iR1Y0T2lBd0lEQWdOVEFsTzF4dUlDQWdJSGRwWkhSb09pQTFNQ1U3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNVEp3ZUR0Y2JseHVJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVlJoWW14bGRIMGdlMXh1SUNBZ0lDQWdabXhsZURvZ01DQXdJREkxSlR0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF5TlNVN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2FXMW5JSHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQm9aV2xuYUhRNklHRjFkRzg3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJSDFjYmx4dUlDQnpjR0Z1SUh0Y2JpQWdJQ0JBYVc1amJIVmtaU0J6Y2s5dWJIazdYRzRnSUgxY2JseHVJQ0JoSUh0Y2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dMakkxY3p0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBalJFUkVSRVJFTzF4dVhHNGdJQ0FnUUdsdVkyeDFaR1VnYUc5MlpYSWdlMXh1SUNBZ0lDQWdiM0JoWTJsMGVUb2dMakkxTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUNZdWRHRjRMV0Z5WTJocGRtVWdlMXh1SUNBZ0lHRWdlMXh1SUNBZ0lDQWdiM0JoWTJsMGVUb2dMakkxTzF4dVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCb2IzWmxjaUI3WEc0Z0lDQWdJQ0FnSUc5d1lXTnBkSGs2SUM0M05UdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCc2FTNWhZM1JwZG1VZ1lTQjdYRzRnSUNBZ0lDQnZjR0ZqYVhSNU9pQXhPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVYRzR1WVhKMGFXTnNaWE1nZTF4dUlDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGVVlXSnNaWFI5SUh0Y2JpQWdJQ0JtYkdWNE9pQXdJREFnTWpBbE8xeHVJQ0FnSUhkcFpIUm9PaUF5TUNVN1hHNGdJSDFjYm4xY2JseHVMbk10Ym1WM2N5QjdYRzRnSUhCaFpHUnBibWM2SURjMWNIZ2dNRHRjYm4xY2JpNXVaWGR6TFdOaGNtOTFjMlZzSUh0Y2JpQWdZWEowYVdOc1pTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhPSEI0TzF4dUlDQWdJSEJoWkdScGJtYzZJREZ3ZUR0Y2JseHVJQ0FnSUdFZ2UxeHVJQ0FnSUNBZ1kyOXNiM0k2SUNSd2NtbHRZWEo1TzF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5PaUF5TUhCNE8xeHVJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pIQnlhVzFoY25rN1hHNGdJQ0FnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzVjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nY21kaVlTZ2tjSEpwYldGeWVTd3VNaWs3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzV2ZDJ3dGFYUmxiU0I3WEc0Z0lDQWdKanB1ZEdndFkyaHBiR1FvTW00cElIdGNiaUFnSUNBZ0lHRnlkR2xqYkdVZ2UxeHVJQ0FnSUNBZ0lDQmhJSHRjYmlBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkhkb2FYUmxPMXh1SUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUndjbWx0WVhKNU8xeHVYRzRnSUNBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYUc5MlpYSWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUNSd2NtbHRZWEo1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nY21kaVlTZ2tjSEpwYldGeWVTd3VNaWs3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdMbTkzYkMxemRHRm5aU0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ2MzUnlaWFJqYUR0Y2JpQWdmVnh1WEc0Z0lHRnlkR2xqYkdVc1hHNGdJR0VnZTF4dUlDQWdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdmVnh1WEc0Z0lDNWtZWFJsSUh0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXVOV1Z0TzF4dUlDQjlYRzVjYm4xY2JpSXNJaTV3Wlc5d2JHVWdQaUJ0WVdsdUlIdGNiaUFnY0dGa1pHbHVaem9nTnpCd2VDQXdPMXh1ZlZ4dUxuQmxiM0JzWlMxbmNtbGtJSHRjYmlBZ2FEUWdlMXh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFrYUdWaFpHbHVaMFpHTzF4dUlDQjlYRzRnSUQ0Z1pHbDJJSHRjYmlBZ0lDQkFhVzVqYkhWa1pTQmpiMjUwWlc1MFYybGtkR2c3WEc0Z0lIMWNibHh1SUNCcGJXY2dlMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdmVnh1WEc0Z0lDNW5jbWxrTFhScGRHeGxJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXdPMXh1SUNCOVhHNWNiaUFnWVhKMGFXTnNaU0I3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lIQmhaR1JwYm1jNklEWndlRHRjYmx4dUlDQWdJR0VnZTF4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnYUc5MlpYSWdlMXh1SUNBZ0lDQWdJQ0F1WjNKcFpDMTBhWFJzWlNCN1hHNGdJQ0FnSUNBZ0lDQWdiM0JoWTJsMGVUb2dNVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURFMU1YQjRPMXh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUdKdmRIUnZiVG9nTUR0Y2JpQWdJQ0FnSUNBZ2JHVm1kRG9nTUR0Y2JpQWdJQ0FnSUNBZ2VpMXBibVJsZURvZ01EdGNiaUFnSUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2diR2x1WldGeUxXZHlZV1JwWlc1MEtEQmtaV2NzY21kaVlTZ2tZbXhoWTJzc0xqTXBJREFsTENCeVoySmhLQ1JpYkdGamF5d3dLU0F4TURBbEtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCQWJXVmthV0VnSTNza2JXVmthV0ZVWVdKc1pYUjlJSHRjYmlBZ0lDQWdJSGRwWkhSb09pQXpNeTR6TXlVN1hHNGdJQ0FnSUNCbWJHVjRPaUF3SURBZ016TXVNek1sTzF4dUlDQWdJSDFjYmx4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklERXljSGc3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKanB1ZEdndFkyaHBiR1FvTTI0Z0t5QXlLU0I3WEc0Z0lDQWdJQ0JBYldWa2FXRWdJM3NrYldWa2FXRlVZV0pzWlhSOUlIdGNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0Mwek5YQjRLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwM01IQjRLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG5CbGIzQnNaUzFuY21sa0xXbHVibVZ5SUh0Y2JpQWdjR0ZrWkdsdVp6b2dOamh3ZUNBd0lEY3djSGc3WEc0Z0lHMWhjbWRwYmpvZ01DQXRObkI0TzF4dVhHNGdJRUJ0WldScFlTQWpleVJ0WldScFlWUmhZbXhsZEgwZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ1pteGxlQzEzY21Gd09pQjNjbUZ3TzF4dUlDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2dabXhsZUMxemRHRnlkRHRjYmlBZ2ZWeHVYRzRnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVVJsYzJ0MGIzQjlJSHRjYmlBZ0lDQnRZWEpuYVc0NklEQWdOakJ3ZUR0Y2JpQWdmVnh1ZlZ4dVhHNHVjR1Z2Y0d4bExXSnBieUI3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCdGFXNHRhR1ZwWjJoME9pQXhNREFsTzF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUd4bFpuUTZJREE3WEc0Z0lIUnZjRG9nTUR0Y2JpQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lDNHlOWE03WEc1Y2JpQWdRRzFsWkdsaElDTjdKRzFsWkdsaFZHRmliR1YwZlNCN1hHNGdJQ0FnYkdWbWREb2dNVEF3SlR0Y2JpQWdmVnh1WEc0Z0lFQnRaV1JwWVNBamV5UnRaV1JwWVVSbGMydDBiM0I5SUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF4TW5CNE8xeHVJQ0I5WEc1Y2JpQWdjQ0I3WEc0Z0lDQWdZMjlzYjNJNklDUjNhR2wwWlR0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURJeGNIZzdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJQ2d5TnlBdklESXhLU0FxSURGbGJUdGNiaUFnZlZ4dVhHNGdJRDRnWkdsMklIdGNiaUFnSUNCdGFXNHRhR1ZwWjJoME9pQXhNREFsTzF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNSd2NtbHRZWEo1TzF4dUlDQWdJSEJoWkdScGJtYzZJREU0Y0hnN1hHNGdJSDFjYmx4dUlDQmlkWFIwYjI0Z2UxeHVJQ0FnSUhkcFpIUm9PaUF5TlhCNE8xeHVJQ0FnSUdobGFXZG9kRG9nTWpWd2VEdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnZEc5d09pQXlOWEI0SUNzZ01USTdYRzRnSUNBZ2NtbG5hSFE2SURJMWNIZ2dLeUF4TWp0Y2JseHVJQ0FnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNSM2FHbDBaVHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQjBaWGgwTFdsdVpHVnVkRG9nTFRrNU9UbHdlRHRjYmlBZ0lDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0FnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z0xqSTFjenRjYmx4dUlDQWdJQ1k2WW1WbWIzSmxMRnh1SUNBZ0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUNBZ2QybGtkR2c2SURFME1DVTdYRzRnSUNBZ0lDQm9aV2xuYUhRNklERndlRHRjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJSFJ2Y0RvZ05UQWxPMXh1SUNBZ0lDQWdiR1ZtZERvZ05UQWxPMXh1SUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUjNhR2wwWlR0Y2JpQWdJQ0FnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TWpWek8xeHVJQ0FnSUgxY2JseHVJQ0FnSUNZNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3ROVEFsS1NCeWIzUmhkR1VvTkRWa1pXY3BPMXh1SUNBZ0lIMWNiaUFnSUNBbU9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3ROVEFsS1NCeWIzUmhkR1VvTFRRMVpHVm5LVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQkFhVzVqYkhWa1pTQm9iM1psY2lCN1hHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQnlaMkpoS0NSM2FHbDBaU3d1T1NrN1hHNGdJQ0FnSUNCaWIzSmtaWEl0WTI5c2IzSTZJQ1J3Y21sdFlYSjVPMXh1WEc0Z0lDQWdJQ0FtT21KbFptOXlaU3hjYmlBZ0lDQWdJQ1k2WVdaMFpYSWdlMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrY0hKcGJXRnllVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG1KcGJ5MTBhWFJzWlNCN1hHNGdJSGRwWkhSb09pQmpZV3hqS0RFd01DVWdMU0F6TlhCNEtUdGNiaUFnY0NCN1hHNGdJQ0FnSmpwbWFYSnpkQzFqYUdsc1pDQjdYRzRnSUNBZ0lDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0FnSUNBZ2JXRnlaMmx1T2lBd08xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNWNiaTV3Wlc5d2JHVXRaM0pwWkNCaGNuUnBZMnhsSUh0Y2JpQWdRRzFsWkdsaElDTjdKRzFsWkdsaFZHRmliR1YwZlNCN1hHNGdJQ0FnSmpwdWRHZ3RZMmhwYkdRb00yNHBMRnh1SUNBZ0lDWTZiblJvTFdOb2FXeGtLRE51S3pFcElIdGNiaUFnSUNBZ0lDNXdaVzl3YkdVdFltbHZJSHRjYmlBZ0lDQWdJQ0FnZEc5d09pQXROekJ3ZUR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0FtT201MGFDMWphR2xzWkNnemJpc3lLU0I3WEc0Z0lDQWdJQ0F1Y0dWdmNHeGxMV0pwYnlCN1hHNGdJQ0FnSUNBZ0lIUnZjRG9nTnpCd2VEdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBbU9tNTBhQzFqYUdsc1pDZ3piaWtnZTF4dUlDQWdJQ0FnTG5CbGIzQnNaUzFpYVc4Z2UxeHVJQ0FnSUNBZ0lDQnNaV1owT2lCaGRYUnZPMXh1SUNBZ0lDQWdJQ0J5YVdkb2REb2dNVEF3SlR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNiaUFnSmk1dmNHVnVJSHRjYmlBZ0lDQjZMV2x1WkdWNE9pQXhNRHRjYmx4dUlDQWdJQzV3Wlc5d2JHVXRZbWx2SUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNGlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkZRVUU3TzBkQlJVYzdRVmRHU0N4UFFVRlBMRU5CUVVNc2RVZEJRVWs3UVZoSFdpeEJRVUZCTEdGQlFXRXNRMEZCUXp0RlFVTmlMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N3eVFrRkJNa0lzUlVGQlJTeFhRVUZYTzBWQlEzaERMRzlGUVVGdlJUdEZRVU53UlN4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RFFTdEhWanM3UVVGeVNFUXNRVUZSUXl4aFFWSlpMRU5CVVZvc1ZVRkJWU3hEUVVGRE8wVkJRMVlzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1owSkJRV2RDTEVWQlFVVXNTMEZCU3p0RlFVTjJRaXhaUVVGWkxFVkJRVVVzV1VGQldUdEZRVU14UWl4M1FrRkJkMElzUlVGQlJTeE5RVUZOTzBWQlFVVXNhME5CUVd0RE8wTkJRM0JGT3p0QlFXSkdMRUZCWlVNc1lVRm1XU3hEUVdWYUxGVkJRVlVzUVVGQlFTeE5RVUZOTEVOQlFVTTdSVUZEYUVJc1QwRkJUeXhGUVVGRkxFZEJRVWM3UlVGRFdpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RlFVTmtMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVlVGQlZTeEZRVUZGTEUxQlFVMDdSVUZEYkVJc1YwRkJWeXhGUVVGRkxFTkJRVU03UlVGRFpDeE5RVUZOTEVWQlFVVXNRMEZCUXp0RFFVTlVPenRCUVhSQ1JpeEJRWGRDUXl4aFFYaENXU3hEUVhkQ1dpeG5Ra0ZCWjBJc1EwRkJRenRGUVVOb1FpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhSUVVGUkxFVkJRVVVzVFVGQlRUdEZRVU5vUWl4cFEwRkJhVU03UlVGRGFrTXNhVUpCUVdsQ0xFVkJRVVVzTUVKQlFUQkNPME5CUXpkRE96dEJRVGRDUml4QlFTdENReXhoUVM5Q1dTeERRU3RDV2l4WlFVRlpPMEZCTDBKaUxHRkJRV0VzUTBGblExb3NVMEZCVXl4RFFVRkJPMFZCUTFJc01rSkJRVEpDTEVWQlFVVXNUVUZCVFR0RlFVTnVReXgzUWtGQmQwSXNSVUZCUlN4TlFVRk5PMFZCUTJoRExIVkNRVUYxUWl4RlFVRkZMRTFCUVUwN1JVRkRMMElzYVVKQlFXbENMRVZCUVVVc2IwSkJRV3RDTzBWQlEzSkRMR05CUVdNc1JVRkJSU3h2UWtGQmEwSTdSVUZEYkVNc1lVRkJZU3hGUVVGRkxHOUNRVUZyUWp0RFFVTnFRenM3UVVGMlEwWXNRVUY1UTBNc1lVRjZRMWtzUTBGNVExb3NVMEZCVXl4RFFVRkRPMFZCUTFRc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNWVUZCVlN4RlFVRkZMRWRCUVVjN1JVRkRaaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTERKQ1FVRXlRaXhGUVVGRkxFMUJRVTA3UlVGRGJrTXNNa0pCUVRKQ0xFVkJRVVVzVjBGQlZ6dEZRVU40UXl4eFFrRkJjVUlzUlVGQlJTeEpRVUZKTzBOQlF6TkNPenRCUVdoRVJpeEJRV2xFUXl4aFFXcEVXU3hEUVdsRVdpeFRRVUZUTEVOQlFVTXNSMEZCUnl4RFFVRkRPMFZCUTJJc1QwRkJUeXhGUVVGRkxFdEJRVXM3UlVGRFpDeExRVUZMTEVWQlFVVXNTVUZCU1R0RFFVTllPenRCUVhCRVJpeEJRWE5FUXl4aFFYUkVXU3hEUVhORVdpeFJRVUZSTEVGQlFVRXNVMEZCVXp0QlFYUkViRUlzWVVGQllTeERRWFZFV2l4VFFVRlRMRUZCUVVFc1UwRkJVeXhEUVVGRE8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CUTJJN08wRkJla1JHTEVGQk1rUkRMR0ZCTTBSWkxFTkJNa1JhTEZGQlFWRXNRMEZCUXl4VFFVRlRPMEZCTTBSdVFpeGhRVUZoTEVOQk5FUmFMRkZCUVZFc1EwRkJReXhUUVVGVE8wRkJOVVJ1UWl4aFFVRmhMRU5CTmtSYUxGRkJRVkVzUTBGQlF6dEZRVU5TTEUxQlFVMHNSVUZCUlN4UFFVRlBPMFZCUTJZc2JVSkJRVzFDTEVWQlFVVXNTVUZCU1R0RlFVTjZRaXhyUWtGQmEwSXNSVUZCUlN4SlFVRkpPMFZCUTNoQ0xHZENRVUZuUWl4RlFVRkZMRWxCUVVrN1JVRkRkRUlzWlVGQlpTeEZRVUZGTEVsQlFVazdSVUZEY2tJc1YwRkJWeXhGUVVGRkxFbEJRVWs3UTBGRGFrSTdPMEZCY0VWR0xFRkJjMFZETEdGQmRFVlpMRU5CYzBWYUxGRkJRVkVzUTBGQlF5eE5RVUZOTEVGQlFVRXNVMEZCVXp0QlFYUkZla0lzWVVGQllTeERRWFZGV2l4UlFVRlJMRU5CUVVNc1RVRkJUU3hCUVVGQkxGTkJRVk03UVVGMlJYcENMR0ZCUVdFc1EwRjNSVm9zVFVGQlRTeEJRVUZCTEZGQlFWRXNRMEZCUXp0RlFVTmtMRlZCUVZVc1JVRkJSU3hKUVVGSk8wVkJRMmhDTEV0QlFVc3NSVUZCUlN4UFFVRlBPMFZCUTJRc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVTXNRMEZCUXl4RFFVRkJMRlZCUVZVN1JVRkRia0lzU1VGQlNTeEZRVUZGTEU5QlFVODdRMEZEWWpzN1FVRTVSVVlzUVVGblJrTXNZVUZvUmxrc1FVRm5SbGdzVjBGQlZ5eERRVUZETzBWQlExb3NUMEZCVHl4RlFVRkZMRXRCUVVzN1EwRkRaRHM3UVVGc1JrWXNRVUZ2UmtNc1lVRndSbGtzUVVGdlJsZ3NXVUZCV1N4RFFVRkRPMFZCUTJJc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RFFVTmtPenRCUVhaR1JpeEJRWGxHUXl4aFFYcEdXU3hCUVhsR1dDeFhRVUZYTEVOQlFVTTdSVUZEV2l4UFFVRlBMRVZCUVVVc1EwRkJRenREUVVOV096dEJRVE5HUml4QlFUWkdReXhoUVRkR1dTeEJRVFpHV0N4WlFVRlpMRU5CUVVNc1UwRkJVeXhEUVVGRE8wVkJRM1pDTEZWQlFWVXNSVUZCUlN4TlFVRk5PME5CUTJ4Q096dEJRUzlHUml4QlFXbEhReXhoUVdwSFdTeEJRV2xIV0N4VFFVRlRMRU5CUVVNc1UwRkJVeXhEUVVGRE8wVkJRM0JDTEZsQlFWa3NSVUZCUlN4TFFVRkxPMFZCUTI1Q0xHMUNRVUZ0UWl4RlFVRkZMRWxCUVVrN1JVRkRla0lzWjBKQlFXZENMRVZCUVVVc1NVRkJTVHRGUVVOMFFpeGxRVUZsTEVWQlFVVXNTVUZCU1R0RlFVTnlRaXhYUVVGWExFVkJRVVVzU1VGQlNUdERRVU5xUWpzN1FVRjJSMFlzUVVGNVIwTXNZVUY2UjFrc1FVRjVSMWdzVTBGQlV5eERRVUZETzBWQlExWXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhOUVVGTkxFVkJRVVVzU1VGQlNUdERRVU5hT3p0QlFUVkhSaXhCUVRoSFF5eGhRVGxIV1N4QlFUaEhXQ3hSUVVGUkxFTkJRVU03UlVGRFZDeFRRVUZUTEVWQlFVVXNSMEZCUnp0RFFVTmtPenRCUVdoSVJpeEJRV3RJUXl4aFFXeElXU3hCUVd0SVdDeFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRPMFZCUTI1Q0xFdEJRVXNzUlVGQlJTeExRVUZMTzBOQlExbzdPMEZCUjBZc1YwRkJWenRCUVVOWUxFRkJRVUVzVFVGQlRTeERRVUZETEdGQlFXRXNRMEZCUXp0RlFVTndRaXhQUVVGUExFVkJRVVVzUzBGQlN6dERRVU5rT3p0QlF6ZElSRHM3UjBGRlJ6dEJRVU5JTEVGQlEwTXNZVUZFV1N4RFFVTmFMRk5CUVZNc1EwRkJRenRGUVVOVUxHdENRVUZyUWl4RlFVRkZMRTFCUVUwN1JVRkRNVUlzYlVKQlFXMUNMRVZCUVVVc1NVRkJTVHREUVVONlFqczdRVUZLUml4QlFVdERMR0ZCVEZrc1EwRkxXaXhuUWtGQlowSXNRMEZCUXp0RlFVTm9RaXhQUVVGUExFVkJRVVVzUTBGQlF6dERRVU5XT3p0QlFWQkdMRUZCVVVNc1lVRlNXU3hEUVZGYUxHbENRVUZwUWl4RFFVRkRPMFZCUTJwQ0xFOUJRVThzUlVGQlJTeERRVUZETzBOQlExWTdPMEZCVmtZc1FVRlhReXhoUVZoWkxFTkJWMW9zVVVGQlVTeERRVUZETzBWQlExSXNZMEZCWXl4RlFVRkZMRTlCUVU4N1EwRkRka0k3TzBGQlIwWXNWVUZCVlN4RFFVRldMRTlCUVZVN1JVRkRWQ3hGUVVGRk8wbEJRMFFzVDBGQlR5eEZRVUZGTEVOQlFVTTdPMFZCUjFnc1NVRkJTVHRKUVVOSUxFOUJRVThzUlVGQlJTeERRVUZET3pzN08wRkRla0phT3p0SFFVVkhPMEZCUlVnc1FVRkJRU3hYUVVGWExFTkJRVU03UlVGRFdDeFZRVUZWTEVWQlFVVXNkMEpCUVhkQ08wTkJRM0JET3p0QlEwNUVPenRIUVVWSE8wRklRMGdzUVVGNVEwTXNZVUY2UTFrc1EwRjVRMW9zVTBGQlV5eERSM1pEUXp0RlFVMVVPenM3UzBGSFJ6dERRVkZJT3p0QlFXeENSaXhCUVVWRkxHRkJSbGNzUTBGRFdpeFRRVUZUTEVOQlExSXNVMEZCVXl4RFFVRkRPMFZCUTFJc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeFZRVUZWTEVWQlFVVXNhMEpCUVd0Q08wTkJReTlDT3p0QlFVeElMRUZCVjBVc1lVRllWeXhEUVVOYUxGTkJRVk1zUTBGVlVpeFRRVUZUTEVOQlFVRXNRVUZCUVN4SFFVRkRMRVZCUVVzc1JVRkJSU3hCUVVGUUxFZEJXRm9zWVVGQllTeERRVU5hTEZOQlFWTXNRMEZWV1N4VFFVRlRMRUZCUVVFc1NVRkJTeXhGUVVGQkxFRkJRVUVzUjBGQlF5eEJRVUZCTEVkQlFVMDdSVUZEZUVNc1ZVRkJWU3hGUVVGRkxFTkJRVU03UTBGRFlqczdRVUZpU0N4QlFXVkZMR0ZCWmxjc1EwRkRXaXhUUVVGVExFTkJZMUlzUjBGQlJ5eEJRVUZCTEZOQlFWTXNRMEZCUXp0RlFVTmFMR1ZCUVdVc1JVRkJSU3hYUVVGWE8wTkJRelZDT3p0QlEyNUNTRHM3UjBGRlJ6dEJRVVZJTEVGQlEwTXNZVUZFV1N4RFFVTmFMR3RDUVVGclFpeERRVUZETzBWQlEyeENMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UTBGRGFFSTdPMEZCVEVZc1FVRlBReXhoUVZCWkxFTkJUMW9zYjBKQlFXOUNMRU5CUVVNN1JVRkRjRUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRWxCUVVrc1JVRkJSU3hIUVVGSE8wVkJRMVFzUjBGQlJ5eEZRVUZGTEVkQlFVYzdSVUZEVWl4WFFVRlhMRVZCUVVVc1MwRkJTenRGUVVOc1FpeFZRVUZWTEVWQlFVVXNTMEZCU3p0RlFVTnFRaXhWUVVGVkxFVkJRVVVzZVVKQlFUSkRMRU5CUVVNc1UwRkJVenRGUVVOcVJTeE5RVUZOTEVWQlFVVXNUMEZCVHp0RlFVTm1MRTlCUVU4c1JVRkJSU3hEUVVGRE8wVkJRMVlzTWtKQlFUSkNMRVZCUVVVc1RVRkJUVHRGUVVOdVF5eFZRVUZWTEVWQlFVVXNiMEpCUVc5Q08wTkJRMmhET3p0QlFYQkNSaXhCUVhOQ1F5eGhRWFJDV1N4RFFYTkNXaXh2UWtGQmIwSXNRVUZCUVN4TlFVRk5MRU5CUVVNN1JVRkRNVUlzVTBGQlV5eEZRVUZGTEdWQlFXVTdRMEZETVVJN08wRkJlRUpHTEVGQk1FSkRMR0ZCTVVKWkxFTkJNRUphTEd0Q1FVRnJRaXhEUVVGRExHRkJRV0U3UVVFeFFtcERMR0ZCUVdFc1EwRXlRbG9zYTBKQlFXdENMRU5CUVVNc2IwSkJRVzlDTEVOQlFVTTdSVUZEZGtNc1QwRkJUeXhGUVVGRkxFbEJRVWs3UTBGRFlqczdRVUUzUWtZc1FVRXJRa01zWVVFdlFsa3NRMEVyUWxvc1lVRkJZU3hEUVVGRE8wVkJRMklzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZEVml4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxHMUNRVUZ0UWl4RlFVRkZMR0ZCUVdFN1JVRkRiRU1zYVVKQlFXbENMRVZCUVVVc1UwRkJVenRGUVVNMVFpeGxRVUZsTEVWQlFVVXNUMEZCVHp0RlFVTjRRaXhWUVVGVkxFVkJRVVVzYTBKQlFXdENPME5CUXpsQ096dEJRWFJEUml4QlFYZERReXhoUVhoRFdTeERRWGREV2l4blFrRkJaMElzUTBGQlF6dEZRVU5vUWl4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zUzBGQlN5eEZRVUZGTEVsQlFVazdRMEZEV0RzN1FVVnVSRVk3TzBkQlJVYzdRVU5FU0N4QlFVVkRMRlZCUmxNc1EwRkZWQ3hSUVVGUkxFTkJRVU03UlVGRFVpeFZRVUZWTEVWQlFVVXNTVUZCU1R0RlFVTm9RaXhWUVVGVkxFVkJRVVVzVFVGQlRUdEZRVU5zUWl3eVFrRkJNa0lzUlVGQlJTeFhRVUZYTzBOQmMwSjRRenM3UVVFelFrWXNRVUZQUlN4VlFWQlJMRU5CUlZRc1VVRkJVU3hGUVV0UUxFRkJRVUVzUzBGQlF5eEZRVUZQTEUxQlFVMHNRVUZCWWl4RlFVRmxPMFZCUTJZc1MwRkJTeXhGUkVwUkxFbEJRVWs3UlVOTGFrSXNVMEZCVXl4RlJFVk5MRWxCUVVrN1JVTkVia0lzVFVGQlRTeEZSRWRQTEVkQlFVYzdSVU5HYUVJc1QwRkJUeXhGUkVkUExFZEJRVWNzUTBGQlF5eEhRVUZITzBWRFJuSkNMRlZCUVZVc1JVUlFSU3hQUVVGUE8wVkRVVzVDTEU5QlFVOHNSVUZCUlN4WlFVRlpPMFZCUTNKQ0xFMUJRVTBzUlVGQlJTeFBRVUZQTzBWQlEyWXNZVUZCWVN4RlFVRkZMRWRCUVVjN1EwRlBiRUk3TzBGQmRFSklMRUZCYVVKSExGVkJha0pQTEVOQlJWUXNVVUZCVVN4RlFVdFFMRUZCUVVFc1MwRkJReXhGUVVGUExFMUJRVTBzUVVGQllpeERRVlZETEUxQlFVMHNRMEZCUXp0RlFVTlFMRlZCUVZVc1JVUm1ReXhQUVVGUE8wVkRaMEpzUWl4TFFVRkxMRVZFWms4c1NVRkJTVHRGUTJkQ2FFSXNaVUZCWlN4RlFVRkZMRWxCUVVrN1EwRkRja0k3TzBGQmNrSktMRUZCZFVKRkxGVkJka0pSTEVOQlJWUXNVVUZCVVN4RFFYRkNVQ3hUUVVGVExFTkJRVU03UlVGRFZDeFBRVUZQTEVWRVVHTXNSMEZCUnp0RlExRjRRaXhOUVVGTkxFVkJRVVVzVDBGQlR6dERRVU5tT3p0QlFURkNTQ3hCUVRoQ1F5eFZRVGxDVXl4RFFUaENWQ3hSUVVGUkxFRkJRVUVzVTBGQlV5eEhRVUZITEZOQlFWTXNRMEZCUXp0RlFVTTNRaXhWUVVGVkxFVkJRVVVzU1VGQlNUdERRVU5vUWpzN1FVRm9RMFlzUVVGclEwTXNWVUZzUTFNc1EwRnJRMVFzVTBGQlV5eERRVUZETzBWQlExUXNWVUZCVlN4RlFVRkZMRTFCUVUwN1JVRkRiRUlzTWtKQlFUSkNMRVZCUVVVc1YwRkJWenREUVhsQ2VFTTdPMEZCTjBSR0xFRkJjME5GTEZWQmRFTlJMRU5CYTBOVUxGTkJRVk1zUTBGSlVpeFJRVUZSTEVOQlFVTTdSVUZEVWl4UFFVRlBMRVZCUVVVc1dVRkJXVHRGUVVOeVFpeEpRVUZKTEVWQlFVVXNRMEZCUXp0RlFVTlFMRkZCUVZFc1JVRkJSU3hOUVVGTk8wTkJiVUpvUWpzN1FVRTFSRWdzUVVFeVEwY3NWVUV6UTA4c1EwRnJRMVFzVTBGQlV5eERRVWxTTEZGQlFWRXNRMEZMVUN4SlFVRkpMRU5CUVVNN1JVRkRTaXhMUVVGTExFVkVka0pOTEVsQlFVazdSVU4zUW1Zc1RVRkJUU3hGUkhaQ1N5eEpRVUZKTzBWRGQwSm1MRTFCUVUwc1JVUjBRazBzUjBGQlJ5eERRVUZETEVkQlFVYzdSVU4xUW01Q0xGVkJRVlVzUlVReFEwTXNUMEZCVHp0RlF6SkRiRUlzVDBGQlR5eEZRVUZGTEV0QlFVczdSVUZEWkN3eVFrRkJNa0lzUlVGQlJTeFBRVUZQTzBWQlEzQkRMRlZCUVZVc1JVRkJSU3hyUWtGQmEwSTdSVUZET1VJc1lVRkJZU3hGUkRWQ1JDeEpRVUZKTzBORE5rSm9RanM3UVVGd1JFb3NRVUYzUkVrc1ZVRjRSRTBzUTBGclExUXNVMEZCVXl4RFFVbFNMRkZCUVZFc1FVRm5RazRzVDBGQlR5eERRVVZRTEVsQlFVa3NSVUY0UkZJc1ZVRkJWU3hEUVd0RFZDeFRRVUZUTEVOQlNWSXNVVUZCVVN4QlFXbENUaXhOUVVGTkxFTkJRMDRzU1VGQlNTeERRVUZETzBWQlEwb3NWVUZCVlN4RlJIUkVRU3hQUVVGUE8wTkRkVVJxUWpzN1FVY3pSRXdzUVVGQlFTeERRVUZETEVOQlFVTTdSVUZEUVN4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVOVUxFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hWUVVGVkxFVkJRVVVzVlVGQlZUdERRVU4yUWpzN1FVRkZSQ3hCUVVGQkxFVkJRVVU3UVVGRFJpeEZRVUZGTEVOQlFVTTdSVUZEUkN4VlFVRlZMRVZCUVVVc1NVRkJTVHREUVVOcVFqczdRVUZGUkN4QlFVRkJMRU5CUVVNc1EwRkJRenRGUVVOQkxGVkJRVlVzUlVGQlJTeFJRVUZSTzBOQlJYSkNPenRCUVVWRUxFRkJRVUVzVVVGQlVTeERRVUZETzBWRVNGQXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzUzBGQlN5eEZRVUZGTEVkQlFVYzdSVUZEVml4TlFVRk5MRVZCUVVVc1IwRkJSenRGUVVOWUxFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhSUVVGUkxFVkJRVVVzVFVGQlRUdEZRVU5vUWl4SlFVRkpMRVZCUVVVc1owSkJRV0U3UlVGRGJrSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1EwTkdWanM3UVVGRlJDeEJRVUZCTEUxQlFVMHNRMEZCUXp0RlFVTk1MRmRCUVZjc1JVWktUaXhIUVVGSE8wTkZTMVE3TzBGQlJVUXNRVUZCUVN4SlFVRkpMRU5CUVVNN1JVRkRTQ3hYUVVGWExFVkdXRW9zVjBGQlZ5eEZRVUZGTEZWQlFWVTdRMFZaTDBJN08wRkZNMEpFTEVGQlIwa3NTVUZJUVN4QlFVTkVMRmRCUVZjc1IwRkZVaXhKUVVGSkxFVkJTRllzU1VGQlNTeEJRVVZFTEdWQlFXVXNSMEZEV2l4SlFVRkpMRU5CUVVNN1JVRkRUQ3hYUVVGWExFVkJRVVVzUTBGQlF6dEZRVU5rTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeERRVUZETzBOQlExZzdPMEZCVUV3c1FVRlpTeXhKUVZwRUxFRkJVMFFzVjBGQlZ5eERRVWRVTEZsQlFWa3NSVUZhYWtJc1NVRkJTU3hCUVZWRUxHVkJRV1VzUVVGQlFTeEpRVUZMTEVOQlFVRXNVMEZCVXl4RlFVVXpRaXhaUVVGWkxFTkJRVU03UlVGRFdDeFZRVUZWTEVWQlFVVXNWMEZCVnp0RFFYRkVlRUk3TzBGQmJFVk9MRUZCWTA4c1NVRmtTQ3hCUVZORUxGZEJRVmNzUTBGSFZDeFpRVUZaTEVkQlJWSXNSMEZCUnl4RlFXUmFMRWxCUVVrc1FVRlZSQ3hsUVVGbExFRkJRVUVzU1VGQlN5eERRVUZCTEZOQlFWTXNSVUZGTTBJc1dVRkJXU3hIUVVWU0xFZEJRVWNzUTBGQlF6dEZRVU5LTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeERRVUZETzBOQlExZzdPMEZCYWtKU0xFRkJhMEpQTEVsQmJFSklMRUZCVTBRc1YwRkJWeXhEUVVkVUxGbEJRVmtzUVVGTlZDeFBRVUZQTEVWQmJFSm1MRWxCUVVrc1FVRlZSQ3hsUVVGbExFRkJRVUVzU1VGQlN5eERRVUZCTEZOQlFWTXNSVUZGTTBJc1dVRkJXU3hCUVUxVUxFOUJRVThzUTBGQlF6dEZRVU5RTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1RVRkJUU3hGUVVGRkxFdEJRVXM3UlVGRFlpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhIUVVGSExFVkJRVVVzUTBGQlF6dEZRVU5PTEVsQlFVa3NSVUZCUlN4RFFVRkRPMFZCUTFBc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeFBRVUZQTEVWQlFVVXNSVUZCUlR0RlFVTllMRlZCUVZVc1JVRkJSU3h0UlVGQk5rUTdSVUZEZWtVc1ZVRkJWU3hGUVVGRkxGRkJRVkU3UTBGRGNrSTdPMEZCTlVKU0xFRkJPRUpQTEVsQk9VSklMRUZCVTBRc1YwRkJWeXhEUVVkVUxGbEJRVmtzUTBGclFsWXNSVUZCUlN4RFFVRkRMRU5CUVVNc1JVRTVRbGdzU1VGQlNTeEJRVlZFTEdWQlFXVXNRVUZCUVN4SlFVRkxMRU5CUVVFc1UwRkJVeXhGUVVVelFpeFpRVUZaTEVOQmEwSldMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU03UlVGRFNDeExRVUZMTEVWS2VrSk9MRTlCUVU4N1EwazRRbEE3TzBGQmNFTlNMRUZJVDBVc1NVZFFSU3hCUVZORUxGZEJRVmNzUTBGSFZDeFpRVUZaTEVOQmEwSldMRVZCUVVVc1EwRkJReXhEUVVGRExFRklka0pTTEUxQlFVMHNSVWRRVkN4SlFVRkpMRUZCVTBRc1YwRkJWeXhEUVVkVUxGbEJRVmtzUTBGclFsWXNSVUZCUlN4RFFVRkRMRU5CUVVNc1FVaDBRbElzVFVGQlRTeEZSMUpVTEVsQlFVa3NRVUZWUkN4bFFVRmxMRUZCUVVFc1NVRkJTeXhEUVVGQkxGTkJRVk1zUlVGRk0wSXNXVUZCV1N4RFFXdENWaXhGUVVGRkxFTkJRVU1zUTBGQlF5eEJTSFpDVWl4TlFVRk5MRVZIVUZRc1NVRkJTU3hCUVZWRUxHVkJRV1VzUVVGQlFTeEpRVUZMTEVOQlFVRXNVMEZCVXl4RlFVVXpRaXhaUVVGWkxFTkJhMEpXTEVWQlFVVXNRMEZCUXl4RFFVRkRMRUZJZEVKU0xFMUJRVTBzUTBGQlF6dEZSekJDUXl4TFFVRkxMRVZLTlVKU0xIZENRVUZQTzBORFNWbzdPMEZITkVKSkxFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRkZCUVZFN1JVRjBRemRETEVGQmRVTlZMRWxCZGtOT0xFRkJVMFFzVjBGQlZ5eERRVWRVTEZsQlFWa3NRMEV5UWxBc1MwRkJTeXhEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEVWQmRrTndRaXhKUVVGSkxFRkJWVVFzWlVGQlpTeEJRVUZCTEVsQlFVc3NRMEZCUVN4VFFVRlRMRVZCUlROQ0xGbEJRVmtzUTBFeVFsQXNTMEZCU3l4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU03U1VGRFZDeExRVUZMTEVWS2FFTlFMRTlCUVU4N1IwbHhRMDQ3UlVFM1ExZ3NRVWhQUlN4SlIxQkZMRUZCVTBRc1YwRkJWeXhEUVVkVUxGbEJRVmtzUTBFeVFsQXNTMEZCU3l4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExFRklhRU5xUWl4TlFVRk5MRVZIVUZRc1NVRkJTU3hCUVZORUxGZEJRVmNzUTBGSFZDeFpRVUZaTEVOQk1rSlFMRXRCUVVzc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eEJTQzlDYWtJc1RVRkJUU3hGUjFKVUxFbEJRVWtzUVVGVlJDeGxRVUZsTEVGQlFVRXNTVUZCU3l4RFFVRkJMRk5CUVZNc1JVRkZNMElzV1VGQldTeERRVEpDVUN4TFFVRkxMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUVVob1EycENMRTFCUVUwc1JVZFFWQ3hKUVVGSkxFRkJWVVFzWlVGQlpTeEJRVUZCTEVsQlFVc3NRMEZCUVN4VFFVRlRMRVZCUlROQ0xGbEJRVmtzUTBFeVFsQXNTMEZCU3l4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExFRklMMEpxUWl4TlFVRk5MRU5CUVVNN1NVZHRRMGtzUzBGQlN5eEZTbTVEVkN4eFFrRkJUenRIUTBWa096czdRVWR6UTBrc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFXaEVNME1zUVVGcFJGTXNTVUZxUkV3c1FVRlRSQ3hYUVVGWExFTkJSMVFzV1VGQldTeERRWEZEVWl4RFFVRkRPMFZCYWtSV0xFbEJRVWtzUVVGVFJDeFhRVUZYTEVOQlIxUXNXVUZCV1N4RFFYTkRVaXhKUVVGSkxFVkJiRVJpTEVsQlFVa3NRVUZWUkN4bFFVRmxMRUZCUVVFc1NVRkJTeXhEUVVGQkxGTkJRVk1zUlVGRk0wSXNXVUZCV1N4RFFYRkRVaXhEUVVGRE8wVkJha1JXTEVsQlFVa3NRVUZWUkN4bFFVRmxMRUZCUVVFc1NVRkJTeXhEUVVGQkxGTkJRVk1zUlVGRk0wSXNXVUZCV1N4RFFYTkRVaXhKUVVGSkxFTkJRVU03U1VGRFNDeExRVUZMTEVWS04wTlNMRTlCUVU4N1IwbHJSRXc3UlVGNFJGWXNRVWhQUlN4SlIxQkZMRUZCVTBRc1YwRkJWeXhEUVVkVUxGbEJRVmtzUTBGeFExSXNRMEZCUXl4QlNERkRVQ3hOUVVGTkxFVkhVRlFzU1VGQlNTeEJRVk5FTEZkQlFWY3NRMEZIVkN4WlFVRlpMRU5CY1VOU0xFTkJRVU1zUVVoNlExQXNUVUZCVFR0RlIxSlVMRWxCUVVrc1FVRlRSQ3hYUVVGWExFTkJSMVFzV1VGQldTeERRWE5EVWl4SlFVRkpMRUZJTTBOV0xFMUJRVTA3UlVkUVZDeEpRVUZKTEVGQlUwUXNWMEZCVnl4RFFVZFVMRmxCUVZrc1EwRnpRMUlzU1VGQlNTeEJTREZEVml4TlFVRk5MRVZIVWxRc1NVRkJTU3hCUVZWRUxHVkJRV1VzUVVGQlFTeEpRVUZMTEVOQlFVRXNVMEZCVXl4RlFVVXpRaXhaUVVGWkxFTkJjVU5TTEVOQlFVTXNRVWd4UTFBc1RVRkJUU3hGUjFCVUxFbEJRVWtzUVVGVlJDeGxRVUZsTEVGQlFVRXNTVUZCU3l4RFFVRkJMRk5CUVZNc1JVRkZNMElzV1VGQldTeERRWEZEVWl4RFFVRkRMRUZJZWtOUUxFMUJRVTA3UlVkU1ZDeEpRVUZKTEVGQlZVUXNaVUZCWlN4QlFVRkJMRWxCUVVzc1EwRkJRU3hUUVVGVExFVkJSVE5DTEZsQlFWa3NRMEZ6UTFJc1NVRkJTU3hCU0RORFZpeE5RVUZOTzBWSFVGUXNTVUZCU1N4QlFWVkVMR1ZCUVdVc1FVRkJRU3hKUVVGTExFTkJRVUVzVTBGQlV5eEZRVVV6UWl4WlFVRlpMRU5CYzBOU0xFbEJRVWtzUVVneFExWXNUVUZCVFN4RFFVRkRPMGxIT0VOSExFdEJRVXNzUlVwb1JGWXNkMEpCUVU4N1IwTkpXanM3TzBGSFZrZ3NRVUUwUkZNc1NVRTFSRXdzUVVGVFJDeFhRVUZYTEVOQlIxUXNXVUZCV1N4RFFTdERWaXhWUVVGVkxFRkJRVUVzU1VGQlN5eERRVUZCTEV0QlFVc3NSVUZEYkVJc1NVRkJTU3hGUVRWRVlpeEpRVUZKTEVGQlUwUXNWMEZCVnl4RFFVZFVMRmxCUVZrc1EwRXJRMVlzVlVGQlZTeEJRVUZCTEVsQlFVc3NRMEZCUVN4TFFVRkxMRU5CUldwQ0xFOUJRVThzUlVFM1JHcENMRWxCUVVrc1FVRlRSQ3hYUVVGWExFTkJSMVFzV1VGQldTeERRU3REVml4VlFVRlZMRUZCUVVFc1NVRkJTeXhEUVVGQkxFdEJRVXNzUTBGSGFrSXNUVUZCVFN4RlFUbEVhRUlzU1VGQlNTeEJRVlZFTEdWQlFXVXNRVUZCUVN4SlFVRkxMRU5CUVVFc1UwRkJVeXhGUVVVelFpeFpRVUZaTEVOQkswTldMRlZCUVZVc1FVRkJRU3hKUVVGTExFTkJRVUVzUzBGQlN5eEZRVU5zUWl4SlFVRkpMRVZCTlVSaUxFbEJRVWtzUVVGVlJDeGxRVUZsTEVGQlFVRXNTVUZCU3l4RFFVRkJMRk5CUVZNc1JVRkZNMElzV1VGQldTeERRU3REVml4VlFVRlZMRUZCUVVFc1NVRkJTeXhEUVVGQkxFdEJRVXNzUTBGRmFrSXNUMEZCVHl4RlFUZEVha0lzU1VGQlNTeEJRVlZFTEdWQlFXVXNRVUZCUVN4SlFVRkxMRU5CUVVFc1UwRkJVeXhGUVVVelFpeFpRVUZaTEVOQkswTldMRlZCUVZVc1FVRkJRU3hKUVVGTExFTkJRVUVzUzBGQlN5eERRVWRxUWl4TlFVRk5MRU5CUVVNN1JVRkRUaXhWUVVGVkxFVktla1JpTEU5QlFVODdRMGt3UkV3N08wRkJhRVZXTEVGQmMwVk5MRWxCZEVWR0xFRkJjVVZCTEZkQlFWY3NSMEZEVUN4SlFVRkpMRWRCUVVjc1QwRkJUeXhIUVVGSExFZEJRVWNzUTBGQlF6dEZRVU55UWl4UFFVRlBMRVZCUVVVc1EwRkJRenREUVVOWU96dEJSWGhGVUN4QlFVRkJMRVZCUVVVc1JVRkJReXhIUVVGSExFTkJRVU03UlVGRFRDeFhRVUZYTEVWT1kwb3NWMEZCVnl4RlFVRkZMRlZCUVZVN1JVMWlPVUlzVjBGQlZ5eEZUbU5TTEVkQlFVYzdSVTFpVGl4alFVRmpMRVZCUVVVc1UwRkJVenRGUVVONlFpeFRRVUZUTEVWQlFVVXNTVUZCU1R0RFFVTm9RanM3UVVGRlJDeEJRVUZCTEVWQlFVVXNSVUZCUXl4SFFVRkhMRU5CUVVNN1JVRkRUQ3hYUVVGWExFVk9UVVFzWlVGQlpTeEZRVUZGTEU5QlFVODdSVTFNYkVNc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeGpRVUZqTEVWQlFVVXNVMEZCVXp0RlFVTjZRaXhYUVVGWExFVkJRVVVzVTBGQlpUdEZRVU0xUWl4WFFVRlhMRVZPVFU0c1IwRkJSenREVFV4VU96dEJRVU5FTEVGQlFVRXNSVUZCUlN4RlFVRkRMRWRCUVVjc1EwRkJRenRGUVVOTUxGZEJRVmNzUlU1RVJDeGxRVUZsTEVWQlFVVXNUMEZCVHp0RlRVVnNReXhUUVVGVExFVkJRVVVzU1VGQlNUdEZRVU5tTEdOQlFXTXNSVUZCUlN4VFFVRlRPMFZCUTNwQ0xGZEJRVmNzUlVGQlJTeFRRVUZsTzBWQlF6VkNMRmRCUVZjc1JVNUVUaXhIUVVGSE8wTk5SVlE3TzBGQlEwUXNRVUZCUVN4RlFVRkZMRVZCUVVNc1IwRkJSeXhEUVVGRE8wVkJRMHdzVjBGQlZ5eEZUbEpFTEdWQlFXVXNSVUZCUlN4UFFVRlBPMFZOVTJ4RExGTkJRVk1zUlVGQlJTeEpRVUZKTzBOQlEyaENPenRCUkhSQ1JDeEJRVUZCTEVOQlFVTXNRMEZCUXp0RlFVVkJMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzVjBGQlZ5eEZRVUZGTEZOQlFXVTdSVUZETlVJc1lVRkJZU3hGUVVGRkxFZEJRVWM3UTBGRGJrSTdPMEZGVUVRc1FVRkJRU3haUVVGWkxFTkJRVU03UlVGRFdDeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JWQTBRbEVzU1VGQlNUdEZUek5DYkVJc1VVRkJVU3hGUVVGRkxFdEJRVXM3UlVGRFppeEhRVUZITEVWQlFVVXNRMEZCUXp0RlFVTk9MRWxCUVVrc1JVRkJSU3hEUVVGRE8wVkJRMUFzVDBGQlR5eEZRVUZGTEVWQlFVVTdSVUZEV0N4VlFVRlZMRVZRUkVvc2VVSkJRVTg3UlU5RllpeFZRVUZWTEVWQlFVVXNVVUZCVVR0RFFXZEhja0k3TzBGQk9VWkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVUZXZEVNc1FVRkJRU3haUVVGWkxFTkJRVU03U1VGWFZDeE5RVUZOTEVWUWIwSkxMRWxCUVVrN1IwOTVSV3hDT3pzN1FVRXhSa01zUVVGQlFTeFRRVUZUTEVOQlpGZ3NXVUZCV1N4RFFXTkZPMFZCUTFZc1IwRkJSeXhGUVVGRkxFbEJRVWs3UTBGRFZqczdRVUZvUWtnc1FVRnJRa1VzV1VGc1FsVXNRMEZyUWxZc1JVRkJSU3hEUVVGRE8wVkJRMFFzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFVkJRVVU3UTBGRFdqczdRVUZ5UWtnc1FVRjFRa1VzV1VGMlFsVXNSMEYxUWxJc1IwRkJSeXhEUVVGRE8wVk9kRUpPTEZOQlFWTXNSVVJCVEN4TlFVRk5PMFZEUTFZc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVVXNRMEZCUXl4RFJFUklMRWxCUVVrN1JVOTNRbFFzVDBGQlR5eEZRVUZGTEVsQlFVazdSVUZEWWl4WFFVRlhMRVZCUVVVc1RVRkJUVHRGUVVOdVFpeGxRVUZsTEVWQlFVVXNZVUZCWVR0RlFVTTVRaXhYUVVGWExFVkJRVVVzU1VGQlNUdERRVWxzUWpzN1FVRklReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCT1VKMlF5eEJRWFZDUlN4WlFYWkNWU3hIUVhWQ1VpeEhRVUZITEVOQlFVTTdTVUZSUml4WFFVRlhMRVZCUVVVc1VVRkJVVHRIUVVWNFFqczdPMEZCUlVNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFXNURlRU1zUVVGclEwVXNXVUZzUTFVc1EwRnJRMVlzVFVGQlRTeERRVUZETzBsQlJVZ3NUMEZCVHl4RlFVRkZMRWxCUVVrN1IwRkZhRUk3T3p0QlFYUkRTQ3hCUVhkRFJTeFpRWGhEVlN4RFFYZERWaXhWUVVGVkxFTkJRVU03UlVGRFZDeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1owSkJRV2RDTEVWQlFVVXNWMEZCVnp0RlFVTTNRaXhQUVVGUExFVkJRVVVzUlVGQlJUdERRVFJEV2pzN1FVRjZSa2dzUVVGdFJFa3NXVUZ1UkZFc1EwRjNRMVlzVlVGQlZTeEJRVmRRTEU5QlFVOHNSVUZ1UkZvc1dVRkJXU3hEUVhkRFZpeFZRVUZWTEVGQldWQXNUVUZCVFR0QlFYQkVXQ3haUVVGWkxFTkJkME5XTEZWQlFWVXNRMEZoVWl4SlFVRkpMRU5CUVVNN1JVRkRTQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SFFVRkhPMFZCUTFnc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNSMEZCUnl4RlFVRkZMRWxCUVVrN1JVRkRWQ3hKUVVGSkxFVkJRVVVzUjBGQlJ6dEZRVU5VTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1ZVRkJWU3hGVUhCRVRpeFBRVUZQTzBWUGNVUllMRlZCUVZVc1JVRkJSU3hSUVVGUk8wVkJRM0JDTEZkQlFWY3NSVUZCUlN4VFFVRlRPME5CUTNaQ096dEJRUzlFVEN4QlFXbEZTU3haUVdwRlVTeERRWGREVml4VlFVRlZMRUZCZVVKUUxFOUJRVThzUTBGQlF6dEZRVU5RTEZOQlFWTXNSVUZCUlN4blFrRkJaMEk3UTBGRE5VSTdPMEZCYmtWTUxFRkJiMFZKTEZsQmNFVlJMRU5CZDBOV0xGVkJRVlVzUVVFMFFsQXNUVUZCVFN4RFFVRkRPMFZCUTA0c1UwRkJVeXhGUVVGRkxHVkJRV1U3UTBGRE0wSTdPMEZCZEVWTUxFRkJlVVZOTEZsQmVrVk5MRU5CZDBOV0xGVkJRVlVzUVVGblExQXNTMEZCU3l4QlFVTklMRTlCUVU4c1EwRkJRenRGUVVOUUxGTkJRVk1zUlVGQlJTeGhRVUZoTzBOQlEzcENPenRCUVRORlVDeEJRVFJGVFN4WlFUVkZUU3hEUVhkRFZpeFZRVUZWTEVGQlowTlFMRXRCUVVzc1FVRkpTQ3hOUVVGTkxFTkJRVU03UlVGRFRpeFRRVUZUTEVWQlFVVXNZMEZCWXp0RFFVTXhRanM3UVVFNVJWQXNRVUVyUlUwc1dVRXZSVTBzUTBGM1ExWXNWVUZCVlN4QlFXZERVQ3hMUVVGTExFTkJUMG9zU1VGQlNTeERRVUZETzBWQlEwZ3NUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRXRHM3UVVGRlJDeE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hSUVVGUk8wVkJia1kxUXl4QlFXOUdVU3haUVhCR1NTeERRWGREVml4VlFVRlZMRUZCWjBOUUxFdEJRVXNzUjBGWlFTeEhRVUZITEVOQlFVTTdTVUZEU2l4VFFVRlRMRVZCUVVVc1owSkJRV2RDTzBkQlF6VkNPenM3UVVGMFJsUXNRVUU0UmtVc1dVRTVSbFVzUTBFNFJsWXNRMEZCUXl4RFFVRkRPMFZCUTBFc1MwRkJTeXhGVUhaR1F5eFBRVUZQTzBWUGQwWmlMR1ZCUVdVc1JVRkJSU3hKUVVGSk8wTkJTM1JDT3p0QlFYSkhTQ3hCVGs5RkxGbE5VRlVzUTBFNFJsWXNRMEZCUXl4QlRuWkdRU3hOUVVGTkxFVk5VRlFzV1VGQldTeERRVGhHVml4RFFVRkRMRUZPZEVaQkxFMUJRVTBzUTBGQlF6dEZUVEpHU2l4TFFVRkxMRVZRTVVaRExFOUJRVTg3UTBORGFFSTdPMEZOVmtnc1FVTkJRU3haUkVGWkxFTkRRVm9zUjBGQlJ5eERRVUZETzBWQlEwWXNWMEZCVnl4RlVtRkVMR1ZCUVdVc1JVRkJSU3hQUVVGUE8wVlJXbXhETEZOQlFWTXNSVUZCUlN4SlFVRkpPMFZCUTJZc1VVRkJVU3hGUVVGRkxGRkJRVkU3UTBGMVNtNUNPenRCUkRGS1JDeEJRMHRGTEZsRVRGVXNRME5CV2l4SFFVRkhMRU5CUzBRc1EwRkJReXhEUVVGRE8wVkJRMEVzUzBGQlN5eEZVa1ZETEU5QlFVODdSVkZFWWl4bFFVRmxMRVZCUVVVc1NVRkJTVHREUVZWMFFqczdRVVJxUWtnc1FVNVBSU3haVFZCVkxFTkRRVm9zUjBGQlJ5eERRVXRFTEVOQlFVTXNRVkJGUVN4TlFVRk5MRVZOVUZRc1dVRkJXU3hEUTBGYUxFZEJRVWNzUTBGTFJDeERRVUZETEVGUVIwRXNUVUZCVFN4RFFVRkRPMFZQUlVvc1MwRkJTeXhGVWtSRExFOUJRVTg3UTBORGFFSTdPMEZQU1VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlJHUjRReXhCUTB0RkxGbEVURlVzUTBOQldpeEhRVUZITEVOQlMwUXNRMEZCUXl4RFFVRkRPMGxCVlVVc1QwRkJUeXhGUVVGRkxFMUJRVTA3UjBGRmJFSTdPenRCUVVORUxFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRTFCUVUwN1JVUnNRblJETEVGRFFVRXNXVVJCV1N4RFEwRmFMRWRCUVVjc1EwRkJRenRKUVcxQ1FTeE5RVUZOTEVWQlFVVXNUMEZCVHp0SFFYVkpiRUk3T3p0QlFYQkpReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4UlFVRlJPMFZFZEVKNFF5eEJRMEZCTEZsRVFWa3NRME5CV2l4SFFVRkhMRU5CUVVNN1NVRjFRa0VzVVVGQlVTeEZRVUZGTEV0QlFVczdTVUZEWml4SFFVRkhMRVZCUVVVc1EwRkJRenRKUVVOT0xFbEJRVWtzUlVGQlJTeEpRVUZKTzBsQlExWXNUMEZCVHl4RlFVRkZMRVZCUVVVN1NVRkRXQ3hMUVVGTExFVkJRVVVzUzBGQlN6dEpRVU5hTEUxQlFVMHNSVUZCUlN4TFFVRkxPMGxCUTJJc1ZVRkJWU3hGVW5aQ1RpeFBRVUZQTzBsUmQwSllMRTlCUVU4c1JVRkJSU3hUUVVGVE8wbEJRMnhDTEZOQlFWTXNSVUZCUlN4SlFVRkpPMGxCUTJZc1ZVRkJWU3hGUVVGRkxGRkJRVkU3UjBFd1NIWkNPMFZFTVVwRUxFRkRhME5KTEZsRWJFTlJMRU5EUVZvc1IwRkJSeXhIUVd0RFJ5eEhRVUZITEVOQlFVTTdTVUZEU2l4TlFVRk5MRVZCUVVVc1NVRkJTVHRKUVVOYUxGRkJRVkVzUlVGQlJTeEpRVUZKTzBkQlEyWTdSVVJ5UTB3c1FVTjFRMGtzV1VSMlExRXNRME5CV2l4SFFVRkhMRU5CZFVORExGTkJRVk1zUTBGQlF6dEpRVU5TTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGxCUTJJc1MwRkJTeXhGUVVGRkxFbEJRVWs3U1VGRFdDeFRRVUZUTEVWQlFVVXNTVUZCU1R0SFFVOW9RanRGUkdwRVRDeEJRelJEVFN4WlJEVkRUU3hEUTBGYUxFZEJRVWNzUTBGMVEwTXNVMEZCVXl4RFFVdFFMRU5CUVVNN1JVUTFRMUFzV1VGQldTeERRMEZhTEVkQlFVY3NRMEYxUTBNc1UwRkJVeXhEUVUxUUxFbEJRVWtzUTBGQlF6dEpRVU5JTEU5QlFVOHNSVUZCUlN4TFFVRkxPMGxCUTJRc1QwRkJUeXhGUVVGRkxGRkJRVkU3UjBGRGJFSTdSVVJvUkZBc1FVTnZSRTBzV1VSd1JFMHNRME5CV2l4SFFVRkhMRU5CYlVSRExFdEJRVXNzUjBGRFJDeEZRVUZGTEVOQlFVTTdTVUZEU0N4UFFVRlBMRVZCUVVVc1NVRkJTVHRKUVVOaUxHVkJRV1VzUlVGQlJTeGhRVUZoTzBsQlF6bENMRk5CUVZNc1JVRkJSU3hKUVVGSk8wbEJRMllzVFVGQlRTeEZRVUZGTEUxQlFVMDdSMEUyUTJZN1JVUnlSMUFzUVVNd1JGRXNXVVF4UkVrc1EwTkJXaXhIUVVGSExFTkJiVVJETEV0QlFVc3NSMEZEUkN4RlFVRkZMRWRCVFVFc1EwRkJReXhEUVVGRE8wbEJRMFlzVTBGQlV5eEZRVUZGTEVOQlFVTTdSMEZEWWp0RlJEVkVWQ3hCUXpoRVVTeFpSRGxFU1N4RFEwRmFMRWRCUVVjc1EwRnRSRU1zUzBGQlN5eEhRVU5FTEVWQlFVVXNSMEZWUVN4TlFVRk5MRU5CUVVNN1NVRkRVQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEpRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMGxCUTFvc1VVRkJVU3hGUVVGRkxGRkJRVkU3U1VGRGJFSXNaMEpCUVdkQ0xFVkJRVVVzVjBGQlZ6dEpRVU0zUWl4TlFVRk5MRVZCUVVVc1EwRkJRenRIUVhGQ1ZqdEZSSGhHVkN4QlEzRkZWU3haUkhKRlJTeERRMEZhTEVkQlFVY3NRMEZ0UkVNc1MwRkJTeXhIUVVORUxFVkJRVVVzUjBGVlFTeE5RVUZOTEVGQlQwd3NUMEZCVHl4RlJISkZiRUlzV1VGQldTeERRMEZhTEVkQlFVY3NRMEZ0UkVNc1MwRkJTeXhIUVVORUxFVkJRVVVzUjBGVlFTeE5RVUZOTEVGQlVVd3NUVUZCVFN4RFFVRkRPMGxCUTA0c1MwRkJTeXhGUVVGRkxFbEJRVWs3U1VGRFdDeE5RVUZOTEVWQlFVVXNSMEZCUnp0SlFVTllMRkZCUVZFc1JVRkJSU3hSUVVGUk8wbEJRMnhDTEVkQlFVY3NSVUZCUlN4SlFVRkpPMGxCUTFRc1NVRkJTU3hGUVVGRkxFZEJRVWM3U1VGRFZDeFBRVUZQTEVWQlFVVXNSVUZCUlR0SlFVTllMRlZCUVZVc1JWSnlSVm9zVDBGQlR6dEpVWE5GVEN4VlFVRlZMRVZCUVVVc1VVRkJVVHRIUVVOeVFqdEZSQzlGV0N4QlEybEdWU3haUkdwR1JTeERRMEZhTEVkQlFVY3NRMEZ0UkVNc1MwRkJTeXhIUVVORUxFVkJRVVVzUjBGVlFTeE5RVUZOTEVGQmJVSk1MRTFCUVUwc1EwRkJRenRKUVVOT0xGTkJRVk1zUlVGQlJTeGhRVUZoTzBkQlEzcENPMFZFYmtaWUxFRkRjVVpWTEZsRWNrWkZMRU5EUVZvc1IwRkJSeXhEUVcxRVF5eExRVUZMTEVkQlEwUXNSVUZCUlN4SFFWVkJMRTFCUVUwc1EwRjFRazRzU1VGQlNTeERRVUZETzBsUWRrVmlMRkZCUVZFc1JVRkJSU3hSUVVGUk8wbEJRMnhDTEV0QlFVc3NSVUZCUlN4SFFVRkhPMGxCUTFZc1RVRkJUU3hGUVVGRkxFZEJRVWM3U1VGRFdDeFBRVUZQTEVWQlFVVXNRMEZCUXp0SlFVTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wbEJRMW9zVVVGQlVTeEZRVUZGTEUxQlFVMDdTVUZEYUVJc1NVRkJTU3hGUVVGRkxHZENRVUZoTzBsQlEyNUNMRTFCUVUwc1JVRkJSU3hEUVVGRE8wZFBhMFZCTzBWRWRrWllMRUZETkVaWkxGbEVOVVpCTEVORFFWb3NSMEZCUnl4RFFXMUVReXhMUVVGTExFZEJRMFFzUlVGQlJTeEJRWE5EUkN4clFrRkJhMElzUjBGRFppeE5RVUZOTEVGQlEwd3NUVUZCVFN4RFFVRkRPMGxCUTA0c1UwRkJVeXhGUVVGRkxGbEJRVms3UjBGRGVFSTdSVVE1Um1Jc1FVTnBSMVVzV1VScVIwVXNRME5CV2l4SFFVRkhMRU5CYlVSRExFdEJRVXNzUjBGRFJDeEZRVUZGTEVGQmMwTkVMR3RDUVVGclFpeERRVTlxUWl4VFFVRlRMRU5CUVVNN1NVRkRVaXhQUVVGUExFVkJRVVVzUzBGQlN6dEhRVU5tT3pzN1FVRlBVQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZFTVVkNFF5eEJRM2xIUlN4WlJIcEhWU3hEUTBGYUxFZEJRVWNzUTBGNVIwUXNSVUZCUlN4QlFVRkJMRXRCUVVzc1EwRkJRenRKUVVWS0xFOUJRVThzUlVGQlJTeEpRVUZKTzBsQlEySXNaVUZCWlN4RlFVRkZMRkZCUVZFN1IwRTBRalZDT3pzN1FVUjRTVWdzUVVOblNFMHNXVVJvU0Uwc1EwTkJXaXhIUVVGSExFTkJlVWRFTEVWQlFVVXNRVUZCUVN4TFFVRkxMRWRCVFVnc1JVRkJSU3hIUVVOQkxFTkJRVU1zUTBGQlF6dEZRVU5HTEdOQlFXTXNSVUZCUlN4VFFVRlRPMFZCUTNwQ0xHTkJRV01zUlVGQlJTeE5RVUZOTzBOQlEzWkNPenRCUVVWRUxFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRTFCUVUwN1JVUnlTREZETEVGRGVVaFZMRmxFZWtoRkxFTkRRVm9zUjBGQlJ5eERRWGxIUkN4RlFVRkZMRUZCUVVFc1MwRkJTeXhIUVUxSUxFVkJRVVVzUVVGUFF5eE5RVUZOTEVOQlIwd3NVMEZCVXl4RlJIcElia0lzV1VGQldTeERRMEZhTEVkQlFVY3NRMEY1UjBRc1JVRkJSU3hCUVVGQkxFdEJRVXNzUjBGTlNDeEZRVUZGTEVGQlVVTXNhMEpCUVd0Q0xFTkJSV3BDTEZOQlFWTXNSVVI2U0c1Q0xGbEJRVmtzUTBOQldpeEhRVUZITEVOQmVVZEVMRVZCUVVVc1FVRkJRU3hMUVVGTExFZEJUVWdzUlVGQlJTeEJRVk5ETEhOQ1FVRnpRaXhEUVVOeVFpeFRRVUZUTEVOQlFVTTdTVUZEVWl4UFFVRlBMRVZCUVVVc1NVRkJTVHRIUVVOa096czdRVVF6U0Znc1FVTnRTVkVzV1VSdVNVa3NRME5CV2l4SFFVRkhMRU5CZVVkRUxFVkJRVVVzUVVGQlFTeExRVUZMTEVOQmRVSk1MRVZCUVVVc1FVRkRReXhyUWtGQmEwSXNSMEZGWml4RFFVRkRMRVZFYmtsWUxGbEJRVmtzUTBOQldpeEhRVUZITEVOQmVVZEVMRVZCUVVVc1FVRkJRU3hMUVVGTExFTkJkVUpNTEVWQlFVVXNRVUZGUXl4elFrRkJjMElzUjBGRGJrSXNRMEZCUXl4RFFVRkRPMFZCUTBZc1YwRkJWeXhGUVVGRkxFZEJRVWM3UTBGRGFrSTdPMEZCVFV3c1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlJETkplRU1zUVVOMVEwa3NXVVIyUTFFc1EwTkJXaXhIUVVGSExFTkJkVU5ETEZOQlFWTXNRMEZ0UjBRN1NVRkZUaXhQUVVGUExFVkJRVVVzU1VGQlNUdEpRVU5pTEdWQlFXVXNSVUZCUlN4UlFVRlJPMGxCUTNwQ0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBsQlEyeENMRWRCUVVjc1JVRkJSU3hKUVVGSk8wbEJRMVFzUzBGQlN5eEZRVUZGTEVOQlFVTTdTVUZEVWl4VFFVRlRMRVZCUVVVc1NVRkJTVHRIUVZGc1FqdEZSSHBLU0N4QlF6UkRUU3haUkRWRFRTeERRMEZhTEVkQlFVY3NRMEYxUTBNc1UwRkJVeXhEUVV0UUxFTkJRVU03UlVRMVExQXNXVUZCV1N4RFEwRmFMRWRCUVVjc1EwRjFRME1zVTBGQlV5eERRVTFRTEVsQlFVa3NRMEYxUjBNN1NVRkRTQ3hQUVVGUExFVkJRVVVzVjBGQlZ6dEpRVU53UWl4UFFVRlBMRVZCUVVVc1MwRkJTenRIUVVObU96czdRVU4yU2xBc1FVRkJRU3haUVVGWkxFTkJRVU03UlVGRFdDeFBRVUZQTEVWVVEwRXNTVUZCU1N4RFUwUk5MRU5CUVVNN1EwRnJSRzVDT3p0QlFXNUVSQ3hCUVVkRkxGbEJTRlVzUTBGSFZpeERRVUZETEVOQlFVTTdSVUZEUVN4TFFVRkxMRVZVU1VNc1QwRkJUenRGVTBoaUxHVkJRV1VzUlVGQlJTeEpRVUZKTzBOQlNYUkNPenRCUVZSSUxFRlNUMFVzV1ZGUVZTeERRVWRXTEVOQlFVTXNRVkpKUVN4TlFVRk5MRVZSVUZRc1dVRkJXU3hEUVVkV0xFTkJRVU1zUVZKTFFTeE5RVUZOTEVOQlFVTTdSVkZFU2l4bFFVRmxMRVZCUVVVc1UwRkJVenREVWtjM1FqczdRVkZXU0N4QlFWVkZMRmxCVmxVc1IwRlZVaXhIUVVGSExFTkJRVU03UlZKVVRpeFRRVUZUTEVWRVFVd3NUVUZCVFR0RlEwTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVDBGQlR5eEZRVUZGTEVOQlFVTXNRMFJFU0N4SlFVRkpPMFZUVlZRc1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeGxRVUZsTEVWQlFVVXNZVUZCWVR0RFFVTXZRanM3UVVGa1NDeEJRV2RDUlN4WlFXaENWU3hEUVdkQ1ZpeFJRVUZSTEVOQlFVTTdSVUZEVUN4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxGVkJRVlVzUlVGQlJTeE5RVUZOTzBWQlEyeENMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzWTBGQll5eEZRVUZGTEZOQlFWTTdSVUZEZWtJc1kwRkJZeXhGUVVGRkxFMUJRVTA3UlVGRGRFSXNTMEZCU3l4RlZHUkRMRTlCUVU4N1ExTnZRbVE3TzBGQk5VSklMRUZCZDBKSkxGbEJlRUpSTEVOQlowSldMRkZCUVZFc1EwRlJUaXhEUVVGRExFTkJRVU03UlVGRFFTeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRk5CUVZNc1JVRkJSU3hKUVVGSk8wTkJRMmhDT3p0QlFUTkNUQ3hCUVd0RFJTeFpRV3hEVlN4RFFXdERWaXhQUVVGUExFTkJRVU03UlVGRFRpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RFFXVmtPenRCUVd4RVNDeEJRVzlEU1N4WlFYQkRVU3hEUVd0RFZpeFBRVUZQTEVOQlJVd3NRMEZCUXl4RFFVRkRPMFZCUTBFc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRmRCUVZjc1JVRkJSU3hKUVVGSk8wTkJWV3hDT3p0QlFXcEVUQ3hCUVhsRFRTeFpRWHBEVFN4RFFXdERWaXhQUVVGUExFTkJSVXdzUTBGQlF5eERRVXRETEVkQlFVY3NRMEZCUXp0RlFVTkdMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVFVGQlRTeEZRVUZGTEVsQlFVazdRMEZEWWpzN1FVRTFRMUFzUVVFNFEwMHNXVUU1UTAwc1EwRnJRMVlzVDBGQlR5eERRVVZNTEVOQlFVTXNRMEZWUXl4SlFVRkpMRU5CUVVNN1JWSm9RMVFzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1MwRkJTeXhGUVVGRkxFZEJRVWM3UlVGRFZpeE5RVUZOTEVWQlFVVXNSMEZCUnp0RlFVTllMRTlCUVU4c1JVRkJSU3hEUVVGRE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeEpRVUZKTEVWQlFVVXNaMEpCUVdFN1JVRkRia0lzVFVGQlRTeEZRVUZGTEVOQlFVTTdRMUV5UWtvN08wRkJTMUFzUVVGRFJTeFpRVVJWTEVOQlExWXNSMEZCUnl4RFFVRkRPMFZCUTBZc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRWxCUVVrc1JWUTVRMGNzVDBGQlR6dEZVeXREWkN4UFFVRlBMRVZCUVVVc1MwRkJTenREUVVObU96dEJRek5FU0N4QlFVTkZMRWxCUkVVc1IwRkRRU3hKUVVGSkxFTkJRVU03UlVGRFRDeFBRVUZQTEVWV05FSkxMRWxCUVVrc1ExVTFRbEVzUTBGQlF6dERRVzFDTVVJN08wRkJha0pETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVGS2VFTXNRVUZEUlN4SlFVUkZMRWRCUTBFc1NVRkJTU3hEUVVGRE8wbEJTVWdzVDBGQlR5eEZWakJDUlN4SlFVRkpMRU5WTVVKVkxFTkJRVU03UjBGblFqTkNPenM3UVVGeVFrZ3NRVUZSU1N4SlFWSkJMRWRCUTBFc1NVRkJTU3hIUVU5R0xFOUJRVThzUTBGQlF6dEZRVXRTTEV0QlFVc3NSVlpNUkN4UFFVRlBPME5WV1ZvN08wRkJjRUpNTEVGQlUwMHNTVUZVUml4SFFVTkJMRWxCUVVrc1IwRlBSaXhQUVVGUExFZEJRMHdzUjBGQlJ5eERRVUZETzBWVVVsWXNVMEZCVXl4RlJFRk1MRTFCUVUwN1JVTkRWaXhOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEU5QlFVOHNSVUZCUlN4RFFVRkRMRU5FUkVnc1NVRkJTVHREVlZOT096dEJRVmhRTEVGQlpVMHNTVUZtUml4SFFVTkJMRWxCUVVrc1IwRlBSaXhQUVVGUExFRkJUMDRzVjBGQlZ5eERRVUZETzBWQlExZ3NWVUZCVlN4RlZsSlNMRTlCUVU4N1JWVlRWQ3hMUVVGTExFVldXRXdzVDBGQlR6dEZWVmxRTEU5QlFVOHNSVUZCUlN4TlFVRk5PME5CUTJoQ096dEJRVmRRTEVGQlFVRXNZMEZCWXl4RFFVRkRPMFZCUTJJc1QwRkJUeXhGUVVGRkxFMUJRVTA3UTBGTGFFSTdPMEZCU0VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFVaDBReXhCUVVGQkxHTkJRV01zUTBGQlF6dEpRVWxZTEU5QlFVOHNSVUZCUlN4TlFVRk5PMGRCUld4Q096czdRVU5xUTBRc1FVRklRU3hoUVVkaExFTkJTVmdzV1VGQldTeERRVU5XTEZOQlFWTXNRMEZSVUN4SFFVRkhMRVZCSzBSVUxHTkJRV01zUTBGRFdpeERRVUZETEVOQk9FSkRMRWRCUVVjc1EwRTVSMGM3UlZaNVFsSXNWVUZCVlN4RlFVRkZMRWxCUVVrN1JVRkRhRUlzVTBGQlV5eEZRVUZGTEVsQlFVazdSVUZEWml4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NUMEZCVHl4RlFVRkZMRXRCUVVzN1JVRkRaQ3hOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVVZVTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFZEJRVWNzUlVGQlJTeEhRVUZITzBWQlExSXNTVUZCU1N4RlFVRkZMRWRCUVVjN1JVRkRWQ3hUUVVGVExFVkJRVVVzY1VKQlFXOUNPME5WYWtOb1F6czdRVlp0UXpoQ0xGTkJRVU1zUlVGQmJrSXNWVUZCVlN4RlFVRkZMRXRCUVVzN1JWVnNRemxDTEVGQlNFRXNZVUZIWVN4RFFVbFlMRmxCUVZrc1EwRkRWaXhUUVVGVExFTkJVVkFzUjBGQlJ5eEZRU3RFVkN4alFVRmpMRU5CUTFvc1EwRkJReXhEUVRoQ1F5eEhRVUZITEVOQk9VZEhPMGxXYzBOT0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBsQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1NVRkRXaXhWUVVGVkxFVkJRVVVzUzBGQlN6dEhWWFJEY0VJN096dEJRVU5FTEVGQlFVRXNZVUZCWVN4RFFVRkRPMFZCUTFvc1RVRkJUU3hGUVVGRkxFdEJRVXM3UlVGRFlpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RFFYZEZia0k3TzBGQk1VVkVMRUZCUzBrc1lVRk1VeXhEUVVsWUxGbEJRVmtzUTBGRFZpeFRRVUZUTEVOQlFVTTdSVUZEVWl4TlFVRk5MRVZCUVVVc1MwRkJTenREUVZWa096dEJRV2hDVEN4QlFWRk5MR0ZCVWs4c1EwRkpXQ3haUVVGWkxFTkJRMVlzVTBGQlV5eEhRVWRNTEVkQlFVY3NRMEZCUXp0RlFVTktMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVVVGQlVTeEZRVUZGTEZGQlFWRTdRMEZEYmtJN08wRkJXRkFzUVVGdFFrMHNZVUZ1UWs4c1EwRkpXQ3haUVVGWkxFTkJZMVlzVVVGQlVTeERRVU5PTEUxQlFVMHNRMEZCUXp0RlFVTk1MRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVkQlFVY3NSVUZCUlN4blFrRkJaMEk3UlVGRGNrSXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEdkQ1FVRm5RaXhGUVVGRkxEQkNRVUV3UWp0RlFVTTFReXhsUVVGbExFVkJRVVVzVDBGQlR6dEZRVU40UWl4cFFrRkJhVUlzUlVGQlJTeFRRVUZUTzBWQlF6VkNMRlZCUVZVc1JVRkJSU3hSUVVGUk8wTkJaWEpDT3p0QlFURkRVQ3hCUVRaQ1VTeGhRVGRDU3l4RFFVbFlMRmxCUVZrc1EwRmpWaXhSUVVGUkxFTkJRMDRzVFVGQlRTeERRVlZLTEVsQlFVa3NRMEZCUXp0RlZteENXQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TFFVRkxMRVZCUVVVc1IwRkJSenRGUVVOV0xFMUJRVTBzUlVGQlJTeEhRVUZITzBWQlExZ3NUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEZGQlFWRXNSVUZCUlN4TlFVRk5PMFZCUTJoQ0xFbEJRVWtzUlVGQlJTeG5Ra0ZCWVR0RlFVTnVRaXhOUVVGTkxFVkJRVVVzUTBGQlF6dERWV0ZHT3p0QlFTOUNWQ3hCUVdsRFVTeGhRV3BEU3l4RFFVbFlMRmxCUVZrc1EwRmpWaXhSUVVGUkxFTkJRMDRzVFVGQlRTeEJRV05JTEUxQlFVMHNSVUZxUTJZc1lVRkJZU3hEUVVsWUxGbEJRVmtzUTBGalZpeFJRVUZSTEVOQlEwNHNUVUZCVFN4QlFXVklMRTlCUVU4c1EwRkJRenRGUVVOUUxFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkRaRHM3UVVGeVExUXNRVlpKUlN4aFZVcFhMRU5CU1Znc1dVRkJXU3hEUVdOV0xGRkJRVkVzUTBGRFRpeE5RVUZOTEVGV1psUXNUVUZCVFN4RlZVcFVMR0ZCUVdFc1EwRkpXQ3haUVVGWkxFTkJZMVlzVVVGQlVTeERRVU5PTEUxQlFVMHNRVlprVkN4TlFVRk5MRU5CUVVNN1JWVnRRMEVzVDBGQlR5eEZRVUZGTEVWQlFVVTdRMVpxUTJ4Q096dEJWVkJJTEVGQk5FTk5MR0ZCTlVOUExFTkJTVmdzV1VGQldTeERRV05XTEZGQlFWRXNRMEV3UWs0c1UwRkJVeXhEUVVGRE8wVkJRMUlzU1VGQlNTeEZXRGxEU0N4SlFVRkpPMFZYSzBOTUxGTkJRVk1zUlVGQlJTeGpRVUZqTzBOQlF6RkNPenRCUVM5RFVDeEJRV2xFVFN4aFFXcEVUeXhEUVVsWUxGbEJRVmtzUTBGalZpeFJRVUZSTEVOQkswSk9MRk5CUVZNc1EwRkJRenRGUVVOU0xFdEJRVXNzUlZodVJFb3NTVUZCU1R0RFYyOUVUanM3UVVGdVJGQXNRVUYxUkVVc1lVRjJSRmNzUTBGMVJGZ3NXVUZCV1N4RFFVRkRPMFZCUTFnc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEUxQlFVMHNSVmcxUkVRc1NVRkJTVHRGVnpaRVZDeEpRVUZKTEVWQlFVVXNaMEpCUVdkQ08wVkJRM1JDTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1owSkJRV2RDTEVWQlFVVXNNRUpCUVRCQ08wVkJRelZETEdWQlFXVXNSVUZCUlN4UFFVRlBPMFZCUTNoQ0xHbENRVUZwUWl4RlFVRkZMRk5CUVZNN1JVRkROVUlzVlVGQlZTeEZRVUZGTEZGQlFWRTdSVUZEY0VJc1UwRkJVeXhGUVVGRkxHRkJRV0U3UlVGRGVFSXNVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzVjBGQlZ5eEZRVUZGTEZOQlFWTTdRMEZMZGtJN08wRkJla1ZJTEVGV1NVVXNZVlZLVnl4RFFYVkVXQ3haUVVGWkxFRldia1JZTEUxQlFVMHNSVlZLVkN4aFFVRmhMRU5CZFVSWUxGbEJRVmtzUVZac1JGZ3NUVUZCVFN4RFFVRkRPMFZWYTBWS0xFOUJRVThzUlVGQlJTeEZRVUZGTzBOV2FFVmtPenRCVlhGRlNDeEJRVU5GTEdOQlJGa3NRMEZEV2l4RFFVRkRMRU5CUVVNN1JVRkRRU3hQUVVGUExFVkJRVVVzU1VGQlNUdEZRVU5pTEdOQlFXTXNSVUZCUlN4TlFVRk5PMFZCUTNSQ0xHVkJRV1VzUlVGQlJTeE5RVUZOTzBWQlEzWkNMRmRCUVZjc1JVRkJSU3hOUVVGTk8wVkJRMjVDTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFMUJRVTBzUlVGQlJTeExRVUZMTzBWQlEySXNVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzVTBGQlV5eEZRVUZGTEVsQlFVazdSVUZEWml4TFFVRkxMRVZZYmtaRUxFOUJRVTg3UlZkdlJsZ3NWVUZCVlN4RlFVRkZMRTFCUVUwN1JVRkRiRUlzVjBGQlZ5eEZRVUZGTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhEV0d4R2FFSXNUMEZCVHp0RlYyMUdaaXhsUVVGbExFVkJRVVVzU1VGQlNUdEZRVU55UWl4WFFVRlhMRVZZTDBWSUxHVkJRV1VzUlVGQlJTeFBRVUZQTzBWWFowWm9ReXhYUVVGWExFVkJRVVVzUjBGQlJ6dEZRVU5vUWl4VlFVRlZMRVZZZGtaS0xFOUJRVTg3UTFkcFNHUTdPMEZCZUVKRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRnNRblpETEVGQlEwVXNZMEZFV1N4RFFVTmFMRU5CUVVNc1EwRkJRenRKUVd0Q1JTeFRRVUZUTEVWQlFVVXNTVUZCU1R0SFFYVkNiRUk3T3p0QlFYQkNReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZCZEVKNFF5eEJRVU5GTEdOQlJGa3NRMEZEV2l4RFFVRkRMRU5CUVVNN1NVRnpRa1VzVTBGQlV5eEZRVUZGTEV0QlFVczdSMEZ0UW01Q096czdRVUV4UTBnc1FVRXdRa2tzWTBFeFFsVXNRMEZEV2l4RFFVRkRMRU5CZVVKRExFbEJRVWtzUTBGQlF6dEZRVU5JTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeERRVUZETzBOQlExZzdPMEZCTjBKTUxFRkJLMEpKTEdOQkwwSlZMRU5CUTFvc1EwRkJReXhEUVRoQ1F5eEhRVUZITEVOQlFVTTdSVUZGUml4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xGVkJRVlVzUlVGQlJTeFJRVUZSTzBWQlEzQkNMRTFCUVUwc1JVRkJSU3hWUVVGVk8wTkJUVzVDT3p0QlFVbzRRaXhUUVVGRExFVkJRVzVDTEZWQlFWVXNSVUZCUlN4TFFVRkxPMFZCY2tOc1F5eEJRU3RDU1N4alFTOUNWU3hEUVVOYUxFTkJRVU1zUTBFNFFrTXNSMEZCUnl4RFFVRkRPMGxCVDBFc1MwRkJTeXhGUVVGRkxFbEJRVWs3U1VGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0SFFVVm1PenM3UVVGNlEwd3NRVUU0UTBrc1kwRTVRMVVzUTBFMlExb3NUMEZCVHl4RFFVRkRMRU5CUVVNc1EwRkRVQ3hIUVVGSExFTkJRVU03UlVGRFJpeE5RVUZOTEVWQlFVVXNUMEZCVHp0RFFVTm9RanM3UVVNdlNFd3NRVUZCUVN4aFFVRmhMRU5CUVVNN1JVRkRXaXhOUVVGTkxFVkJRVVVzVFVGQlRUdERRVGhEWmpzN1FVRTFRME1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVVoeVF5eEJRVUZCTEdGQlFXRXNRMEZCUXp0SlFVbFdMRTlCUVU4c1JVRkJSU3hKUVVGSk8wbEJRMklzWlVGQlpTeEZRVUZGTEZWQlFWVTdTVUZETTBJc1UwRkJVeXhGUVVGRkxFbEJRVWs3UjBGNVEyeENPenM3UVVGMFEwTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRVlIwUXl4QlFVRkJMR0ZCUVdFc1EwRkJRenRKUVZWV0xFMUJRVTBzUlVGQlJTeE5RVUZOTzBkQmNVTnFRanM3TzBGQkwwTkVMRUZCWVVVc1lVRmlWeXhGUVdGWUxFRkJRVUVzUzBGQlF5eEZRVUZQTEV0QlFVc3NRVUZCV2l4RlFVRmpPMFZCUTJJc1QwRkJUeXhGUVVGRkxFZEJRVWM3UTBGTFlqczdRVUZJUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQmFFSjRReXhCUVdGRkxHRkJZbGNzUlVGaFdDeEJRVUZCTEV0QlFVTXNSVUZCVHl4TFFVRkxMRUZCUVZvc1JVRkJZenRKUVVsWUxFOUJRVThzUlVGQlJTeEpRVUZKTzBkQlJXaENPenM3UVVGdVFrZ3NRVUZ4UWtVc1lVRnlRbGNzUTBGeFFsZ3NUMEZCVHl4RFFVRkRPMFZCUTA0c1QwRkJUeXhGUVVGRkxFdEJRVXM3UlVGRFpDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRkZCUVZFc1JVRkJSU3hOUVVGTk8wTkJRMnBDT3p0QlFYcENTQ3hCUVRKQ1JTeGhRVE5DVnl4RFFUSkNXQ3hIUVVGSExFTkJRVU03UlVGRFJpeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVDBGQlR5eEZRVUZGTEV0QlFVczdRMEZOWmpzN1FVRktOa0lzVTBGQlF5eEZRVUZ1UWl4VlFVRlZMRVZCUVVVc1MwRkJTenRGUVdoREwwSXNRVUV5UWtVc1lVRXpRbGNzUTBFeVFsZ3NSMEZCUnl4RFFVRkRPMGxCVFVFc1RVRkJUU3hGUVVGRkxFbEJRVWs3U1VGRFdpeFZRVUZWTEVWQlFVVXNTMEZCU3p0SFFVVndRanM3TzBGQlJVUXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVDBGQlR6dEZRWFJEZGtNc1FVRjNRMDBzWVVGNFEwOHNRMEYxUTFRc1RVRkJUU3hEUVVOS0xFZEJRVWNzUTBGQlF6dEpRVU5HTEV0QlFVc3NSVUZCUlN4SlFVRkpPMGxCUTFnc1ZVRkJWU3hGUVVGRkxFdEJRVXM3U1VGRGFrSXNUVUZCVFN4RlFVRkZMRWxCUVVrN1IwRkRZanM3TzBGQlMxQXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRVU5xUXl4QlFVRkJMRTFCUVUwc1EwRkJRenRKUVVOTUxFdEJRVXNzUlVGQlJTeE5RVUZOTzBsQlEySXNTVUZCU1N4RlFVRkZMRlZCUVZVN1IwRkRha0k3UlVGRlJDeEJRVUZCTEUxQlFVMHNRMEZCUXp0SlFVTk1MRXRCUVVzc1JVRkJSU3hOUVVGTk8wbEJRMklzU1VGQlNTeEZRVUZGTEZWQlFWVTdSMEZEYWtJN1JVRkZSQ3hCUVVGQkxFMUJRVTBzUTBGQlF6dEpRVU5NTEV0QlFVc3NSVUZCUlN4SlFVRkpPMGxCUTFnc1NVRkJTU3hGUVVGRkxGRkJRVkU3UjBGRFpqczdPMEZEYUVSSUxFRkJRVUVzU1VGQlNTeERRVUZETzBWQlEwZ3NTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hqUVVGakxFVkJRVVVzUjBGQlJ6dEZRVU51UWl4UlFVRlJMRVZCUVVVc1VVRkJVVHREUVZOdVFqczdRVUZhUkN4QlFVdEZMRWxCVEVVc1EwRkxSaXhOUVVGTkxFTkJRVU03UlVGRFRDeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1NVRkJTU3hGUVVGRkxFTkJRVU03UlVGRFVDeEhRVUZITEVWQlFVVXNRMEZCUXp0RFFVTlFPenRCUTNwQ1NDeEJRVUZCTEdGQlFXRXNRMEZCUXp0RlFVTmFMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEZWQlFWVXNSVUZCUlN4TFFVRkxPMFZCUTJwQ0xGRkJRVkVzUlVGQlJTeE5RVUZOTzBWQlEyaENMR0ZCUVdFc1JVRkJSU3hKUVVGSk8wTkJLMEp3UWpzN1FVRnVRMFFzUVVGTlJTeGhRVTVYTEVOQlRWZ3NSMEZCUnl4RFFVRkRPMFZCUTBZc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRTlCUVU4c1JVRkJSU3hMUVVGTE8wTkJRMlk3TzBGQlZrZ3NRVUZaUlN4aFFWcFhMRU5CV1Znc1kwRkJZeXhEUVVGRE8wVkJRMklzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeEpRVUZKTEVWQlFVVXNRMEZCUXp0RlFVTlFMRTFCUVUwc1JVRkJSU3hEUVVGRE8wVkJRMVFzUzBGQlN5eEZaRnBFTEU5QlFVODdSV05oV0N4WFFVRlhMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eEhRVUZITEVOa1pHaENMRTlCUVU4N1JXTmxXQ3hqUVVGakxFVkJRVVVzU1VGQlNUdERRV1Z5UWpzN1FVRnNRMGdzUVVGeFFra3NZVUZ5UWxNc1EwRlpXQ3hqUVVGakxFTkJVMW9zU1VGQlNUdEJRWEpDVWl4aFFVRmhMRU5CV1Znc1kwRkJZeXhEUVZWYUxFdEJRVXNzUTBGQlF6dEZRVU5LTEU5QlFVOHNSVUZCUlN4TFFVRkxPME5CUTJZN08wRkJlRUpNTEVGQk1FSkpMR0ZCTVVKVExFTkJXVmdzWTBGQll5eERRV05hTEV0QlFVc3NRMEZCUXp0RlFVTktMRk5CUVZNc1JVRkJSU3hIUVVGSE8wVkJRMlFzWTBGQll5eEZRVUZGTEVsQlFVazdRMEZEY2tJN08wRkJOMEpNTEVGQkswSkpMR0ZCTDBKVExFTkJXVmdzWTBGQll5eEhRVzFDVml4SFFVRkhMRU5CUVVNN1JXSXZRbElzVTBGQlV5eEZSRUZNTEUxQlFVMDdSVU5EVml4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETEVORVJFZ3NTVUZCU1R0RFkyZERVanM3UVVGSlRDeEJRVUZCTEZkQlFWY3NRMEZCUXp0RlFVTldMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVsQlFVa3NSVUZCUlN4RFFVRkRPMFZCUTFBc1RVRkJUU3hGUVVGRkxFTkJRVU03UlVGRFZDeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTlCUVU4c1JVRkJSU3huUWtGQlowSTdSVUZEZWtJc1MwRkJTeXhGWkhSRFF5eFBRVUZQTzBWamRVTmlMRlZCUVZVc1JVRkJSU3hSUVVGUk8wVkJRM0JDTEZkQlFWY3NSVUZCUlN4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTJSNlEyeENMRTlCUVU4N1EyTXdSR1E3TzBGQmVrSkVMRUZCVlVVc1YwRldVeXhEUVZWVUxFVkJRVVVzUTBGQlF6dEZRVU5FTEZOQlFWTXNSVUZCUlN4SlFVRkpPMFZCUTJZc1kwRkJZeXhGUVVGRkxGTkJRVk03UTBGTE1VSTdPMEZCU0VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFXUjRReXhCUVZWRkxGZEJWbE1zUTBGVlZDeEZRVUZGTEVOQlFVTTdTVUZMUXl4VFFVRlRMRVZCUVVVc1NVRkJTVHRIUVVWc1FqczdPMEZCYWtKSUxFRkJiVUpGTEZkQmJrSlRMRU5CYlVKVUxFdEJRVXNzUTBGQlF6dEZRVU5LTEZkQlFWY3NSV1ExUTBnc1pVRkJaU3hGUVVGRkxFOUJRVTg3UldNMlEyaERMRmRCUVZjc1JVRkJSU3hUUVVGbE8wVkJRelZDTEZkQlFWY3NSV1F4UTFJc1IwRkJSenRGWXpKRFRpeFRRVUZUTEVWQlFVVXNUVUZCWlR0RFFVTXpRanM3UVVGSFNDeEJRVU5GTEdGQlJGY3NSMEZEVkN4SFFVRkhMRU5CUVVNN1JXSnFSVTRzVTBGQlV5eEZSRUZNTEUxQlFVMDdSVU5EVml4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETEVORVJFZ3NTVUZCU1R0RFkydEZWanM3UVVGSFNDeEJRVUZCTEdOQlFXTXNRMEZCUXp0RlFVTmlMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzY1VKQlFYRkNMRVZCUVVVc1VVRkJVVHRGUVVNdlFpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhWUVVGVkxFVkJRVVVzUjBGQlJ6dERRVXRvUWpzN1FVRlVSQ3hCUVUxRkxHTkJUbGtzUTBGTldpeEZRVUZGTEVOQlFVTTdSVUZEUkN4alFVRmpMRVZCUVVVc1UwRkJVenREUVVNeFFqczdRVUZQUkN4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQlNIUkRMRUZCUVVFc2FVSkJRV2xDTEVOQlFVTTdTVUZKWkN4UFFVRlBMRVZCUVVVc1RVRkJUVHRIUVVWc1FqczdPMEZCUlVRc1FVRkJRU3hoUVVGaExFTkJRVU03UlVGRFdpeFhRVUZYTEVWa09VVkVMR1ZCUVdVc1JVRkJSU3hQUVVGUE8wTmpORWx1UXpzN1FVRXZSRVFzUVVGRlJTeGhRVVpYTEVkQlJWUXNSMEZCUnl4RFFVRkRPMFZpTlVaT0xGTkJRVk1zUlVSQlRDeE5RVUZOTzBWRFExWXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhQUVVGUExFVkJRVVVzUTBGQlF5eERSRVJJTEVsQlFVazdRMk0yUmxZN08wRkJTa2dzUVVGTlJTeGhRVTVYTEVOQlRWZ3NSMEZCUnl4RFFVRkRPMFZCUTBZc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRTlCUVU4c1JVRkJSU3hMUVVGTE8wTkJRMlk3TzBGQlZrZ3NRVUZaUlN4aFFWcFhMRU5CV1Znc1QwRkJUeXhEUVVGRE8wVkJRMDRzVDBGQlR5eEZRVUZGTEVkQlFVYzdRMEZ0UW1JN08wRkJha0pETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGbWRrTXNRVUZaUlN4aFFWcFhMRU5CV1Znc1QwRkJUeXhEUVVGRE8wbEJTVW9zUzBGQlN5eEZRVUZGTEUxQlFVMDdTVUZEWWl4SlFVRkpMRVZCUVVVc1ZVRkJWVHRIUVdWdVFqczdPMEZCV2tNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFYQkNlRU1zUVVGWlJTeGhRVnBYTEVOQldWZ3NUMEZCVHl4RFFVRkRPMGxCVTBvc1QwRkJUeXhGUVVGRkxFbEJRVWs3UjBGWGFFSTdPenRCUVZCSExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjZRbnBETEVGQmQwSkpMR0ZCZUVKVExFTkJXVmdzVDBGQlR5eEJRVmxLTEZWQlFWY3NRMEZCUVN4TlFVRk5MRVZCUVVVN1NVRkZhRUlzVTBGQlV5eEZRVUZGTEdsQ1FVRnBRanRIUVVzdlFqczdPMEZCU0VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFUVkNNVU1zUVVGM1Fra3NZVUY0UWxNc1EwRlpXQ3hQUVVGUExFRkJXVW9zVlVGQlZ5eERRVUZCTEUxQlFVMHNSVUZCUlR0SlFVdG9RaXhUUVVGVExFVkJRVVVzYVVKQlFXbENPMGRCUlM5Q096czdRVUV2UWt3c1FVRnJRMFVzWVVGc1ExY3NRMEZyUTFnc1EwRkJReXhEUVVGRE8wVkJRMEVzVDBGQlR5eEZRVUZGTEV0QlFVczdSVUZEWkN4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeExRVUZMTEVWa01VaEVMRTlCUVU4N1EyTnpTVm83TzBGQmFrUklMRUZCZFVOSkxHRkJka05UTEVOQmEwTllMRU5CUVVNc1FVRkxSU3hQUVVGUExFTkJRVU03UlVGRFVDeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JVRkJSU3hMUVVGTE8wVkJRMklzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1RVRkJUU3hGUVVGRkxFTkJRVU03UlVGRFZDeEpRVUZKTEVWQlFVVXNRMEZCUXp0RlFVTlFMRTlCUVU4c1JVRkJSU3hEUVVGRE8wVkJRMVlzVDBGQlR5eEZRVUZGTEVWQlFVVTdSVUZEV0N4VlFVRlZMRVZCUVVVc2JVVkJRVFpFTzBOQlF6RkZPenRCUVdoRVRDeEJRVzFFUlN4aFFXNUVWeXhEUVcxRVdDeExRVUZMTEVOQlFVTTdSVUZEU2l4VFFVRlRMRVZCUVVVc1NVRkJTVHREUVVOb1FqczdRVUZ5UkVnc1FVRjFSRVVzWVVGMlJGY3NRMEYxUkZnc1YwRkJWeXhEUVVGRE8wVkJRMVlzWTBGQll5eEZRVUZGTEVsQlFVazdRMEZEY2tJN08wRkJla1JJTEVGQk1rUkZMR0ZCTTBSWExFRkJNa1JXTEZGQlFWRXNRMEZCUXp0RlFVTlNMRlZCUVZVc1JXUXZTVW9zVDBGQlR6dEZZMmRLWWl4TFFVRkxMRVZrYkVwRUxFOUJRVTg3UTJOdFNsbzdPMEZCUjBnc1FVRkJRU3h0UWtGQmJVSXNRMEZCUXp0RlFVTnNRaXhQUVVGUExFVkJRVVVzVVVGQlVUdEZRVU5xUWl4VlFVRlZMRVZCUVVVc1RVRkJUVHRGUVVOc1FpeE5RVUZOTEVWQlFVVXNUVUZCVFR0RFFXRm1PenRCUVZoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRk1ja01zUVVGQlFTeHRRa0ZCYlVJc1EwRkJRenRKUVUxb1FpeFBRVUZQTEVWQlFVVXNTVUZCU1R0SlFVTmlMRk5CUVZNc1JVRkJSU3hKUVVGSk8wbEJRMllzWlVGQlpTeEZRVUZGTEZWQlFWVTdTVUZETTBJc1YwRkJWeXhGUVVGRkxFbEJRVWs3UjBGUGNFSTdPenRCUVVwRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRTFCUVUwN1JVRmFkRU1zUVVGQlFTeHRRa0ZCYlVJc1EwRkJRenRKUVdGb1FpeE5RVUZOTEVWQlFVVXNUVUZCVFR0SlFVTmtMRmRCUVZjc1JVRkJSU3hKUVVGSk8wZEJSWEJDT3pzN1FVTTFTMFFzUVVGQlFTeGpRVUZqTEVOQlFVTTdSVUZEWWl4UFFVRlBMRVZCUVVVc1RVRkJUVHREUVc5RGFFSTdPMEZCY2tORUxFRkJSMFVzWTBGSVdTeEhRVWRXTEVkQlFVY3NRMEZCUXp0RlpFWk9MRk5CUVZNc1JVUkJUQ3hOUVVGTk8wVkRRMVlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UFFVRlBMRVZCUVVVc1EwRkJReXhEUkVSSUxFbEJRVWs3UldWSFZDeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMR05CUVdNc1JVRkJSU3hOUVVGTk8wTkJUWFpDT3p0QlFVcERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZTZGtNc1FVRkhSU3hqUVVoWkxFZEJSMVlzUjBGQlJ5eERRVUZETzBsQlRVWXNaVUZCWlN4RlFVRkZMR0ZCUVdFN1NVRkRPVUlzWTBGQll5eEZRVUZGTEZkQlFWYzdSMEZGT1VJN096dEJRVnBJTEVGQlkwVXNZMEZrV1N4RFFXTmFMRk5CUVZNc1EwRkJRenRGUVVOU0xGTkJRVk1zUlVGQlJTeEpRVUZKTzBOQmNVSm9RanM3UVVGd1EwZ3NRVUZuUWtrc1kwRm9RbFVzUTBGaldpeFRRVUZUTEVOQlJWQXNUMEZCVHl4RFFVRkRPMFZCUTA0c1lVRkJZU3hGUVVGRkxFdEJRVXM3UTBGUGNrSTdPMEZCZUVKTUxFRkJhMEpOTEdOQmJFSlJMRU5CWTFvc1UwRkJVeXhEUVVWUUxFOUJRVThzUTBGRlRDeExRVUZMTEVOQlFVTTdSVUZEU2l4WFFVRlhMRVZtVEZBc1pVRkJaU3hGUVVGRkxFOUJRVTg3UTJWTk4wSTdPMEZCY0VKUUxFRkJjVUpOTEdOQmNrSlJMRU5CWTFvc1UwRkJVeXhEUVVWUUxFOUJRVThzUTBGTFRDeEpRVUZKTEVOQlFVTTdSVUZEU0N4UFFVRlBMRVZCUVVVc1MwRkJTenREUVVObU96dEJRWFpDVUN4QlFUQkNTU3hqUVRGQ1ZTeERRV05hTEZOQlFWTXNRMEZaVUN4RFFVRkRMRU5CUVVNN1JVRkRRU3hMUVVGTExFVm1ia0pFTEU5QlFVODdSV1Z2UWxnc1pVRkJaU3hGUVVGRkxFbEJRVWs3UTBGUGRFSTdPMEZCYmtOTUxFRkJLMEpSTEdOQkwwSk5MRU5CWTFvc1UwRkJVeXhEUVZsUUxFTkJRVU1zUVdSdVFrWXNUVUZCVFN4RFkzZENSQ3hKUVVGSkxFRkJRVUVzVjBGQlZ5eEZRUzlDZGtJc1kwRkJZeXhEUVdOYUxGTkJRVk1zUTBGWlVDeERRVUZETEVGa2JFSkdMRTFCUVUwc1EyTjFRa1FzU1VGQlNTeEJRVUZCTEZkQlFWY3NRMEZCUXp0RlFVTmtMR1ZCUVdVc1JVRkJSU3hUUVVGVE8wTkJRek5DT3p0QlFVOVFMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZFY2tNc1FVRkJRU3haUVVGWkxFTkJRVU03U1VGRlZDeExRVUZMTEVWQlFVVXNSMEZCUnp0SFFUQkVZanRGUVRWRVJDeEJRVWxKTEZsQlNsRXNRMEZKVWl4SFFVRkhMRU5CUVVNN1NVRkRSaXhSUVVGUkxFVkJRVVVzVFVGQlRUdEpRVU5vUWl4SFFVRkhMRVZtWkUwc1NVRkJTVHRIWldWa096czdRVUZRVEN4QlFWVkZMRmxCVmxVc1EwRlZWaXhGUVVGRkxFTkJRVU03UlVGRFJDeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzVFVGQlRTeEZRVUZGTEV0QlFVczdRMEZEWkRzN1FVRmtTQ3hCUVdkQ1JTeFpRV2hDVlN4RFFXZENWaXhGUVVGRkxFTkJRVU03UlVGRFJDeEpRVUZKTEVWQlFVVXNUMEZCVHp0RlFVTmlMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzVDBGQlR5eEZRVUZGTEVsQlFVazdRMEZOWkRzN1FVRktReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCY2tKMlF5eEJRV2RDUlN4WlFXaENWU3hEUVdkQ1ZpeEZRVUZGTEVOQlFVTTdTVUZOUXl4SlFVRkpMRVZCUVVVc1QwRkJUenRKUVVOaUxFdEJRVXNzUlVGQlJTeEhRVUZITzBkQlJXSTdPenRCUVhwQ1NDeEJRVEpDUlN4WlFUTkNWU3hEUVRKQ1ZpeEhRVUZITEVOQlFVTTdSVUZEUml4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NUMEZCVHl4RlFVRkZMRXRCUVVzN1EwRkRaanM3UVVFdlFrZ3NRVUZwUTBVc1dVRnFRMVVzUTBGcFExWXNTVUZCU1N4RFFVRkRPMFZrTVVSTUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVkQlFVYzdSVUZEV0N4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzU1VGQlNTeEZRVUZGTEdkQ1FVRmhPMFZCUTI1Q0xFMUJRVTBzUlVGQlJTeERRVUZETzBOamNVUlNPenRCUVc1RFNDeEJRWEZEUlN4WlFYSkRWU3hEUVhGRFZpeERRVUZETEVOQlFVTTdSVUZEUVN4VlFVRlZMRVZCUVVVc1VVRkJVVHRGUVVOd1FpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RlFVTmtMRTFCUVUwc1JVRkJSU3hwUWtGQmFVSTdRMEZMTVVJN08wRkJOME5JTEVGa2FFTkZMRmxqWjBOVkxFTkJjVU5XTEVOQlFVTXNRV1J5UlVFc1RVRkJUU3hGWTJkRFZDeFpRVUZaTEVOQmNVTldMRU5CUVVNc1FXUndSVUVzVFVGQlRTeERRVUZETzBWak1FVktMRTlCUVU4c1JVRkJSU3hIUVVGSE8wTmtlRVZtT3p0Qll6WkNTQ3hCUVdkRVNTeFpRV2hFVVN4QlFTdERWQ3haUVVGWkxFTkJRMWdzUTBGQlF5eERRVUZETzBWQlEwRXNUMEZCVHl4RlFVRkZMRWRCUVVjN1EwRkxZanM3UVVGMFJFd3NRV1JvUTBVc1dXTm5RMVVzUVVFclExUXNXVUZCV1N4RFFVTllMRU5CUVVNc1FXUm9Sa1lzVFVGQlRTeEZZMmREVkN4WlFVRlpMRUZCSzBOVUxGbEJRVmtzUTBGRFdDeERRVUZETEVGa0wwVkdMRTFCUVUwc1EwRkJRenRGWTIxR1JpeFBRVUZQTEVWQlFVVXNSMEZCUnp0RFpHcEdha0k3TzBGak5rSklMRUZCZDBSSkxGbEJlRVJSTEVGQkswTlVMRmxCUVZrc1EwRlRXQ3hGUVVGRkxFRkJRVUVzVDBGQlR5eERRVUZETEVOQlFVTXNRMEZCUXp0RlFVTldMRTlCUVU4c1JVRkJSU3hEUVVGRE8wTkJRMWc3TzBGQlMwZ3NUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRVVJ5UXl4QlFVRkJMRk5CUVZNc1EwRkJRenRKUVVWT0xFbEJRVWtzUlVGQlJTeFBRVUZQTzBsQlEySXNTMEZCU3l4RlFVRkZMRWRCUVVjN1IwRkZZanM3TzBGQlJVUXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRUaXhQUVVGUExFVkJRVVVzVFVGQlRUdERRVU5vUWpzN1FVRkRSQ3hCUVVORkxHTkJSRmtzUTBGRFdpeFBRVUZQTEVOQlFVTTdSVUZEVGl4VFFVRlRMRVZCUVVVc1NVRkJTVHRGUVVObUxFOUJRVThzUlVGQlJTeEhRVUZITzBOQlkySTdPMEZCYWtKSUxFRkJTMGtzWTBGTVZTeERRVU5hTEU5QlFVOHNRMEZKVEN4RFFVRkRMRU5CUVVNN1JVRkRRU3hMUVVGTExFVm1OMGRFTEU5QlFVODdSV1U0UjFnc1QwRkJUeXhGUVVGRkxFdEJRVXM3UlVGRFpDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzVFVGQlRTeEZRVUZGTEVkQlFVY3NRMEZCUXl4TFFVRkxMRU5tYWtoaUxFOUJRVTg3UldWclNGZ3NaVUZCWlN4RlFVRkZMRWxCUVVrN1EwRkxkRUk3TzBGQmFFSk1MRUZrZUVkRkxHTmpkMGRaTEVOQlExb3NUMEZCVHl4RFFVbE1MRU5CUVVNc1FXUTNSMFlzVFVGQlRTeEZZM2RIVkN4alFVRmpMRU5CUTFvc1QwRkJUeXhEUVVsTUxFTkJRVU1zUVdRMVIwWXNUVUZCVFN4RFFVRkRPMFZqY1VoR0xGVkJRVlVzUldaeVNGSXNjVUpCUVU4N1EwTkZaRHM3UVdOeFIwZ3NRVUZ4UWxFc1kwRnlRazBzUTBGclFsb3NVMEZCVXl4QlFVTk9MRlZCUVZjc1EwRkJRU3hGUVVGRkxFVkJRMW9zVDBGQlR5eERRVU5NTEVOQlFVTXNRMEZCUXp0RlFVTkJMRXRCUVVzc1JXWXZTRkFzVDBGQlR6dEZaV2RKVEN4VlFVRlZMRVZtT1VoV0xFOUJRVTg3UTJWdlNWSTdPMEZCTjBKVUxFRmtlRWRGTEdOamQwZFpMRU5CYTBKYUxGTkJRVk1zUVVGRFRpeFZRVUZYTEVOQlFVRXNSVUZCUlN4RlFVTmFMRTlCUVU4c1EwRkRUQ3hEUVVGRExFRmtOMGhPTEUxQlFVMHNSV04zUjFRc1kwRkJZeXhEUVd0Q1dpeFRRVUZUTEVGQlEwNHNWVUZCVnl4RFFVRkJMRVZCUVVVc1JVRkRXaXhQUVVGUExFTkJRMHdzUTBGQlF5eEJaRFZJVGl4TlFVRk5MRU5CUVVNN1JXTnBTVVVzUzBGQlN5eEZabXBKVUN4UFFVRlBPMFZsYTBsTUxGVkJRVlVzUldac1NWb3NjVUpCUVU4N1EwTkZaRHM3UVdOeFIwZ3NRVUZyUTBVc1kwRnNRMWtzUTBGclExb3NWVUZCVlN4RFFVRkRPMFZCUTFRc1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeFhRVUZYTEVWQlFVVXNUMEZCVHp0RFFVTnlRanM3UVVGeVEwZ3NRVUYxUTBVc1kwRjJRMWtzUTBGMVExb3NUMEZCVHp0QlFYWkRWQ3hqUVVGakxFTkJkME5hTEVOQlFVTXNRMEZCUXp0RlFVTkJMRTFCUVUwc1JVRkJSU3hKUVVGSk8wTkJRMkk3TzBGQk1VTklMRUZCTkVORkxHTkJOVU5aTEVOQk5FTmFMRXRCUVVzc1EwRkJRenRGUVVOS0xHRkJRV0VzUlVGQlJTeEpRVUZKTzBOQlEzQkNPenRCUXpkS1NDeEJRVUZCTEU5QlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzVFVGQlRUdERRVU5vUWpzN1FVRkRSQ3hCUVVORkxGbEJSRlVzUTBGRFZpeEZRVUZGTEVOQlFVTTdSVUZEUkN4WFFVRlhMRVZvUWxOSUxHVkJRV1VzUlVGQlJTeFBRVUZQTzBOblFsSnFRenM3UVVGSVNDeEJRVWxGTEZsQlNsVXNSMEZKVWl4SFFVRkhMRU5CUVVNN1JXWk9UaXhUUVVGVExFVkVRVXdzVFVGQlRUdEZRME5XTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1QwRkJUeXhGUVVGRkxFTkJRVU1zUTBSRVNDeEpRVUZKTzBOblFrOVdPenRCUVU1SUxFRkJVVVVzV1VGU1ZTeERRVkZXTEVkQlFVY3NRMEZCUXp0RlFVTkdMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UFFVRlBMRVZCUVVVc1MwRkJTenREUVVObU96dEJRVnBJTEVGQlkwVXNXVUZrVlN4RFFXTldMRmRCUVZjc1EwRkJRenRGUVVOV0xFOUJRVThzUlVGQlJTeERRVUZETzBOQlExZzdPMEZCYUVKSUxFRkJhMEpGTEZsQmJFSlZMRU5CYTBKV0xFOUJRVThzUTBGQlF6dEZRVU5PTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeEhRVUZITzBOQmRVTmlPenRCUVRORVNDeEJRWE5DU1N4WlFYUkNVU3hEUVd0Q1ZpeFBRVUZQTEVOQlNVd3NRMEZCUXl4RFFVRkRPMFZCVFVFc1QwRkJUeXhGUVVGRkxFdEJRVXM3UlVGRFpDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RFFWZHVRanM3UVVGNFEwd3NRVUYzUWxFc1dVRjRRa2tzUTBGclFsWXNUMEZCVHl4RFFVbE1MRU5CUVVNc1FXWnNRa1lzVFVGQlRTeERaVzlDUkN4WFFVRlhMRVZCZUVKdVFpeFpRVUZaTEVOQmEwSldMRTlCUVU4c1EwRkpUQ3hEUVVGRExFRm1ha0pHTEUxQlFVMHNRMlZ0UWtRc1YwRkJWeXhEUVVGRE8wVkJRMVlzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZEV0RzN1FVRXhRbFFzUVVFNFFrMHNXVUU1UWswc1EwRnJRbFlzVDBGQlR5eERRVWxNTEVOQlFVTXNRVUZSUlN4UFFVRlBMRU5CUVVNN1JVRkRVQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4TFFVRkxPMFZCUTJJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hKUVVGSkxFVkJRVVVzUTBGQlF6dEZRVU5RTEU5QlFVOHNSVUZCUlN4RFFVRkRPMFZCUTFZc1QwRkJUeXhGUVVGRkxFVkJRVVU3UlVGRFdDeFZRVUZWTEVWQlFVVXNiVVZCUVRaRU8wTkJRekZGT3p0QlFVZElMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUV4UTNaRExFRkJhMEpGTEZsQmJFSlZMRU5CYTBKV0xFOUJRVThzUTBGQlF6dEpRWGxDU2l4TFFVRkxMRVZCUVVVc1RVRkJUVHRKUVVOaUxFbEJRVWtzUlVGQlJTeFZRVUZWTzBkQlpXNUNPenM3UVVGYVF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hOUVVGTk8wVkJMME40UXl4QlFXdENSU3haUVd4Q1ZTeERRV3RDVml4UFFVRlBMRU5CUVVNN1NVRTRRa29zVDBGQlR5eEZRVUZGTEVsQlFVazdSMEZYYUVJN096dEJRVkJITEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGd1JIcERMRUZCYlVSSkxGbEJia1JSTEVOQmEwSldMRTlCUVU4c1FVRnBRMG9zVlVGQlZ5eERRVUZCTEUxQlFVMHNSVUZCUlR0SlFVVm9RaXhUUVVGVExFVkJRVVVzYVVKQlFXbENPMGRCU3k5Q096czdRVUZJUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQmRrUXhReXhCUVcxRVNTeFpRVzVFVVN4RFFXdENWaXhQUVVGUExFRkJhVU5LTEZWQlFWY3NRMEZCUVN4TlFVRk5MRVZCUVVVN1NVRkxhRUlzVTBGQlV5eEZRVUZGTEdsQ1FVRnBRanRIUVVVdlFqczdPMEZCU1V3c1FVRkJRU3hyUWtGQmEwSXNRMEZCUXp0RlFVTnFRaXhQUVVGUExFVkJRVVVzVjBGQlZ6dEZRVU53UWl4TlFVRk5MRVZCUVVVc1RVRkJUVHREUVZkbU96dEJRVlJETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGS2NrTXNRVUZCUVN4clFrRkJhMElzUTBGQlF6dEpRVXRtTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGxCUTJJc1UwRkJVeXhGUVVGRkxFbEJRVWs3U1VGRFppeGxRVUZsTEVWQlFVVXNWVUZCVlR0SFFVMDVRanM3TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRVlowUXl4QlFVRkJMR3RDUVVGclFpeERRVUZETzBsQlYyWXNUVUZCVFN4RlFVRkZMRTFCUVUwN1IwRkZha0k3T3p0QlFVVkVMRUZCUVVFc1YwRkJWeXhEUVVGRE8wVkJRMVlzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4VlFVRlZMRVZCUVVVc1NVRkJTVHRGUVVOb1FpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhKUVVGSkxFVkJRVVVzUTBGQlF6dEZRVU5RTEVkQlFVY3NSVUZCUlN4RFFVRkRPMFZCUTA0c1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeFZRVUZWTEVWQlFVVXNVVUZCVVR0RFFXbEZja0k3TzBGQkwwUkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZVY2tNc1FVRkJRU3hYUVVGWExFTkJRVU03U1VGVlVpeEpRVUZKTEVWQlFVVXNTVUZCU1R0SFFUaEVZanM3TzBGQk0wUkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVUZpZEVNc1FVRkJRU3hYUVVGWExFTkJRVU03U1VGalVpeFBRVUZQTEVWQlFVVXNTVUZCU1R0SFFUQkVhRUk3T3p0QlFYaEZSQ3hCUVdsQ1JTeFhRV3BDVXl4RFFXbENWQ3hEUVVGRExFTkJRVU03UlVGRFFTeExRVUZMTEVWb1FqVkdSQ3hQUVVGUE8wVm5RalpHV0N4VFFVRlRMRVZCUVVVc1NVRkJTVHRGUVVObUxGZEJRVmNzUlVGQlJTeFRRVUZsTzBOQlF6ZENPenRCUVhKQ1NDeEJRWFZDUlN4WFFYWkNVeXhIUVhWQ1VDeEhRVUZITEVOQlFVTTdSVUZEU2l4VlFVRlZMRVZCUVVVc1NVRkJTVHRGUVVOb1FpeFZRVUZWTEVWb1FtcEhTaXhQUVVGUE8wVm5RbXRIWWl4UFFVRlBMRVZCUVVVc1NVRkJTVHREUVVOa096dEJRVE5DU0N4QlFUWkNSU3hYUVRkQ1V5eERRVFpDVkN4TlFVRk5MRU5CUVVNN1JVRkRUQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNSMEZCUnl4RlFVRkZMRWxCUVZNN1JVRkRaQ3hMUVVGTExFVkJRVVVzU1VGQlV6dEZRVVZvUWl4TlFVRk5MRVZCUVVVc1IwRkJSeXhEUVVGRExFdEJRVXNzUTJoQ09VZGlMRTlCUVU4N1JXZENLMGRZTEdkQ1FVRm5RaXhGUVVGRkxGZEJRVmM3UlVGRE4wSXNWMEZCVnl4RlFVRkZMRTlCUVU4N1JVRkRjRUlzVVVGQlVTeEZRVUZGTEUxQlFVMDdSVUZEYUVJc1RVRkJUU3hGUVVGRkxFOUJRVTg3UlVGRFppeFZRVUZWTEVWQlFVVXNVVUZCVVR0RFFUaENja0k3TzBGQmRrVklMRUZCTWtOSkxGZEJNME5QTEVOQk5rSlVMRTFCUVUwc1FVRmpTQ3hQUVVGUExFVkJNME5hTEZkQlFWY3NRMEUyUWxRc1RVRkJUU3hCUVdWSUxFMUJRVTBzUTBGQlF6dEZRVU5PTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1RVRkJUU3hGUVVGRkxFZEJRVWM3UlVGRFdDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhIUVVGSExFVkJRVVVzUjBGQlJ6dEZRVU5TTEVsQlFVa3NSVUZCUlN4SFFVRkhPMFZCUTFRc1QwRkJUeXhGUVVGRkxFVkJRVVU3UlVGRFdDeFZRVUZWTEVWb1FqZElVaXhQUVVGUE8wVm5RamhJVkN4VlFVRlZMRVZCUVVVc1VVRkJVVHREUVVOeVFqczdRVUZ5UkV3c1FVRjFSRWtzVjBGMlJFOHNRMEUyUWxRc1RVRkJUU3hCUVRCQ1NDeFBRVUZQTEVOQlFVTTdSVUZEVUN4VFFVRlRMRVZCUVVVc1owSkJRV2RDTEVOQlFVTXNZVUZCWVR0RFFVTXhRenM3UVVGNlJFd3NRVUV3UkVrc1YwRXhSRThzUTBFMlFsUXNUVUZCVFN4QlFUWkNTQ3hOUVVGTkxFTkJRVU03UlVGRFRpeFRRVUZUTEVWQlFVVXNaMEpCUVdkQ0xFTkJRVU1zWTBGQll6dERRVU16UXpzN1FVRTFSRXdzUVdaNlJVVXNWMlY1UlZNc1EwRTJRbFFzVFVGQlRTeEJablJIVEN4TlFVRk5MRVZsZVVWVUxGZEJRVmNzUTBFMlFsUXNUVUZCVFN4QlpuSkhUQ3hOUVVGTkxFTkJRVU03UldWMVNVb3NWVUZCVlN4RmFFSjZTVklzZDBKQlFVODdSV2RDTUVsVUxGbEJRVmtzUldoQ2VFbFNMRTlCUVU4N1EwTkZaRHM3UVdWelJVZ3NRVUZyUlUwc1YwRnNSVXNzUTBFMlFsUXNUVUZCVFN4QlpuUkhUQ3hOUVVGTkxFRmxNa2xHTEU5QlFVOHNSVUZzUldRc1YwRkJWeXhEUVRaQ1ZDeE5RVUZOTEVGbWRFZE1MRTFCUVUwc1FXVTBTVVlzVFVGQlRTeEZRVzVGWWl4WFFVRlhMRU5CTmtKVUxFMUJRVTBzUVdaeVIwd3NUVUZCVFN4QlpUQkpSaXhQUVVGUExFVkJiRVZrTEZkQlFWY3NRMEUyUWxRc1RVRkJUU3hCWm5KSFRDeE5RVUZOTEVGbE1rbEdMRTFCUVUwc1EwRkJRenRGUVVOT0xHZENRVUZuUWl4RmFFSTFTV1FzVDBGQlR6dERaMEkyU1ZZN08wRkJTMUFzUVVGQlFTeFZRVUZWTEVOQlFVTTdSVUZEVkN4TFFVRkxMRVZCUVVVc2FVSkJRV2xDTzBOQlQzcENPenRCUVZKRUxFRkJSMGtzVlVGSVRTeERRVVZTTEVOQlFVTXNRVUZEUlN4WlFVRlpMRU5CUVVNN1JVRkRXaXhqUVVGakxFVkJRVVVzVTBGQlV6dEZRVU42UWl4TlFVRk5MRVZCUVVVc1EwRkJRenREUVVOV096dEJRVTFJTEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGRWNrTXNRVUZKVFN4WlFVcE5MRU5CUVVNc1QwRkJUeXhCUVVWbUxGVkJRVmNzUTBGQlFTeEZRVUZGTEVWQlJWb3NWMEZCVnl4RlFVcHFRaXhaUVVGWkxFTkJRVU1zVDBGQlR5eEJRVWRtTEZWQlFWY3NRMEZCUVN4SlFVRkpMRVZCUTJRc1YwRkJWeXhEUVVGRE8wbEJRMVlzUjBGQlJ5eEZRVUZGTEV0QlFVczdSMEZEV0R0RlFVNVFMRUZCVlUwc1dVRldUU3hEUVVGRExFOUJRVThzUVVGVFppeFZRVUZYTEVOQlFVRXNTVUZCU1N4RlFVTmtMRmRCUVZjc1EwRkJRenRKUVVOV0xFZEJRVWNzUlVGQlJTeEpRVUZKTzBkQlExWTdSVUZhVUN4QlFXZENUU3haUVdoQ1RTeERRVUZETEU5QlFVOHNRVUZsWml4VlFVRlhMRU5CUVVFc1JVRkJSU3hGUVVOYUxGZEJRVmNzUTBGQlF6dEpRVU5XTEVsQlFVa3NSVUZCUlN4SlFVRkpPMGxCUTFZc1MwRkJTeXhGUVVGRkxFbEJRVWs3UjBGRFdqczdPMEZCYmtKUUxFRkJjMEpGTEZsQmRFSlZMRU5CUVVNc1QwRkJUeXhCUVhOQ2FrSXNTMEZCU3l4RFFVRkRPMFZCUTB3c1QwRkJUeXhGUVVGRkxFVkJRVVU3UTBGTFdqczdRVUUxUWtnc1FVRjVRa2tzV1VGNlFsRXNRMEZCUXl4UFFVRlBMRUZCYzBKcVFpeExRVUZMTEVOQlIwb3NWMEZCVnl4RFFVRkRPMFZCUTFZc1QwRkJUeXhGUVVGRkxFbEJRVWs3UTBGRFpEczdRVEZDTTB0TUxFRkJRVUVzVTBGQlV5eERRVUZETzBWQlExSXNVMEZCVXl4RlFVRkZMRWxCUVVrN1JVRkRaaXhWUVVGVkxFVlZaa1lzY1VKQlFVODdSVlpuUW1Zc1MwRkJTeXhGVld4Q1F5eFBRVUZQTzBWV2JVSmlMRTlCUVU4c1JVRkJSU3hIUVVGSE8wVkJRMW9zVVVGQlVTeEZRVUZGTEV0QlFVczdSVUZEWml4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1EwRkRZaUo5ICovXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tYWluLWhlYWRlciA+IGRpdiB7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGVuZDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgfVxuXG4gIC5ocC1uYXZpZ2F0aW9uIGEge1xuICAgIGZvbnQtc2l6ZTogODBweDtcbiAgfVxuXG4gIC5jb250ZW50LWdyaWQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgfVxuXG4gIC5jb2wtMSB7XG4gICAgd2lkdGg6IDMzLjMzJTtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDMzLjMzJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAzMy4zMyU7XG4gIH1cblxuICAuY29sLTIge1xuICAgIHdpZHRoOiA2Ni42NyU7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAgICAgLW1zLWZsZXg6IDAgMCA2Ni42NyU7XG4gICAgICAgICAgICBmbGV4OiAwIDAgNjYuNjclO1xuICB9XG5cbiAgLmNvbC0zIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDEwMCU7XG4gICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTtcbiAgfVxuXG4gIC5wcm9qZWN0LWdyaWQgYXJ0aWNsZSB7XG4gICAgd2lkdGg6IDMzLjMzJTtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDMzLjMzJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAzMy4zMyU7XG4gIH1cblxuICAucHJvamVjdC1ncmlkIGFydGljbGU6bnRoLWNoaWxkKDNuICsgMikge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zNXB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzVweCk7XG4gIH1cblxuICAucHJvamVjdC1ncmlkLWlubmVyIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBzdGFydDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgcGFkZGluZy10b3A6IDcwcHg7XG4gIH1cblxuICAucHJlc3MtbGlzdGluZyA+IGRpdiB7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IGhvcml6b250YWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiByZXZlcnNlO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICB9XG5cbiAgLm91dGxldC1ncmlkIHtcbiAgICB3aWR0aDogNzUlO1xuICB9XG5cbiAgLm91dGxldC1ncmlkIG5hdiB7XG4gICAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiA4MHB4O1xuICB9XG5cbiAgLm91dGxldC1ncmlkIGxpIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDI1JTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAyNSU7XG4gICAgd2lkdGg6IDI1JTtcbiAgfVxuXG4gIC5hcnRpY2xlcyB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAgICAgLW1zLWZsZXg6IDAgMCAyMCU7XG4gICAgICAgICAgICBmbGV4OiAwIDAgMjAlO1xuICAgIHdpZHRoOiAyMCU7XG4gIH1cblxuICAucGVvcGxlLWdyaWQgYXJ0aWNsZSB7XG4gICAgd2lkdGg6IDMzLjMzJTtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDMzLjMzJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAzMy4zMyU7XG4gIH1cblxuICAucGVvcGxlLWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24gKyAyKSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTM1cHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zNXB4KTtcbiAgfVxuXG4gIC5wZW9wbGUtZ3JpZC1pbm5lciB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB9XG5cbiAgLnBlb3BsZS1iaW8ge1xuICAgIGxlZnQ6IDEwMCU7XG4gIH1cblxuICAucGVvcGxlLWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24pIC5wZW9wbGUtYmlvLFxuICAucGVvcGxlLWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24rMSkgLnBlb3BsZS1iaW8ge1xuICAgIHRvcDogLTcwcHg7XG4gIH1cblxuICAucGVvcGxlLWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24rMikgLnBlb3BsZS1iaW8ge1xuICAgIHRvcDogNzBweDtcbiAgfVxuXG4gIC5wZW9wbGUtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbikgLnBlb3BsZS1iaW8ge1xuICAgIGxlZnQ6IGF1dG87XG4gICAgcmlnaHQ6IDEwMCU7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIGJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgYSxcbiAgYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlciBzcGFuLFxuICBib2R5LnByb2plY3QtZGV0YWlsOm5vdCguc2Nyb2xsZWQpIC5tYWluLWhlYWRlciBhLFxuICBib2R5LnByb2plY3QtZGV0YWlsOm5vdCguc2Nyb2xsZWQpIC5tYWluLWhlYWRlciBzcGFuIHtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgfVxuXG4gIGJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgYTpob3ZlcixcbiAgYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlciBhOmZvY3VzLFxuICBib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIHNwYW46aG92ZXIsXG4gIGJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgc3Bhbjpmb2N1cyxcbiAgYm9keS5wcm9qZWN0LWRldGFpbDpub3QoLnNjcm9sbGVkKSAubWFpbi1oZWFkZXIgYTpob3ZlcixcbiAgYm9keS5wcm9qZWN0LWRldGFpbDpub3QoLnNjcm9sbGVkKSAubWFpbi1oZWFkZXIgYTpmb2N1cyxcbiAgYm9keS5wcm9qZWN0LWRldGFpbDpub3QoLnNjcm9sbGVkKSAubWFpbi1oZWFkZXIgc3Bhbjpob3ZlcixcbiAgYm9keS5wcm9qZWN0LWRldGFpbDpub3QoLnNjcm9sbGVkKSAubWFpbi1oZWFkZXIgc3Bhbjpmb2N1cyB7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciB7XG4gICAgaGVpZ2h0OiA4MHB4O1xuICB9XG5cbiAgLm1haW4taGVhZGVyIGJ1dHRvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgYSB7XG4gICAgcGFkZGluZzogMCAxMnB4O1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiB7XG4gICAgbWFyZ2luOiAwIC0xMnB4O1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiB1bC5tZW51IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgdWwubWVudSA+IGxpOmhvdmVyIC5zdWItbWVudSxcbiAgLm1haW4taGVhZGVyIG5hdiB1bC5tZW51ID4gbGkuY3VycmVudC1tZW51LWl0ZW0gLnN1Yi1tZW51LFxuICAubWFpbi1oZWFkZXIgbmF2IHVsLm1lbnUgPiBsaS5jdXJyZW50LW1lbnUtYW5jZXN0b3IgLnN1Yi1tZW51IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiAuc3ViLW1lbnUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogZW5kO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBlbmQ7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDEwMCU7XG4gICAgcmlnaHQ6IDA7XG4gICAgbWluLXdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiAuc3ViLW1lbnUgYSxcbiAgLm1haW4taGVhZGVyIG5hdiAuc3ViLW1lbnUgc3BhbiB7XG4gICAgcGFkZGluZzogMTBweCAxMnB4IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICBib2R5ID4gbWFpbiB7XG4gICAgcGFkZGluZzogODBweCAwO1xuICB9XG5cbiAgLnNlY3Rpb24taW5uZXIge1xuICAgIHBhZGRpbmc6IDAgOTJweDtcbiAgfVxuXG4gIC5ocC1uYXZpZ2F0aW9uIGEge1xuICAgIGZvbnQtc2l6ZTogMTU1cHg7XG4gIH1cblxuICAuY29udGVudC1ncmlkIHtcbiAgICBtYXJnaW46IDAgNjBweDtcbiAgfVxuXG4gIC5jb250ZW50LWdyaWQgW2NsYXNzXj1cImNvbFwiXSB7XG4gICAgcGFkZGluZzogMTJweDtcbiAgfVxuXG4gIC5ncmlkLXRpdGxlIGg0IHtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gIH1cblxuICAucmVsYXRlZC1wcm9qZWN0cyB7XG4gICAgcGFkZGluZzogNzBweCAwO1xuICB9XG5cbiAgLnByb2plY3QtZ3JpZCBhcnRpY2xlIHtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICB9XG5cbiAgLnByb2plY3QtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbiArIDIpIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNzBweCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTcwcHgpO1xuICB9XG5cbiAgLnByb2plY3QtZ3JpZC1pbm5lciB7XG4gICAgbWFyZ2luOiAwIDYwcHg7XG4gICAgcGFkZGluZy10b3A6IDM1cHg7XG4gIH1cblxuICAucGVvcGxlLWdyaWQgYXJ0aWNsZSB7XG4gICAgcGFkZGluZzogMTJweDtcbiAgfVxuXG4gIC5wZW9wbGUtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbiArIDIpIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNzBweCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTcwcHgpO1xuICB9XG5cbiAgLnBlb3BsZS1ncmlkLWlubmVyIHtcbiAgICBtYXJnaW46IDAgNjBweDtcbiAgfVxuXG4gIC5wZW9wbGUtYmlvIHtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjQuOXB4KSB7XG4gIGJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgLm9wZW4gaDEgYSxcbiAgYm9keS5wcm9qZWN0LWRldGFpbDpub3QoLnNjcm9sbGVkKSAubWFpbi1oZWFkZXIgLm9wZW4gaDEgYSB7XG4gICAgY29sb3I6ICMxRTMxNDE7XG4gIH1cblxuICBib2R5LmZyb250LXBhZ2UgLm1haW4taGVhZGVyIC5vcGVuIGgxIGE6aG92ZXIsXG4gIGJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIgLm9wZW4gaDEgYTpmb2N1cyxcbiAgYm9keS5wcm9qZWN0LWRldGFpbDpub3QoLnNjcm9sbGVkKSAubWFpbi1oZWFkZXIgLm9wZW4gaDEgYTpob3ZlcixcbiAgYm9keS5wcm9qZWN0LWRldGFpbDpub3QoLnNjcm9sbGVkKSAubWFpbi1oZWFkZXIgLm9wZW4gaDEgYTpmb2N1cyB7XG4gICAgY29sb3I6IHJnYmEoMzAsIDQ5LCA2NSwgMC40KTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciAuaGFtYnVyZ2VyLm9wZW4gKyBuYXYge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMCUpO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAxMDAlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gICAgcGFkZGluZzogNjBweCAyMHB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiA+IGRpdiB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiAuc3ViLW1lbnUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiAuc3ViLW1lbnUgYSxcbiAgLm1haW4taGVhZGVyIG5hdiAuc3ViLW1lbnUgc3BhbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogNXB4IDEwcHg7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IC5tZW51ID4gbGkge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luOiAxMHB4IDA7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IC5tZW51ID4gbGkgPiBhIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAxO1xuICAgICAgICAtbXMtZmxleC1wb3NpdGl2ZTogMTtcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgLm1lbnUgPiBsaSA+IGJ1dHRvbiB7XG4gICAgd2lkdGg6IDMycHg7XG4gICAgaGVpZ2h0OiAzMnB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXI6IDA7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IC5tZW51ID4gbGkgPiBidXR0b246YmVmb3JlLFxuICAubWFpbi1oZWFkZXIgbmF2IC5tZW51ID4gbGkgPiBidXR0b246YWZ0ZXIge1xuICAgIHdpZHRoOiAxNnB4O1xuICAgIGhlaWdodDogMnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDE1cHg7XG4gICAgbGVmdDogOHB4O1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZDogIzFFMzE0MTtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiAubWVudSA+IGxpID4gYnV0dG9uOmFmdGVyIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgfVxuXG4gIC5tYWluLWhlYWRlciBuYXYgLm1lbnUgPiBsaSA+IGJ1dHRvbiBzcGFuIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDFweDtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogLTFweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gICAgYm9yZGVyOiAwO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiAubWVudSA+IGxpLmN1cnJlbnQtbWVudS1pdGVtID4gYnV0dG9uOmFmdGVyIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IC5tZW51ID4gbGkuY3VycmVudC1tZW51LWl0ZW0gLnN1Yi1tZW51IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjcuOXB4KSB7XG4gIC5jb250ZW50LWdyaWQgLmNvbC0xIGltZyB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWF4LWhlaWdodDogNTIwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuICB9XG59IiwiLypcbiAqICBPd2wgQ2Fyb3VzZWwgLSBBbmltYXRlIFBsdWdpblxuICovXG4ub3dsLWNhcm91c2Vse1xuXHQuYW5pbWF0ZWQge1xuXHRcdGFuaW1hdGlvbi1kdXJhdGlvbjogMTAwMG1zO1xuXHRcdGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG5cdH1cblx0Lm93bC1hbmltYXRlZC1pbiB7XG5cdFx0ei1pbmRleDogMDtcblx0fVxuXHQub3dsLWFuaW1hdGVkLW91dCB7XG5cdFx0ei1pbmRleDogMTtcblx0fVxuXHQuZmFkZU91dCB7XG5cdFx0YW5pbWF0aW9uLW5hbWU6IGZhZGVPdXQ7XG5cdH1cbn1cblxuQGtleWZyYW1lcyBmYWRlT3V0IHtcblx0MCUge1xuXHRcdG9wYWNpdHk6IDE7XG5cdH1cblxuXHQxMDAlIHtcblx0XHRvcGFjaXR5OiAwO1xuXHR9XG59XG4iLCIvKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBBdXRvIEhlaWdodCBQbHVnaW5cbiAqL1xuXG4ub3dsLWhlaWdodCB7XG5cdHRyYW5zaXRpb246IGhlaWdodCA1MDBtcyBlYXNlLWluLW91dDtcbn1cbiIsIi8qXG4gKiBcdE93bCBDYXJvdXNlbCAtIExhenkgTG9hZCBQbHVnaW5cbiAqL1xuXG4ub3dsLWNhcm91c2VsIHtcblx0Lm93bC1pdGVtIHtcblx0XHQub3dsLWxhenkge1xuXHRcdFx0XHRvcGFjaXR5OiAwO1xuXHRcdFx0XHR0cmFuc2l0aW9uOiBvcGFjaXR5IDQwMG1zIGVhc2U7XG5cdFx0fVxuXG5cdFx0LyoqXG5cdFx0XHRUaGlzIGlzIGludHJvZHVjZWQgZHVlIHRvIGEgYnVnIGluIElFMTEgd2hlcmUgbGF6eSBsb2FkaW5nIGNvbWJpbmVkIHdpdGggYXV0b2hlaWdodCBwbHVnaW4gY2F1c2VzIGEgd3Jvbmdcblx0XHRcdGNhbGN1bGF0aW9uIG9mIHRoZSBoZWlnaHQgb2YgdGhlIG93bC1pdGVtIHRoYXQgYnJlYWtzIHBhZ2UgbGF5b3V0c1xuXHRcdCAqL1xuXHRcdC5vd2wtbGF6eVtzcmNePVwiXCJdLCAub3dsLWxhenk6bm90KFtzcmNdKSB7XG5cdFx0XHRtYXgtaGVpZ2h0OiAwO1xuXHRcdH1cblxuXHRcdGltZy5vd2wtbGF6eSB7XG5cdFx0XHR0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuXHRcdH1cblx0fVxufVxuXG4iLCIkb3dsLWltYWdlLXBhdGg6IFwiXCIgIWRlZmF1bHQ7XG5cbi8qXG4gKiBcdE93bCBDYXJvdXNlbCAtIFZpZGVvIFBsdWdpblxuICovXG5cbi5vd2wtY2Fyb3VzZWx7XG5cdC5vd2wtdmlkZW8td3JhcHBlciB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRiYWNrZ3JvdW5kOiAjMDAwO1xuXHR9XG5cblx0Lm93bC12aWRlby1wbGF5LWljb24ge1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRoZWlnaHQ6IDgwcHg7XG5cdFx0d2lkdGg6IDgwcHg7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHRvcDogNTAlO1xuXHRcdG1hcmdpbi1sZWZ0OiAtNDBweDtcblx0XHRtYXJnaW4tdG9wOiAtNDBweDtcblx0XHRiYWNrZ3JvdW5kOiB1cmwoXCIjeyRvd2wtaW1hZ2UtcGF0aH1vd2wudmlkZW8ucGxheS5wbmdcIikgbm8tcmVwZWF0O1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHR6LWluZGV4OiAxO1xuXHRcdC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdHRyYW5zaXRpb246IHRyYW5zZm9ybSAxMDBtcyBlYXNlO1xuXHR9XG5cblx0Lm93bC12aWRlby1wbGF5LWljb246aG92ZXIge1xuXHRcdHRyYW5zZm9ybTogc2NhbGUoMS4zLCAxLjMpO1xuXHR9XG5cblx0Lm93bC12aWRlby1wbGF5aW5nIC5vd2wtdmlkZW8tdG4sXG5cdC5vd2wtdmlkZW8tcGxheWluZyAub3dsLXZpZGVvLXBsYXktaWNvbiB7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0fVxuXG5cdC5vd2wtdmlkZW8tdG4ge1xuXHRcdG9wYWNpdHk6IDA7XG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG5cdFx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcblx0XHRiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG5cdFx0dHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBlYXNlO1xuXHR9XG5cblx0Lm93bC12aWRlby1mcmFtZSB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG59XG4iLCIvKlxuICogXHREZWZhdWx0IHRoZW1lIC0gT3dsIENhcm91c2VsIENTUyBGaWxlXG4gKi9cblxuJGNvbG9yLWJhc2U6XHRcdFx0Izg2OTc5MSAhZGVmYXVsdDtcbiRjb2xvci13aGl0ZTpcdFx0XHQjRkZGICFkZWZhdWx0O1xuJGNvbG9yLWdyYXk6XHRcdFx0I0Q2RDZENiAhZGVmYXVsdDtcblxuLy9uYXZcblxuJG5hdi1jb2xvcjogXHRcdFx0JGNvbG9yLXdoaXRlICFkZWZhdWx0O1xuJG5hdi1jb2xvci1ob3ZlcjpcdFx0JGNvbG9yLXdoaXRlICFkZWZhdWx0O1xuJG5hdi1mb250LXNpemU6IFx0XHQxNHB4ICFkZWZhdWx0O1xuJG5hdi1yb3VuZGVkOiBcdFx0XHQzcHggIWRlZmF1bHQ7XG4kbmF2LW1hcmdpbjogXHRcdFx0NXB4ICFkZWZhdWx0O1xuJG5hdi1wYWRkaW5nOiBcdFx0XHQ0cHggN3B4ICFkZWZhdWx0O1xuJG5hdi1iYWNrZ3JvdW5kOiBcdFx0JGNvbG9yLWdyYXkgIWRlZmF1bHQ7XG4kbmF2LWJhY2tncm91bmQtaG92ZXI6XHQkY29sb3ItYmFzZSAhZGVmYXVsdDtcbiRuYXYtZGlzYWJsZWQtb3BhY2l0eTogXHQwLjUgIWRlZmF1bHQ7XG5cbi8vZG90c1xuXG4kZG90LXdpZHRoOlx0XHRcdFx0MTBweCAhZGVmYXVsdDtcbiRkb3QtaGVpZ2h0Olx0XHRcdDEwcHggIWRlZmF1bHQ7XG4kZG90LXJvdW5kZWQ6XHRcdFx0MzBweCAhZGVmYXVsdDtcbiRkb3QtbWFyZ2luOiBcdFx0XHQ1cHggN3B4ICFkZWZhdWx0O1xuJGRvdC1iYWNrZ3JvdW5kOlx0XHQkY29sb3ItZ3JheSAhZGVmYXVsdDtcbiRkb3QtYmFja2dyb3VuZC1hY3RpdmU6XHQkY29sb3ItYmFzZSAhZGVmYXVsdDtcblxuQGltcG9ydCAndGhlbWUnO1xuIiwiXG4ub3dsLXRoZW1lIHtcblx0Ly8gU3R5bGluZyBOZXh0IGFuZCBQcmV2IGJ1dHRvbnNcblx0Lm93bC1uYXYge1xuXHRcdG1hcmdpbi10b3A6IDEwcHg7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cblx0XHRbY2xhc3MqPSdvd2wtJ10ge1xuXHRcdFx0Y29sb3I6ICRuYXYtY29sb3I7XG5cdFx0XHRmb250LXNpemU6ICRuYXYtZm9udC1zaXplO1xuXHRcdFx0bWFyZ2luOiAkbmF2LW1hcmdpbjtcblx0XHRcdHBhZGRpbmc6ICRuYXYtcGFkZGluZztcblx0XHRcdGJhY2tncm91bmQ6ICRuYXYtYmFja2dyb3VuZDtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHRcdGJvcmRlci1yYWRpdXM6IDNweDtcblxuXHRcdFx0Jjpob3ZlciB7XG5cdFx0XHRcdGJhY2tncm91bmQ6ICRuYXYtYmFja2dyb3VuZC1ob3Zlcjtcblx0XHRcdFx0Y29sb3I6JG5hdi1jb2xvci1ob3Zlcjtcblx0XHRcdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdFx0fVxuXHRcdH1cblx0XHQuZGlzYWJsZWQge1xuXHRcdFx0b3BhY2l0eTogJG5hdi1kaXNhYmxlZC1vcGFjaXR5O1xuXHRcdFx0Y3Vyc29yOiBkZWZhdWx0O1xuXHRcdH1cblx0fVxuXG5cdC8vIFN0eWxpbmcgZG90c1xuXHQub3dsLW5hdi5kaXNhYmxlZCArIC5vd2wtZG90cyB7XG5cdFx0bWFyZ2luLXRvcDogMTBweDtcblx0fVxuXG5cdC5vd2wtZG90cyB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cblx0XHQub3dsLWRvdCB7XG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0XHR6b29tOiAxO1xuXHRcdFx0KmRpc3BsYXk6IGlubGluZTtcblxuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdHdpZHRoOiAkZG90LXdpZHRoO1xuXHRcdFx0XHRoZWlnaHQ6ICRkb3QtaGVpZ2h0O1xuXHRcdFx0XHRtYXJnaW46ICRkb3QtbWFyZ2luO1xuXHRcdFx0XHRiYWNrZ3JvdW5kOiAkZG90LWJhY2tncm91bmQ7XG5cdFx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdFx0XHQtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IHZpc2libGU7XG5cdFx0XHRcdHRyYW5zaXRpb246IG9wYWNpdHkgMjAwbXMgZWFzZTtcblx0XHRcdFx0Ym9yZGVyLXJhZGl1czogJGRvdC1yb3VuZGVkO1xuXHRcdFx0fVxuXG5cdFx0XHQmLmFjdGl2ZSxcblx0XHRcdCY6aG92ZXIge1xuXHRcdFx0XHRzcGFuIHtcblx0XHRcdFx0XHRiYWNrZ3JvdW5kOiAkZG90LWJhY2tncm91bmQtYWN0aXZlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG4iLCIqIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbnVsLFxub2wge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5hIHtcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIC8vIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLnNyLW9ubHkge1xuICBAaW5jbHVkZSBzck9ubHk7XG59XG5cbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiAkYm9sZDtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAkY29weUZGO1xufVxuIiwiQG1peGluIGNvbnRlbnRXaWR0aCB7XG4gIG1heC13aWR0aDogJG14VztcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwICRndXR0ZXI7XG59XG5cbkBtaXhpbiBob3ZlciB7XG4gICY6aG92ZXIsXG4gICY6Zm9jdXMge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBzck9ubHkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwwLDAsMCk7XG4gIGJvcmRlcjogMDtcbn1cblxuQG1peGluIGltZ0NvdmVyIHtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgbWluLXdpZHRoOiAxMDAlO1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwO1xuXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcblxuICBAc3VwcG9ydHMgKG9iamVjdC1maXQ6IGNvdmVyKSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICB9XG59XG4iLCJib2R5IHtcbiAgJi5mcm9udC1wYWdlLFxuICAmLnByb2plY3QtZGV0YWlsIHtcbiAgICA+IG1haW4ge1xuICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB6LWluZGV4OiAwO1xuICAgIH0gICAgXG4gIH1cbiAgJi5mcm9udC1wYWdlLFxuICAmLnByb2plY3QtZGV0YWlsOm5vdCguc2Nyb2xsZWQpIHtcblxuICAgICAubWFpbi1oZWFkZXIge1xuICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgID4gZGl2IHtcbiAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgfVxuICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgaGVpZ2h0OiAxNTFweDtcbiAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgIHRvcDogMDtcbiAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICB6LWluZGV4OiAwO1xuICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLHJnYmEoJGJsYWNrLDApIDAlLCByZ2JhKCRibGFjaywuMykgMTAwJSk7XG4gICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICAgICB9XG5cbiAgICAgICBoMSBhIHtcbiAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG5cbiAgICAgICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgICAgICAgY29sb3I6IHJnYmEoJHdoaXRlLC40KTtcbiAgICAgICAgIH1cbiAgICAgICB9XG5cbiAgICAgICBAbWVkaWEgI3skbWVkaWFUb2dnbGVIZWFkZXJ9IHtcbiAgICAgICAgICAub3BlbiBoMSBhIHtcbiAgICAgICAgICAgIGNvbG9yOiAkcHJpbWFyeTtcblxuICAgICAgICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAgICAgICBjb2xvcjogcmdiYSgkcHJpbWFyeSwuNCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgIH1cblxuICAgICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgICAgIGEsXG4gICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcblxuICAgICAgICAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICAgICAgICAgY29sb3I6IHJnYmEoJHdoaXRlLC40KTtcbiAgICAgICAgICAgfVxuICAgICAgICAgfVxuICAgICAgIH1cblxuICAgICAgIC5oYW1idXJnZXI6bm90KC5vcGVuKSB7XG4gICAgICAgICBzcGFuLFxuICAgICAgICAgJjpiZWZvcmUsXG4gICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICAgfVxuICAgICAgIH1cbiAgICAgfVxuICAgfVxuXG4gICAmLmZyb250LXBhZ2Uge1xuICAgICAgPiBtYWluID4gc2VjdGlvbiA+IGRpdiB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB9XG4gICB9XG59XG5cbkBpbXBvcnQgJ2NvcHkvX2Jhc2UnO1xuQGltcG9ydCAnaGVhZGVyL19oZWFkZXInO1xuQGltcG9ydCAnZm9vdGVyL19mb290ZXInO1xuQGltcG9ydCAnX3BhZ2UnO1xuQGltcG9ydCAnX2Zyb250LXBhZ2UnO1xuIiwiLy8gU1BBQ0lOR1xuJG14VzogMTYwMHB4O1xuJGd1dHRlcjogMjBweDtcblxuLy8gQ09MT1JTXG4kYmxhY2s6ICMwMDAwMDA7XG4kd2hpdGU6ICNGRkZGRkY7XG5cbiRwcmltYXJ5OiAjMUUzMTQxO1xuJHNlY29uZGFyeTogIzcwNzA3MDtcblxuJGFjY2VudC0xOiAjMDcxNDRFO1xuXG4vLyBGT05UU1xuJGhlYWRpbmdGRjogJ0V4cGxldHVzIFNhbnMnLCBjdXJzaXZlO1xuJGNvcHlGRjogJ0Fzc2lzdGFudCcsIHNhbnMtc2VyaWY7XG4kbHQ6IDMwMDtcbiRyZWc6IDQwMDtcbiRib2xkOiA3MDA7XG5cbi8vIEJSRUFLUE9JTlRTXG4kbWVkaWFYczogXCJzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3NXB4KVwiO1xuJG1lZGlhUGhvbmU6IFwic2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjcuOXB4KVwiO1xuJG1lZGlhVGFibGV0OiBcInNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpXCI7XG4kbWVkaWFUYWJsZXRPbmx5OiBcInNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0LjlweClcIjtcbiRtZWRpYVRvZ2dsZUhlYWRlcjogXCJzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjQuOXB4KVwiO1xuJG1lZGlhRGVza3RvcDogXCJzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweClcIjtcbiRtZWRpYUZ1bGw6IFwic2NyZWVuIGFuZCAobWluLXdpZHRoOiAjeyRteFd9KVwiO1xuXG4vLyBESU1FTlNJT05TXG4kaGVhZGVySGVpZ2h0TTogNTVweDtcbiRoZWFkZXJIZWlnaHQ6IDgwcHg7XG4iLCJoMSwuaDEge1xuICBmb250LWZhbWlseTogJGNvcHlGRjtcbiAgZm9udC13ZWlnaHQ6ICRsdDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAyNXB4O1xufVxuXG5oMiwuaDIge1xuICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgZm9udC1zaXplOiAzMHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsaW5lLWhlaWdodDogKDQwIC8gMzApICogMWVtO1xuICBmb250LXdlaWdodDogJGJvbGQ7XG59XG5oMywuaDMge1xuICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsaW5lLWhlaWdodDogKDQwIC8gMzApICogMWVtO1xuICBmb250LXdlaWdodDogJGJvbGQ7XG59XG5oNSwuaDUge1xuICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuIiwiQGltcG9ydCAnaGVhZGluZ3MnO1xuXG5wIHtcbiAgLy9jb2xvcjogJHByaW1hcnk7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbGluZS1oZWlnaHQ6ICgyNyAvIDIxKSAqIDFlbTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuIiwiLm1haW4taGVhZGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogJGhlYWRlckhlaWdodE07XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAxMDtcbiAgYmFja2dyb3VuZDogcmdiYSgkd2hpdGUsLjk5KTtcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG5cbiAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgIGhlaWdodDogJGhlYWRlckhlaWdodDtcbiAgfVxuXG4gIC5sb2dnZWRpbiAmIHtcbiAgICB0b3A6IDMycHg7XG4gIH1cblxuICBoMSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDIwO1xuICB9XG5cbiAgPiBkaXYge1xuICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgfVxuICB9XG4gIGJ1dHRvbiB7XG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAuaGFtYnVyZ2VyIHtcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHotaW5kZXg6IDIwO1xuXG4gICAgc3BhbiB7XG5cbiAgICB9XG5cbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyLFxuICAgIHNwYW4ge1xuICAgICAgd2lkdGg6IDE2cHg7XG4gICAgICBoZWlnaHQ6IDJweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMTVweDtcbiAgICAgIGxlZnQ6IDhweDtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgICAgdGV4dC1pbmRlbnQ6IC05OTk5OTlweDtcbiAgICB9XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTZweCk7XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDZweCk7XG4gICAgfVxuXG4gICAgJi5vcGVuIHtcbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgfVxuICAgICAgJjphZnRlciB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICB9XG4gICAgICBzcGFuIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhICN7JG1lZGlhVG9nZ2xlSGVhZGVyfSB7XG4gICAgICAgICsgbmF2IHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMTAwJSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgaDEge1xuXG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgY29sb3I6ICRzZWNvbmRhcnk7XG4gICAgfVxuICB9XG5cbiAgQGltcG9ydCAnX25hdic7XG59XG4iLCJuYXYge1xuICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgYSB7XG4gICAgY29sb3I6ICRwcmltYXJ5O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgIGNvbG9yOiAkc2Vjb25kYXJ5O1xuICAgICAgLy90ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuXG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgcGFkZGluZzogMCAxMnB4O1xuICAgIH1cbiAgfVxuICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgbWFyZ2luOiAwIC0xMnB4O1xuICB9XG5cbiAgQG1lZGlhICN7JG1lZGlhVG9nZ2xlSGVhZGVyfSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAxMDAlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgICBwYWRkaW5nOiA2MHB4IDIwcHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuXG4gICAgPiBkaXYge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgfVxuXG4gICAgLnN1Yi1tZW51IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcblxuICAgICAgYSxcbiAgICAgIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcGFkZGluZzogNXB4IDEwcHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLm1lbnUge1xuICAgICAgPiBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBtYXJnaW46IDEwcHggMDtcblxuICAgICAgICA+IGEge1xuICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgfVxuXG4gICAgICAgID4gYnV0dG9uIHtcbiAgICAgICAgICB3aWR0aDogMzJweDtcbiAgICAgICAgICBoZWlnaHQ6IDMycHg7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgIGJvcmRlcjogMDtcblxuICAgICAgICAgICY6YmVmb3JlLFxuICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgd2lkdGg6IDE2cHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMTVweDtcbiAgICAgICAgICAgIGxlZnQ6IDhweDtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgQGluY2x1ZGUgc3JPbmx5O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYuY3VycmVudC1tZW51LWl0ZW0ge1xuICAgICAgICAgID4gYnV0dG9uIHtcbiAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuc3ViLW1lbnUge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdWwubWVudSB7XG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgfVxuXG4gICAgPiBsaSB7XG4gICAgICA+IGEge1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMS4xM3B4O1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICAgICY6aG92ZXIsXG4gICAgICAgICYuY3VycmVudC1tZW51LWl0ZW0sXG4gICAgICAgICYuY3VycmVudC1tZW51LWFuY2VzdG9yIHtcbiAgICAgICAgICAuc3ViLW1lbnUge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICAmLmN1cnJlbnQtbWVudS1pdGVtLFxuICAgICAgJi5jdXJyZW50LW1lbnUtYW5jZXN0b3Ige1xuICAgICAgICA+IGEge1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuc3ViLW1lbnUge1xuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAxMDAlO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBtaW4td2lkdGg6IDEwMCU7XG5cbiAgICAgIGEsXG4gICAgICBzcGFuIHtcbiAgICAgICAgcGFkZGluZzogMTBweCAxMnB4IDA7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLm1haW4tZm9vdGVyIHtcbiAgcGFkZGluZzogJGd1dHRlciAwO1xuXG4gIGEge1xuICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuICB9XG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cblxuICAuY29udGFjdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDEuNzNweDtcbiAgICBjb2xvcjogJHByaW1hcnk7XG5cbiAgICBwIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG4gIH1cblxuICA+IGRpdiB7XG5cbiAgfVxuXG4gIC5zb2NpYWwge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYSB7XG4gICAgICB3aWR0aDogMjRweDtcbiAgICAgIGhlaWdodDogMjRweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuXG4gICAgICBzdmcge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgfVxuXG4gICAgICBzcGFuIHtcbiAgICAgICAgQGluY2x1ZGUgc3JPbmx5O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4uZm9vdGVyLWxvZ28ge1xuICBzdmcge1xuICAgIHdpZHRoOiA4NXB4O1xuICAgIGhlaWdodDogOTlweDtcbiAgICBmaWxsOiAkYWNjZW50LTE7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbiIsImJvZHkge1xuICA+IG1haW4ge1xuICAgIHBhZGRpbmc6ICRoZWFkZXJIZWlnaHRNIDA7XG5cbiAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICBwYWRkaW5nOiAkaGVhZGVySGVpZ2h0IDA7XG4gICAgfVxuXG4gICAgPiBzZWN0aW9uIHtcbiAgICAgID4gZGl2IHtcbiAgICAgICAgQGluY2x1ZGUgY29udGVudFdpZHRoO1xuICAgICAgfVxuXG4gICAgICBjb2xvcjogJHByaW1hcnk7XG5cbiAgICAgICYuYmctcHJpbWFyeSB7XG4gICAgICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICBwYWRkaW5nOiA2MHB4IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIGJvZHkucHJvamVjdC1kZXRhaWwge1xuLy8gICA+IG1haW4ge1xuLy8gICAgIHBhZGRpbmc6IDA7XG4vLyAgIH1cbi8vIH1cblxuLnNlY3Rpb24taW5uZXIge1xuICBwYWRkaW5nOiAwIDIwcHg7XG5cbiAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgIHBhZGRpbmc6IDAgOTJweDtcbiAgfVxufVxuIiwiJWltZ0NvdmVyIHtcbiAgQGluY2x1ZGUgaW1nQ292ZXI7XG59XG4uaHAtc2xpZGVzaG93IHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gIC5qcy1jYXJvdXNlbCB7XG4gICAgLm93bC1pdGVtIHtcbiAgICAgIGhlaWdodDogMTAwdmg7XG5cbiAgICAgID4gZGl2IHtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB9XG5cbiAgICAgIGltZyB7XG4gICAgICAgIEBleHRlbmQgJWltZ0NvdmVyO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5vd2wtbmF2IHtcbiAgICAgIGJ1dHRvbiB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiBjYWxjKDUwJSAtIDQ3cHgpO1xuICAgICAgICB3aWR0aDogNDZweDtcbiAgICAgICAgaGVpZ2h0OiA5NXB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltYWdlcy9hcnJvdy5zdmcnKTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcblxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICBAaW5jbHVkZSBzck9ubHk7XG4gICAgICAgIH1cblxuICAgICAgICAmOmZvY3VzLFxuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICAgICAgb3BhY2l0eTogLjU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLm93bC1wcmV2IHtcbiAgICAgICAgbGVmdDogJGd1dHRlcjtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICAgIH1cblxuICAgICAgLm93bC1uZXh0IHtcbiAgICAgICAgcmlnaHQ6ICRndXR0ZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnNjcm9sbC1kb3duIHtcbiAgICB3aWR0aDogNDZweDtcbiAgICBoZWlnaHQ6IDk1cHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogJGd1dHRlcjtcbiAgICBsZWZ0OiBjYWxjKDUwJSAtIDE4cHgpO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2Fycm93LnN2ZycpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtaW5kZW50OiAtOTk5OTk5cHg7XG5cbiAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICBvcGFjaXR5OiAuNTtcbiAgICB9XG4gIH1cbn1cblxuLmhwLW5hdmlnYXRpb24ge1xuICBhIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGZvbnQtc2l6ZTogNTBweDtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LXNoYWRvdzogMHB4IDRweCA3cHggJHNlY29uZGFyeTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1mYW1pbHk6ICRoZWFkaW5nRkY7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcblxuICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgZm9udC1zaXplOiA4MHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIGZvbnQtc2l6ZTogMTU1cHg7XG4gICAgfVxuXG4gICAgc3BhbiB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB6LWluZGV4OiAxO1xuICAgIH1cblxuICAgIGltZyB7XG4gICAgICBAZXh0ZW5kICVpbWdDb3ZlcjtcbiAgICAgIHotaW5kZXg6IDA7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICAgIGZpbHRlcjogYmx1cigxOHB4KTtcblxuICAgICAgQHN1cHBvcnRzIChvYmplY3QtZml0OiBjb3Zlcikge1xuICAgICAgICB3aWR0aDogMTAzJTtcbiAgICAgICAgaGVpZ2h0OiAxMDMlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG5cbiAgLmFjdGl2ZSBhIHtcbiAgICBpbWcge1xuICAgICAgZmlsdGVyOiBibHVyKDApO1xuICAgIH1cbiAgfVxufVxuIiwiLmNvbnRlbnQtZ3JpZCB7XG4gIG1hcmdpbjogMCAtNnB4O1xuXG4gIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgfVxuXG4gIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICBtYXJnaW46IDAgNjBweDtcbiAgfVxuXG4gIFtjbGFzc149XCJjb2xcIl0ge1xuICAgIHBhZGRpbmc6IDZweDtcblxuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIHBhZGRpbmc6IDEycHg7XG4gICAgfVxuICB9XG5cbiAgcGljdHVyZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cblxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgIEBzdXBwb3J0cyhvYmplY3QtZml0OiBjb3Zlcikge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgfVxuICB9XG5cbiAgQG1lZGlhICN7JG1lZGlhUGhvbmV9IHtcbiAgICAuY29sLTEge1xuICAgICAgaW1nIHtcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIG1heC1oZWlnaHQ6IDUyMHB4O1xuICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAuY29sLTEge1xuICAgIHdpZHRoOiAzMy4zMyU7XG4gICAgZmxleDogMCAwIDMzLjMzJTtcbiAgfVxuXG4gIC5jb2wtMiB7XG4gICAgd2lkdGg6IDY2LjY3JTtcbiAgICBmbGV4OiAwIDAgNjYuNjclO1xuICB9XG5cbiAgLmNvbC0zIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBmbGV4OiAwIDAgMTAwJTtcbiAgfVxufVxuIiwiLy8gLm1hcC13cmFwcGVyIHtcbi8vICAgd2lkdGg6IDEwMCU7XG4vLyAgIHBhZGRpbmctYm90dG9tOiA3NSU7XG4vLyAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbi8vICAgYm9yZGVyOiAxcHggc29saWQgI0FBQTtcbi8vXG4vLyAgID4gZGl2IHtcbi8vICAgICB3aWR0aDogMTAwJTtcbi8vICAgICBoZWlnaHQ6IDEwMCU7XG4vLyAgICAgcG9zaXRpb246IGFic29sdXRlO1xuLy8gICAgIHRvcDogMDtcbi8vICAgICBsZWZ0OiAwO1xuLy8gICB9XG4vLyB9XG5cbi5tYXAge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1ib3R0b206IDcyJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gIGlmcmFtZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgfVxufVxuIiwiLy8gU0lOR0xFIFBST0pFQ1Rcbi5wcm9qZWN0LWhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC1oZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuXG4gIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLnByb2plY3QtdGl0bGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHRleHQtc2hhZG93OiAwIDAgMnB4ICRibGFjaztcbiAgICBwYWRkaW5nLWJvdHRvbTogNDVweDtcblxuICAgIHNwYW4sXG4gICAgc21hbGwge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgc21hbGwge1xuICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICB9XG5cbiAgICA+IGRpdiB7XG4gICAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gICAgfVxuICB9XG59XG5cbi5ncmlkLXRpdGxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwIDI0cHggMzhweCAyNHB4O1xuICBjb2xvcjogJHdoaXRlO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdGV4dC1zaGFkb3c6IDBweCAwcHggMnB4ICRibGFjaztcblxuICBoNCB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgfVxuICB9XG5cbiAgc21hbGwge1xuICAgIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICAgIGxpbmUtaGVpZ2h0OiAoNDAgLyAzMCkgKiAxZW07XG4gICAgZm9udC13ZWlnaHQ6ICRib2xkO1xuICAgIGZvbnQtc2l6ZTogKDMwIC8gMjQpICogMWVtO1xuICB9XG59XG5cbi5wcm9qZWN0LW1haW4ge1xuICA+IGRpdiB7XG4gICAgQGluY2x1ZGUgY29udGVudFdpZHRoO1xuICB9XG59XG5cbi5wcm9qZWN0LXN0YXRzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIDFmcjtcbiAgZ3JpZC1nYXA6IDVweCAyMHB4O1xuICBtYXJnaW4tdG9wOiAzZW07XG5cbiAgZHQge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIH1cbn1cblxuLy8gUFJPSkVDVCBHUklEXG4ucmVsYXRlZC1wcm9qZWN0cyB7XG4gIC8vcGFkZGluZzogNDBweCAwO1xuXG4gIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICBwYWRkaW5nOiA3MHB4IDA7XG4gIH1cbn1cblxuLnByb2plY3QtZ3JpZCB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICA+IGRpdiB7XG4gICAgQGluY2x1ZGUgY29udGVudFdpZHRoO1xuICB9XG5cbiAgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICBhcnRpY2xlIHtcbiAgICBwYWRkaW5nOiA2cHg7XG5cbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIHdpZHRoOiAzMy4zMyU7XG4gICAgICBmbGV4OiAwIDAgMzMuMzMlO1xuICAgIH1cblxuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIHBhZGRpbmc6IDEycHg7XG4gICAgfVxuXG4gICAgJjpudGgtY2hpbGQoM24gKyAyKSB7XG4gICAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zNXB4KTtcbiAgICAgIH1cbiAgICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MHB4KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBhIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY29sb3I6ICR3aGl0ZTtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxNTFweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB6LWluZGV4OiAwO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLHJnYmEoJGJsYWNrLC4zKSAwJSwgcmdiYSgkYmxhY2ssMCkgMTAwJSk7XG4gICAgfVxuICB9XG5cbiAgc21hbGwge1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgfVxuXG4gIC5ncmlkLXRpdGxlIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNDhweDtcbiAgfVxuXG4gICYuYXJjaGl2ZSB7XG4gICAgYmFja2dyb3VuZDogJHByaW1hcnk7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgfVxufVxuXG4ucHJvamVjdC1ncmlkLWlubmVyIHtcbiAgcGFkZGluZzogMCAwIDcwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAwIC02cHg7XG5cbiAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIHBhZGRpbmctdG9wOiA3MHB4O1xuICB9XG5cbiAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgIG1hcmdpbjogMCA2MHB4O1xuICAgIHBhZGRpbmctdG9wOiAzNXB4O1xuICB9XG59XG5cblxuLy8gQGtleWZyYW1lcyB3ZWUge1xuLy8gICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO31cbi8vICAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7fVxuLy8gfVxuLy9cbi8vIGJvZHkge1xuLy8gICBhbmltYXRpb246IHdlZSAxMHMgaW5maW5pdGUgbGluZWFyO1xuLy8gfVxuIiwiLnByZXNzLWxpc3Rpbmcge1xuICBwYWRkaW5nOiA3MHB4IDA7XG5cbiAgPiBkaXYge1xuICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgICB9XG4gIH1cblxuICAuYXJ0aWNsZXMge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBhcnRpY2xlIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEuNGVtO1xuICAgICAgLmRhdGUge1xuICAgICAgICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgICAgIH1cbiAgICAgIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICBzcGFuOmxhc3QtY2hpbGQge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5vdXRsZXQtZ3JpZCB7XG4gIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgIHdpZHRoOiA3NSU7XG5cbiAgICBuYXYge1xuICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgIHRvcDogJGhlYWRlckhlaWdodDtcbiAgICB9XG4gIH1cblxuICB1bCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luOiAtMTJweDtcbiAgfVxuXG4gIGxpIHtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZzogMTJweDtcblxuICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgZmxleDogMCAwIDI1JTtcbiAgICAgIHdpZHRoOiAyNSU7XG4gICAgfVxuICB9XG5cbiAgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICBzcGFuIHtcbiAgICBAaW5jbHVkZSBzck9ubHk7XG4gIH1cblxuICBhIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjREREREREO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgb3BhY2l0eTogLjI1O1xuICAgIH1cbiAgfVxuXG4gICYudGF4LWFyY2hpdmUge1xuICAgIGEge1xuICAgICAgb3BhY2l0eTogLjI1O1xuXG4gICAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IC43NTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsaS5hY3RpdmUgYSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgfVxufVxuXG4uYXJ0aWNsZXMge1xuICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICBmbGV4OiAwIDAgMjAlO1xuICAgIHdpZHRoOiAyMCU7XG4gIH1cbn1cblxuLnMtbmV3cyB7XG4gIHBhZGRpbmc6IDc1cHggMDtcbn1cbi5uZXdzLWNhcm91c2VsIHtcbiAgYXJ0aWNsZSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHBhZGRpbmc6IDFweDtcblxuICAgIGEge1xuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgJHByaW1hcnk7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgkcHJpbWFyeSwuMik7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC5vd2wtaXRlbSB7XG4gICAgJjpudGgtY2hpbGQoMm4pIHtcbiAgICAgIGFydGljbGUge1xuICAgICAgICBhIHtcbiAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuXG4gICAgICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgkcHJpbWFyeSwuMik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm93bC1zdGFnZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgfVxuXG4gIGFydGljbGUsXG4gIGEge1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuXG4gIC5kYXRlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xuICB9XG5cbn1cbiIsIi5wZW9wbGUgPiBtYWluIHtcbiAgcGFkZGluZzogNzBweCAwO1xufVxuLnBlb3BsZS1ncmlkIHtcbiAgaDQge1xuICAgIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZGO1xuICB9XG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gIH1cblxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5ncmlkLXRpdGxlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgYXJ0aWNsZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDZweDtcblxuICAgIGEge1xuICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAuZ3JpZC10aXRsZSB7XG4gICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDE1MXB4O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgei1pbmRleDogMDtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDBkZWcscmdiYSgkYmxhY2ssLjMpIDAlLCByZ2JhKCRibGFjaywwKSAxMDAlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIHdpZHRoOiAzMy4zMyU7XG4gICAgICBmbGV4OiAwIDAgMzMuMzMlO1xuICAgIH1cblxuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIHBhZGRpbmc6IDEycHg7XG4gICAgfVxuXG4gICAgJjpudGgtY2hpbGQoM24gKyAyKSB7XG4gICAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zNXB4KTtcbiAgICAgIH1cbiAgICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MHB4KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLnBlb3BsZS1ncmlkLWlubmVyIHtcbiAgcGFkZGluZzogNjhweCAwIDcwcHg7XG4gIG1hcmdpbjogMCAtNnB4O1xuXG4gIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgfVxuXG4gIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICBtYXJnaW46IDAgNjBweDtcbiAgfVxufVxuXG4ucGVvcGxlLWJpbyB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgZGlzcGxheTogbm9uZTtcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG5cbiAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgbGVmdDogMTAwJTtcbiAgfVxuXG4gIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICB9XG5cbiAgcCB7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBmb250LXNpemU6IDIxcHg7XG4gICAgbGluZS1oZWlnaHQ6ICgyNyAvIDIxKSAqIDFlbTtcbiAgfVxuXG4gID4gZGl2IHtcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuICAgIHBhZGRpbmc6IDE4cHg7XG4gIH1cblxuICBidXR0b24ge1xuICAgIHdpZHRoOiAyNXB4O1xuICAgIGhlaWdodDogMjVweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyNXB4ICsgMTI7XG4gICAgcmlnaHQ6IDI1cHggKyAxMjtcblxuICAgIGJvcmRlcjogMXB4IHNvbGlkICR3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB0ZXh0LWluZGVudDogLTk5OTlweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcblxuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgd2lkdGg6IDE0MCU7XG4gICAgICBoZWlnaHQ6IDFweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgIH1cblxuICAgICY6YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoNDVkZWcpO1xuICAgIH1cbiAgICAmOmFmdGVyIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKCR3aGl0ZSwuOSk7XG4gICAgICBib3JkZXItY29sb3I6ICRwcmltYXJ5O1xuXG4gICAgICAmOmJlZm9yZSxcbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLmJpby10aXRsZSB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAzNXB4KTtcbiAgcCB7XG4gICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxufVxuXG5cbi5wZW9wbGUtZ3JpZCBhcnRpY2xlIHtcbiAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgJjpudGgtY2hpbGQoM24pLFxuICAgICY6bnRoLWNoaWxkKDNuKzEpIHtcbiAgICAgIC5wZW9wbGUtYmlvIHtcbiAgICAgICAgdG9wOiAtNzBweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmOm50aC1jaGlsZCgzbisyKSB7XG4gICAgICAucGVvcGxlLWJpbyB7XG4gICAgICAgIHRvcDogNzBweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmOm50aC1jaGlsZCgzbikge1xuICAgICAgLnBlb3BsZS1iaW8ge1xuICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICByaWdodDogMTAwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgJi5vcGVuIHtcbiAgICB6LWluZGV4OiAxMDtcblxuICAgIC5wZW9wbGUtYmlvIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuICB9XG59XG4iLCIvLyBFWFRFUk5BTCBTQVNTXG5AaW1wb3J0ICcuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL293bC5jYXJvdXNlbC5zY3NzJztcbkBpbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3Mvb3dsLnRoZW1lLmRlZmF1bHQuc2Nzcyc7XG4vLyBCQVNFIElNUE9SVFNcbkBpbXBvcnQgJ2Jhc2UvX3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICdiYXNlL19taXhpbnMnO1xuQGltcG9ydCAnYmFzZS9fcmVzZXQnO1xuQGltcG9ydCAnYmFzZS9fZm9udHMnO1xuXG4vLyBTVFJVQ1RVUkVcbkBpbXBvcnQgJ3N0cnVjdHVyZS9fYmFzZSc7XG5cbi8vIENPTVBPTkVOVFNcbkBpbXBvcnQgJ2NvbXBvbmVudHMvX2dyaWQnO1xuQGltcG9ydCAnY29tcG9uZW50cy9fbWFwJztcblxuLy8gRkVFRFNcbkBpbXBvcnQgJ2ZlZWRzL3Byb2plY3RzL19iYXNlJztcbkBpbXBvcnQgJ2ZlZWRzL3ByZXNzL19iYXNlJztcbkBpbXBvcnQgJ2ZlZWRzL3Blb3BsZS9fYmFzZSc7XG5cbi5mZWVkYmFjayB7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgYmFja2dyb3VuZDogcmdiYSgkcHJpbWFyeSwuOCk7XG4gIGNvbG9yOiAkd2hpdGU7XG4gIHBhZGRpbmc6IDVweDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA5OTk5O1xuICByaWdodDogMTBweDtcbiAgYm90dG9tOiAxMHB4O1xufVxuIl19 */