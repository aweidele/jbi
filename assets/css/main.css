/*
 *  Owl Carousel - Core
 */

@import url("https://fonts.googleapis.com/css?family=Assistant:300,400,700|Expletus+Sans:400,700&display=swap");

.owl-carousel {
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1;
}

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden;
  /* fix firefox animation glitch */
}

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  /* fix for flashing background */
  -webkit-transform: translate3d(0px, 0px, 0px);
}

.owl-carousel .owl-wrapper,
.owl-carousel .owl-item {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
}

.owl-carousel .owl-item {
  position: relative;
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

.owl-carousel .owl-item img {
  display: block;
  width: 100%;
}

.owl-carousel .owl-nav.disabled,
.owl-carousel .owl-dots.disabled {
  display: none;
}

.owl-carousel .owl-nav .owl-prev,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-dot {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel .owl-nav button.owl-prev,
.owl-carousel .owl-nav button.owl-next,
.owl-carousel button.owl-dot {
  background: none;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit;
}

.owl-carousel.owl-loaded {
  display: block;
}

.owl-carousel.owl-loading {
  opacity: 0;
  display: block;
}

.owl-carousel.owl-hidden {
  opacity: 0;
}

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden;
}

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
      touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel.owl-grab {
  cursor: move;
  cursor: -webkit-grab;
  cursor: grab;
}

.owl-carousel.owl-rtl {
  direction: rtl;
}

.owl-carousel.owl-rtl .owl-item {
  float: right;
}

/* No Js */

.no-js .owl-carousel {
  display: block;
}

/*
 *  Owl Carousel - Animate Plugin
 */

.owl-carousel .animated {
  -webkit-animation-duration: 1000ms;
          animation-duration: 1000ms;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.owl-carousel .owl-animated-in {
  z-index: 0;
}

.owl-carousel .owl-animated-out {
  z-index: 1;
}

.owl-carousel .fadeOut {
  -webkit-animation-name: fadeOut;
          animation-name: fadeOut;
}

@-webkit-keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

/*
 * 	Owl Carousel - Auto Height Plugin
 */

.owl-height {
  -webkit-transition: height 500ms ease-in-out;
  transition: height 500ms ease-in-out;
}

/*
 * 	Owl Carousel - Lazy Load Plugin
 */

.owl-carousel .owl-item {
  /**
			This is introduced due to a bug in IE11 where lazy loading combined with autoheight plugin causes a wrong
			calculation of the height of the owl-item that breaks page layouts
		 */
}

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-item .owl-lazy[src^=""],
.owl-carousel .owl-item .owl-lazy:not([src]) {
  max-height: 0;
}

.owl-carousel .owl-item img.owl-lazy {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

/*
 * 	Owl Carousel - Video Plugin
 */

.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000;
}

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 5rem;
  width: 5rem;
  left: 50%;
  top: 50%;
  margin-left: -2.5rem;
  margin-top: -2.5rem;
  background: url("owl.video.play.png") no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  -webkit-transition: -webkit-transform 100ms ease;
  transition: -webkit-transform 100ms ease;
  transition: transform 100ms ease;
  transition: transform 100ms ease, -webkit-transform 100ms ease;
}

.owl-carousel .owl-video-play-icon:hover {
  -webkit-transform: scale(1.3, 1.3);
          transform: scale(1.3, 1.3);
}

.owl-carousel .owl-video-playing .owl-video-tn,
.owl-carousel .owl-video-playing .owl-video-play-icon {
  display: none;
}

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%;
}

/*
 * 	Default theme - Owl Carousel CSS File
 */

.owl-theme .owl-nav {
  margin-top: 0.625rem;
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-nav [class*='owl-'] {
  color: #FFF;
  font-size: 0.875rem;
  margin: 0.3125rem;
  padding: 0.25rem 0.4375rem;
  background: #D6D6D6;
  display: inline-block;
  cursor: pointer;
  border-radius: 0.1875rem;
}

.owl-theme .owl-nav [class*='owl-']:hover {
  background: #869791;
  color: #FFF;
  text-decoration: none;
}

.owl-theme .owl-nav .disabled {
  opacity: 0.5;
  cursor: default;
}

.owl-theme .owl-nav.disabled + .owl-dots {
  margin-top: 0.625rem;
}

.owl-theme .owl-dots {
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-dots .owl-dot {
  display: inline-block;
  zoom: 1;
  *display: inline;
}

.owl-theme .owl-dots .owl-dot span {
  width: 0.625rem;
  height: 0.625rem;
  margin: 0.3125rem 0.4375rem;
  background: #D6D6D6;
  display: block;
  -webkit-backface-visibility: visible;
  -webkit-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  border-radius: 1.875rem;
}

.owl-theme .owl-dots .owl-dot.active span,
.owl-theme .owl-dots .owl-dot:hover span {
  background: #869791;
}

* {
  margin: 0;
  padding: 0;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

ul,
ol {
  list-style: none;
}

a {
  -webkit-transition: all .25s;
  transition: all .25s;
}

.sr-only {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

strong {
  font-weight: 700;
}

body {
  font-family: "Assistant", sans-serif;
}

body.front-page > main,
body.projects:not(.project-archive) > main {
  margin-top: 0;
  position: relative;
  z-index: 0;
}

body.front-page .main-header,
body.projects:not(.project-archive) .main-header {
  background: transparent;
}

body.front-page .main-header > div,
body.projects:not(.project-archive) .main-header > div {
  position: relative;
  z-index: 1;
}

body.front-page .main-header:before,
body.projects:not(.project-archive) .main-header:before {
  width: 100%;
  height: 9.4375rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  content: "";
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.3)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.3) 100%);
}

body.front-page .main-header a,
body.projects:not(.project-archive) .main-header a {
  color: #FFFFFF;
}

body.front-page .main-header a:hover,
body.front-page .main-header a:focus,
body.projects:not(.project-archive) .main-header a:hover,
body.projects:not(.project-archive) .main-header a:focus {
  color: rgba(255, 255, 255, 0.4);
}

h1,
.h1 {
  font-family: "Assistant", sans-serif;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 1.5625rem;
}

h2,
.h2 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.875rem;
  text-transform: uppercase;
  line-height: 1.33333em;
  font-weight: 700;
}

h3,
.h3 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.5rem;
  text-transform: uppercase;
  line-height: 1.33333em;
  font-weight: 700;
}

h5,
.h5 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.125rem;
}

p {
  font-size: 1.125rem;
  line-height: 1.28571em;
  margin-bottom: 1em;
}

.main-header {
  width: 100%;
  height: 4.375rem;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  background: rgba(255, 255, 255, 0.99);
}

.loggedin .main-header {
  top: 2rem;
}

.main-header > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.main-header a {
  color: #1E3141;
  text-decoration: none;
}

.main-header a:hover,
.main-header a:focus {
  color: #707070;
  text-decoration: underline;
}

.main-header nav {
  font-family: "Expletus Sans", cursive;
  font-size: 0.8125rem;
  position: relative;
}

.main-header nav a {
  color: #1E3141;
  text-decoration: none;
}

.main-header nav a:hover,
.main-header nav a:focus {
  color: #707070;
}

.main-header nav ul.menu > li > a {
  text-transform: uppercase;
  letter-spacing: 1.13px;
}

.main-header nav ul.menu li.current-menu-item > a,
.main-header nav ul.menu li.current-menu-ancestor > a {
  font-weight: 800;
}

.main-footer > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.main-footer .contact {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-style: normal;
  font-size: 0.9375rem;
  text-transform: uppercase;
  letter-spacing: 1.73px;
  color: #1E3141;
}

.main-footer .contact p {
  margin: 0;
}

.footer-logo svg {
  width: 5.3125rem;
  height: 6.1875rem;
  fill: #07144E;
  display: block;
}

body.page:not(.front-page) > main {
  padding: 4.375rem 0;
}

body.page:not(.front-page) > main > section {
  color: #1E3141;
}

body.page:not(.front-page) > main > section > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

body.page:not(.front-page) > main > section.bg-primary {
  background: #1E3141;
  color: #FFFFFF;
  padding: 3.75rem 0;
}

.section-inner {
  padding: 0 1.25rem;
}

.hp-slideshow .js-carousel .owl-item img,
.hp-navigation a img {
  min-height: 100%;
  min-width: 100%;
  width: auto;
  height: auto;
  display: block;
  margin: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .hp-slideshow .js-carousel .owl-item img,
  .hp-navigation a img {
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }
}

.hp-slideshow {
  height: 100vh;
  position: relative;
}

.hp-slideshow .js-carousel .owl-item {
  height: 100vh;
}

.hp-slideshow .js-carousel .owl-item > div {
  height: 100%;
  position: relative;
}

.hp-slideshow .js-carousel .owl-nav button {
  position: absolute;
  top: calc(50% - 2.9375rem);
  width: 2.875rem;
  height: 5.9375rem;
  background-image: url("../images/arrow.svg");
  background-size: contain;
  background-repeat: no-repeat;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.hp-slideshow .js-carousel .owl-nav button span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.hp-slideshow .js-carousel .owl-nav button:focus,
.hp-slideshow .js-carousel .owl-nav button:active {
  border: 0;
  outline: none;
}

.hp-slideshow .js-carousel .owl-nav button:hover,
.hp-slideshow .js-carousel .owl-nav button:focus {
  opacity: .5;
}

.hp-slideshow .js-carousel .owl-nav .owl-prev {
  left: 1.25rem;
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.hp-slideshow .js-carousel .owl-nav .owl-next {
  right: 1.25rem;
}

.hp-slideshow .scroll-down {
  width: 1.125rem;
  height: 2.3125rem;
  position: absolute;
  bottom: 1.25rem;
  left: calc(50% - 1.125rem);
  z-index: 10;
  background-image: url("../images/arrow.svg");
  background-size: contain;
  background-repeat: no-repeat;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  overflow: hidden;
  text-indent: -999999px;
}

.hp-slideshow .scroll-down:hover,
.hp-slideshow .scroll-down:focus {
  opacity: .5;
}

.hp-navigation a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
  height: 100vh;
  overflow: hidden;
  font-size: 3.125rem;
  color: #FFFFFF;
  text-align: center;
  text-shadow: 0px 4px 7px #707070;
  text-decoration: none;
  font-family: "Expletus Sans", cursive;
  font-weight: 700;
  background: #1E3141;
}

.hp-navigation a span {
  position: relative;
  z-index: 1;
}

.hp-navigation a img {
  z-index: 0;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-filter: blur(18px);
          filter: blur(18px);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .hp-navigation a img {
    width: 103%;
    height: 103%;
  }
}

.hp-navigation a:hover img {
  -webkit-filter: blur(0);
          filter: blur(0);
}

.content-grid {
  margin: 0 -0.375rem;
}

.content-grid [class^="col"] {
  padding: 0.375rem;
}

.content-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.map-wrapper {
  width: 100%;
  padding-bottom: 75%;
  position: relative;
  border: 0.0625rem solid #AAA;
}

.map-wrapper > div {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.project-hero {
  position: relative;
  max-height: 100vh;
  overflow: hidden;
  margin-bottom: 0.75rem;
}

.project-hero img {
  width: 100%;
  height: auto;
  display: block;
}

.project-hero .project-title {
  width: 100%;
  position: absolute;
  left: 0;
  bottom: 0;
  color: #FFFFFF;
  text-shadow: 0 0 2px #000000;
  padding-bottom: 2.8125rem;
}

.project-hero .project-title span,
.project-hero .project-title small {
  display: block;
}

.project-hero .project-title small {
  font-size: 1em;
  text-transform: none;
}

.project-hero .project-title > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.grid-title {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  padding: 0 1.5rem 2.375rem 1.5rem;
  color: #FFFFFF;
  -webkit-transition: all .25s;
  transition: all .25s;
  text-shadow: 0px 0px 2px #000000;
}

.grid-title h4 {
  font-size: 1.5rem;
  text-transform: uppercase;
}

.grid-title small {
  font-family: "Expletus Sans", cursive;
  line-height: 1.33333em;
  font-weight: 700;
  font-size: 1.25em;
}

.project-main > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.project-stats {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-gap: 20px;
}

.project-stats dt {
  text-transform: uppercase;
}

.related-projects {
  padding: 4.375rem 0;
}

.project-grid > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.project-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.project-grid article {
  padding: 0.375rem;
}

.project-grid a {
  display: block;
  position: relative;
  color: #FFFFFF;
}

.project-grid small {
  font-size: 1.3125rem;
}

.project-grid .grid-title {
  padding-bottom: 3rem;
}

.project-grid.archive {
  background: #1E3141;
  color: #FFFFFF;
}

.project-grid-inner {
  padding: 4.25rem 0 4.375rem;
  text-align: center;
  margin: 0 -0.375rem;
}

.press-listing {
  padding: 4.375rem 0;
}

.press-listing > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.press-listing .articles {
  font-size: 1.125rem;
}

.press-listing .articles article {
  margin-bottom: 1.4em;
}

.press-listing .articles article span {
  display: block;
}

.press-listing .articles a {
  color: #1E3141;
  text-decoration: none;
}

.press-listing .articles a:hover span:last-child,
.press-listing .articles a:focus span:last-child {
  text-decoration: underline;
}

.outlet-grid ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: -0.75rem;
}

.outlet-grid li {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
  width: 50%;
  padding: 0.75rem;
}

.outlet-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.outlet-grid span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.outlet-grid a {
  -webkit-transition: all .25s;
  transition: all .25s;
  display: block;
  border: 0.0625rem solid #DDDDDD;
}

.outlet-grid a:hover,
.outlet-grid a:focus {
  opacity: .25;
}

.outlet-grid.tax-archive a {
  opacity: .25;
}

.outlet-grid.tax-archive a:hover,
.outlet-grid.tax-archive a:focus {
  opacity: .75;
}

.outlet-grid.tax-archive li.active a {
  opacity: 1;
}

.s-news {
  padding: 4.6875rem 0;
}

.news-carousel article {
  font-size: 1.125rem;
  padding: 0.0625rem;
}

.news-carousel article a {
  color: #1E3141;
  display: block;
  height: 100%;
  padding: 1.25rem;
  border: 0.0625rem solid #1E3141;
  text-decoration: none;
}

.news-carousel article a:hover,
.news-carousel article a:focus {
  background: rgba(30, 49, 65, 0.2);
}

.news-carousel .owl-item:nth-child(2n) article a {
  color: #FFFFFF;
  background: #1E3141;
}

.news-carousel .owl-item:nth-child(2n) article a:hover,
.news-carousel .owl-item:nth-child(2n) article a:focus {
  color: #1E3141;
  background: rgba(30, 49, 65, 0.2);
}

.news-carousel .owl-stage {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
}

.news-carousel article,
.news-carousel a {
  height: 100%;
}

.news-carousel .date {
  margin-bottom: .5em;
}

.people > main {
  padding: 4.375rem 0;
}

.people-grid > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.people-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.people-grid .grid-title {
  opacity: 0;
}

.people-grid article {
  position: relative;
  padding: 0.375rem;
}

.people-grid article a:hover .grid-title,
.people-grid article a:focus .grid-title {
  opacity: 1;
}

.people-grid-inner {
  padding: 4.25rem 0 4.375rem;
  margin: 0 -0.375rem;
}

.people-bio {
  width: 100%;
  min-height: 100%;
  position: absolute;
  left: 100%;
  top: 0;
  padding: 0.75rem;
  display: none;
}

.people-bio p {
  color: #FFFFFF;
  font-size: 1.3125rem;
  line-height: 1.28571em;
}

.people-bio > div {
  min-height: 100%;
  background: #1E3141;
  padding: 1.125rem;
}

.people-bio button {
  width: 1.5625rem;
  height: 1.5625rem;
  position: absolute;
  top: 2.3125rem;
  right: 2.3125rem;
  border: 0.0625rem solid #FFFFFF;
  background-color: transparent;
  text-indent: -9999px;
  overflow: hidden;
  cursor: pointer;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio button:before,
.people-bio button:after {
  width: 140%;
  height: 0.0625rem;
  position: absolute;
  top: 50%;
  left: 50%;
  content: "";
  background: #FFFFFF;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio button:before {
  -webkit-transform: translateX(-50%) rotate(45deg);
          transform: translateX(-50%) rotate(45deg);
}

.people-bio button:after {
  -webkit-transform: translateX(-50%) rotate(-45deg);
          transform: translateX(-50%) rotate(-45deg);
}

.people-bio button:hover,
.people-bio button:focus {
  background: rgba(255, 255, 255, 0.9);
  border-color: #1E3141;
}

.people-bio button:hover:before,
.people-bio button:hover:after,
.people-bio button:focus:before,
.people-bio button:focus:after {
  background-color: #1E3141;
}

.bio-title {
  width: calc(100% - 2.1875rem);
}

.bio-title p:first-child {
  text-transform: uppercase;
  margin: 0;
}

.people-grid article:nth-child(3n) .people-bio,
.people-grid article:nth-child(3n+1) .people-bio {
  top: -4.375rem;
}

.people-grid article:nth-child(3n+2) .people-bio {
  top: 4.375rem;
}

.people-grid article:nth-child(3n) .people-bio {
  left: auto;
  right: 100%;
}

.people-grid article.open {
  z-index: 10;
}

.people-grid article.open .people-bio {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media screen and (min-width: 768px) {
  .main-header > div {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }

  .hp-navigation a {
    font-size: 5rem;
  }

  .content-grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }

  .col-1 {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .col-2 {
    width: 66.67%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 66.67%;
            flex: 0 0 66.67%;
  }

  .col-3 {
    width: 100%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
  }

  .project-grid article {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .project-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-35px);
            transform: translateY(-35px);
  }

  .project-grid-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }

  .press-listing > div {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }

  .outlet-grid {
    width: 75%;
  }

  .outlet-grid nav {
    position: -webkit-sticky;
    position: sticky;
    top: 4.375rem;
  }

  .outlet-grid li {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    width: 25%;
  }

  .articles {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    width: 20%;
  }

  .people-grid article {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .people-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-35px);
            transform: translateY(-35px);
  }

  .people-grid-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }
}

@media screen and (min-width: 1025px) {
  .main-header button {
    display: none;
  }

  .main-header nav a {
    padding: 0 0.75rem;
  }

  .main-header nav {
    margin: 0 -0.75rem;
  }

  .main-header nav ul.menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
  }

  .main-header nav ul.menu > li:hover .sub-menu,
  .main-header nav ul.menu > li.current-menu-item .sub-menu,
  .main-header nav ul.menu > li.current-menu-ancestor .sub-menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }

  .main-header nav .sub-menu {
    display: none;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    position: absolute;
    top: 100%;
    right: 0;
    min-width: 100%;
  }

  .main-header nav .sub-menu a {
    padding-top: 0.625rem;
    display: block;
  }

  .hp-navigation a {
    font-size: 9.6875rem;
  }

  .content-grid {
    margin: 0 -0.75rem;
  }

  .content-grid [class^="col"] {
    padding: 0.75rem;
  }

  .grid-title h4 {
    font-size: 1.875rem;
  }

  .project-grid article {
    padding: 0.75rem;
  }

  .project-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-70px);
            transform: translateY(-70px);
  }

  .project-grid-inner {
    margin: 0 -0.75rem;
  }

  .people-grid article {
    padding: 0.75rem;
  }

  .people-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-70px);
            transform: translateY(-70px);
  }

  .people-grid-inner {
    margin: 0 -0.75rem;
  }
}

@media screen and (max-width: 767.9px) {
  .content-grid .col-1 img {
    width: auto;
    max-height: 520px;
    margin: auto;
  }
}
/*# sourceMappingURL=data:application/json;base64, */