/*
 *  Owl Carousel - Core
 */

@import url("https://fonts.googleapis.com/css?family=Assistant:300,400,700|Expletus+Sans:400,700&display=swap");

.owl-carousel {
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1;
}

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden;
  /* fix firefox animation glitch */
}

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  /* fix for flashing background */
  -webkit-transform: translate3d(0px, 0px, 0px);
}

.owl-carousel .owl-wrapper,
.owl-carousel .owl-item {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
}

.owl-carousel .owl-item {
  position: relative;
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

.owl-carousel .owl-item img {
  display: block;
  width: 100%;
}

.owl-carousel .owl-nav.disabled,
.owl-carousel .owl-dots.disabled {
  display: none;
}

.owl-carousel .owl-nav .owl-prev,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-dot {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel .owl-nav button.owl-prev,
.owl-carousel .owl-nav button.owl-next,
.owl-carousel button.owl-dot {
  background: none;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit;
}

.owl-carousel.owl-loaded {
  display: block;
}

.owl-carousel.owl-loading {
  opacity: 0;
  display: block;
}

.owl-carousel.owl-hidden {
  opacity: 0;
}

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden;
}

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
      touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel.owl-grab {
  cursor: move;
  cursor: -webkit-grab;
  cursor: grab;
}

.owl-carousel.owl-rtl {
  direction: rtl;
}

.owl-carousel.owl-rtl .owl-item {
  float: right;
}

/* No Js */

.no-js .owl-carousel {
  display: block;
}

/*
 *  Owl Carousel - Animate Plugin
 */

.owl-carousel .animated {
  -webkit-animation-duration: 1000ms;
          animation-duration: 1000ms;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.owl-carousel .owl-animated-in {
  z-index: 0;
}

.owl-carousel .owl-animated-out {
  z-index: 1;
}

.owl-carousel .fadeOut {
  -webkit-animation-name: fadeOut;
          animation-name: fadeOut;
}

@-webkit-keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

/*
 * 	Owl Carousel - Auto Height Plugin
 */

.owl-height {
  -webkit-transition: height 500ms ease-in-out;
  transition: height 500ms ease-in-out;
}

/*
 * 	Owl Carousel - Lazy Load Plugin
 */

.owl-carousel .owl-item {
  /**
			This is introduced due to a bug in IE11 where lazy loading combined with autoheight plugin causes a wrong
			calculation of the height of the owl-item that breaks page layouts
		 */
}

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-item .owl-lazy[src^=""],
.owl-carousel .owl-item .owl-lazy:not([src]) {
  max-height: 0;
}

.owl-carousel .owl-item img.owl-lazy {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

/*
 * 	Owl Carousel - Video Plugin
 */

.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000;
}

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 5rem;
  width: 5rem;
  left: 50%;
  top: 50%;
  margin-left: -2.5rem;
  margin-top: -2.5rem;
  background: url("owl.video.play.png") no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  -webkit-transition: -webkit-transform 100ms ease;
  transition: -webkit-transform 100ms ease;
  transition: transform 100ms ease;
  transition: transform 100ms ease, -webkit-transform 100ms ease;
}

.owl-carousel .owl-video-play-icon:hover {
  -webkit-transform: scale(1.3, 1.3);
          transform: scale(1.3, 1.3);
}

.owl-carousel .owl-video-playing .owl-video-tn,
.owl-carousel .owl-video-playing .owl-video-play-icon {
  display: none;
}

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%;
}

/*
 * 	Default theme - Owl Carousel CSS File
 */

.owl-theme .owl-nav {
  margin-top: 0.625rem;
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-nav [class*='owl-'] {
  color: #FFF;
  font-size: 0.875rem;
  margin: 0.3125rem;
  padding: 0.25rem 0.4375rem;
  background: #D6D6D6;
  display: inline-block;
  cursor: pointer;
  border-radius: 0.1875rem;
}

.owl-theme .owl-nav [class*='owl-']:hover {
  background: #869791;
  color: #FFF;
  text-decoration: none;
}

.owl-theme .owl-nav .disabled {
  opacity: 0.5;
  cursor: default;
}

.owl-theme .owl-nav.disabled + .owl-dots {
  margin-top: 0.625rem;
}

.owl-theme .owl-dots {
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-dots .owl-dot {
  display: inline-block;
  zoom: 1;
  *display: inline;
}

.owl-theme .owl-dots .owl-dot span {
  width: 0.625rem;
  height: 0.625rem;
  margin: 0.3125rem 0.4375rem;
  background: #D6D6D6;
  display: block;
  -webkit-backface-visibility: visible;
  -webkit-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  border-radius: 1.875rem;
}

.owl-theme .owl-dots .owl-dot.active span,
.owl-theme .owl-dots .owl-dot:hover span {
  background: #869791;
}

* {
  margin: 0;
  padding: 0;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

ul,
ol {
  list-style: none;
}

a {
  -webkit-transition: all .25s;
  transition: all .25s;
}

.sr-only {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

strong {
  font-weight: 700;
}

body {
  font-family: "Assistant", sans-serif;
}

body.front-page > main,
body.projects:not(.project-archive) > main {
  margin-top: 0;
  position: relative;
  z-index: 0;
}

body.front-page .main-header,
body.projects:not(.project-archive) .main-header {
  background: transparent;
}

body.front-page .main-header > div,
body.projects:not(.project-archive) .main-header > div {
  position: relative;
  z-index: 1;
}

body.front-page .main-header:before,
body.projects:not(.project-archive) .main-header:before {
  width: 100%;
  height: 9.4375rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  content: "";
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.3)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.3) 100%);
}

body.front-page .main-header a,
body.projects:not(.project-archive) .main-header a {
  color: #FFFFFF;
}

body.front-page .main-header a:hover,
body.front-page .main-header a:focus,
body.projects:not(.project-archive) .main-header a:hover,
body.projects:not(.project-archive) .main-header a:focus {
  color: rgba(255, 255, 255, 0.4);
}

h1,
.h1 {
  font-family: "Assistant", sans-serif;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 1.5625rem;
}

h2,
.h2 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.875rem;
  text-transform: uppercase;
  line-height: 1.33333em;
  font-weight: 700;
}

h3,
.h3 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.5rem;
  text-transform: uppercase;
  line-height: 1.33333em;
  font-weight: 700;
}

h5,
.h5 {
  font-family: "Expletus Sans", cursive;
  font-size: 1.125rem;
}

p {
  font-size: 1.125rem;
  line-height: 1.28571em;
  margin-bottom: 1em;
}

.main-header {
  width: 100%;
  height: 4.375rem;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  background: rgba(255, 255, 255, 0.99);
}

.loggedin .main-header {
  top: 2rem;
}

.main-header > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.main-header a {
  color: #1E3141;
  text-decoration: none;
}

.main-header a:hover,
.main-header a:focus {
  color: #707070;
}

.main-header nav {
  font-family: "Expletus Sans", cursive;
  font-size: 0.9375rem;
  position: relative;
}

.main-header nav a {
  color: #1E3141;
  text-decoration: none;
}

.main-header nav a:hover,
.main-header nav a:focus {
  color: #707070;
}

.main-header nav ul.menu > li > a {
  text-transform: uppercase;
  letter-spacing: 1.13px;
}

.main-header nav ul.menu li.current-menu-item > a,
.main-header nav ul.menu li.current-menu-ancestor > a {
  font-weight: 800;
}

.main-footer {
  padding: 1.25rem 0;
}

.main-footer a {
  color: #1E3141;
  text-decoration: none;
}

.main-footer a:hover,
.main-footer a:focus {
  text-decoration: underline;
}

.main-footer > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.main-footer .contact {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-style: normal;
  font-size: 0.9375rem;
  text-transform: uppercase;
  letter-spacing: 1.73px;
  color: #1E3141;
}

.main-footer .contact p {
  margin: 0;
  font-size: 0.875rem;
}

.main-footer .social {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.main-footer .social a {
  width: 1.5rem;
  height: 1.5rem;
  margin-left: 0.625rem;
}

.main-footer .social a svg {
  width: 100%;
  height: 100%;
}

.main-footer .social a span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.footer-logo svg {
  width: 5.3125rem;
  height: 6.1875rem;
  fill: #07144E;
  display: block;
}

body.page:not(.front-page) > main {
  padding: 4.375rem 0;
}

body.page:not(.front-page) > main > section {
  color: #1E3141;
}

body.page:not(.front-page) > main > section > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

body.page:not(.front-page) > main > section.bg-primary {
  background: #1E3141;
  color: #FFFFFF;
  padding: 3.75rem 0;
}

.section-inner {
  padding: 0 1.25rem;
}

.hp-slideshow .js-carousel .owl-item img,
.hp-navigation a img {
  min-height: 100%;
  min-width: 100%;
  width: auto;
  height: auto;
  display: block;
  margin: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .hp-slideshow .js-carousel .owl-item img,
  .hp-navigation a img {
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }
}

.hp-slideshow {
  height: 100vh;
  position: relative;
}

.hp-slideshow .js-carousel .owl-item {
  height: 100vh;
}

.hp-slideshow .js-carousel .owl-item > div {
  height: 100%;
  position: relative;
}

.hp-slideshow .js-carousel .owl-nav button {
  position: absolute;
  top: calc(50% - 2.9375rem);
  width: 2.875rem;
  height: 5.9375rem;
  background-image: url("../images/arrow.svg");
  background-size: contain;
  background-repeat: no-repeat;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.hp-slideshow .js-carousel .owl-nav button span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.hp-slideshow .js-carousel .owl-nav button:focus,
.hp-slideshow .js-carousel .owl-nav button:active {
  border: 0;
  outline: none;
}

.hp-slideshow .js-carousel .owl-nav button:hover,
.hp-slideshow .js-carousel .owl-nav button:focus {
  opacity: .5;
}

.hp-slideshow .js-carousel .owl-nav .owl-prev {
  left: 1.25rem;
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.hp-slideshow .js-carousel .owl-nav .owl-next {
  right: 1.25rem;
}

.hp-slideshow .scroll-down {
  width: 2.875rem;
  height: 5.9375rem;
  position: absolute;
  bottom: 1.25rem;
  left: calc(50% - 1.125rem);
  z-index: 10;
  background-image: url("../images/arrow.svg");
  background-size: contain;
  background-repeat: no-repeat;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  overflow: hidden;
  text-indent: -999999px;
}

.hp-slideshow .scroll-down:hover,
.hp-slideshow .scroll-down:focus {
  opacity: .5;
}

.hp-navigation a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
  height: 100vh;
  overflow: hidden;
  font-size: 3.125rem;
  color: #FFFFFF;
  text-align: center;
  text-shadow: 0px 4px 7px #707070;
  text-decoration: none;
  font-family: "Expletus Sans", cursive;
  font-weight: 700;
  background: #1E3141;
}

.hp-navigation a span {
  position: relative;
  z-index: 1;
}

.hp-navigation a img {
  z-index: 0;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-filter: blur(18px);
          filter: blur(18px);
}

@supports ((-o-object-fit: cover) or (object-fit: cover)) {
  .hp-navigation a img {
    width: 103%;
    height: 103%;
  }
}

.hp-navigation a:hover img {
  -webkit-filter: blur(0);
          filter: blur(0);
}

.content-grid {
  margin: 0 -0.375rem;
}

.content-grid [class^="col"] {
  padding: 0.375rem;
}

.content-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.map {
  width: 100%;
  padding-bottom: 72%;
  position: relative;
}

.map iframe {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
}

.project-hero {
  position: relative;
  max-height: 100vh;
  overflow: hidden;
  margin-bottom: 0.75rem;
}

.project-hero img {
  width: 100%;
  height: auto;
  display: block;
}

.project-hero .project-title {
  width: 100%;
  position: absolute;
  left: 0;
  bottom: 0;
  color: #FFFFFF;
  text-shadow: 0 0 2px #000000;
  padding-bottom: 2.8125rem;
}

.project-hero .project-title span,
.project-hero .project-title small {
  display: block;
}

.project-hero .project-title small {
  font-size: 1em;
  text-transform: none;
}

.project-hero .project-title > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.grid-title {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  padding: 0 1.5rem 2.375rem 1.5rem;
  color: #FFFFFF;
  -webkit-transition: all .25s;
  transition: all .25s;
  text-shadow: 0px 0px 2px #000000;
}

.grid-title h4 {
  font-size: 1.5rem;
  text-transform: uppercase;
}

.grid-title small {
  font-family: "Expletus Sans", cursive;
  line-height: 1.33333em;
  font-weight: 700;
  font-size: 1.25em;
}

.project-main > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.project-stats {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-gap: 5px 20px;
  margin-top: 3em;
}

.project-stats dt {
  text-transform: uppercase;
}

.related-projects {
  padding: 4.375rem 0;
}

.project-grid > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.project-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.project-grid article {
  padding: 0.375rem;
}

.project-grid a {
  display: block;
  position: relative;
  color: #FFFFFF;
}

.project-grid small {
  font-size: 1.3125rem;
}

.project-grid .grid-title {
  padding-bottom: 3rem;
}

.project-grid.archive {
  background: #1E3141;
  color: #FFFFFF;
}

.project-grid-inner {
  padding: 4.25rem 0 4.375rem;
  text-align: center;
  margin: 0 -0.375rem;
}

.press-listing {
  padding: 4.375rem 0;
}

.press-listing > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.press-listing .articles {
  font-size: 1.125rem;
}

.press-listing .articles article {
  margin-bottom: 1.4em;
}

.press-listing .articles article span {
  display: block;
}

.press-listing .articles a {
  color: #1E3141;
  text-decoration: none;
}

.press-listing .articles a:hover span:last-child,
.press-listing .articles a:focus span:last-child {
  text-decoration: underline;
}

.outlet-grid ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: -0.75rem;
}

.outlet-grid li {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
  width: 50%;
  padding: 0.75rem;
}

.outlet-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.outlet-grid span {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.outlet-grid a {
  -webkit-transition: all .25s;
  transition: all .25s;
  display: block;
  border: 0.0625rem solid #DDDDDD;
}

.outlet-grid a:hover,
.outlet-grid a:focus {
  opacity: .25;
}

.outlet-grid.tax-archive a {
  opacity: .25;
}

.outlet-grid.tax-archive a:hover,
.outlet-grid.tax-archive a:focus {
  opacity: .75;
}

.outlet-grid.tax-archive li.active a {
  opacity: 1;
}

.s-news {
  padding: 4.6875rem 0;
}

.news-carousel article {
  font-size: 1.125rem;
  padding: 0.0625rem;
}

.news-carousel article a {
  color: #1E3141;
  display: block;
  height: 100%;
  padding: 1.25rem;
  border: 0.0625rem solid #1E3141;
  text-decoration: none;
}

.news-carousel article a:hover,
.news-carousel article a:focus {
  background: rgba(30, 49, 65, 0.2);
}

.news-carousel .owl-item:nth-child(2n) article a {
  color: #FFFFFF;
  background: #1E3141;
}

.news-carousel .owl-item:nth-child(2n) article a:hover,
.news-carousel .owl-item:nth-child(2n) article a:focus {
  color: #1E3141;
  background: rgba(30, 49, 65, 0.2);
}

.news-carousel .owl-stage {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
}

.news-carousel article,
.news-carousel a {
  height: 100%;
}

.news-carousel .date {
  margin-bottom: .5em;
}

.people > main {
  padding: 4.375rem 0;
}

.people-grid > div {
  max-width: 1600px;
  margin: auto;
  padding: 0 1.25rem;
}

.people-grid img {
  width: 100%;
  height: auto;
  display: block;
}

.people-grid .grid-title {
  opacity: 0;
}

.people-grid article {
  position: relative;
  padding: 0.375rem;
}

.people-grid article a:hover .grid-title,
.people-grid article a:focus .grid-title {
  opacity: 1;
}

.people-grid-inner {
  padding: 4.25rem 0 4.375rem;
  margin: 0 -0.375rem;
}

.people-bio {
  width: 100%;
  min-height: 100%;
  position: absolute;
  left: 100%;
  top: 0;
  padding: 0.75rem;
  display: none;
}

.people-bio p {
  color: #FFFFFF;
  font-size: 1.3125rem;
  line-height: 1.28571em;
}

.people-bio > div {
  min-height: 100%;
  background: #1E3141;
  padding: 1.125rem;
}

.people-bio button {
  width: 1.5625rem;
  height: 1.5625rem;
  position: absolute;
  top: 2.3125rem;
  right: 2.3125rem;
  border: 0.0625rem solid #FFFFFF;
  background-color: transparent;
  text-indent: -9999px;
  overflow: hidden;
  cursor: pointer;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio button:before,
.people-bio button:after {
  width: 140%;
  height: 0.0625rem;
  position: absolute;
  top: 50%;
  left: 50%;
  content: "";
  background: #FFFFFF;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.people-bio button:before {
  -webkit-transform: translateX(-50%) rotate(45deg);
          transform: translateX(-50%) rotate(45deg);
}

.people-bio button:after {
  -webkit-transform: translateX(-50%) rotate(-45deg);
          transform: translateX(-50%) rotate(-45deg);
}

.people-bio button:hover,
.people-bio button:focus {
  background: rgba(255, 255, 255, 0.9);
  border-color: #1E3141;
}

.people-bio button:hover:before,
.people-bio button:hover:after,
.people-bio button:focus:before,
.people-bio button:focus:after {
  background-color: #1E3141;
}

.bio-title {
  width: calc(100% - 2.1875rem);
}

.bio-title p:first-child {
  text-transform: uppercase;
  margin: 0;
}

.people-grid article:nth-child(3n) .people-bio,
.people-grid article:nth-child(3n+1) .people-bio {
  top: -4.375rem;
}

.people-grid article:nth-child(3n+2) .people-bio {
  top: 4.375rem;
}

.people-grid article:nth-child(3n) .people-bio {
  left: auto;
  right: 100%;
}

.people-grid article.open {
  z-index: 10;
}

.people-grid article.open .people-bio {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media screen and (min-width: 768px) {
  .main-header > div {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: end;
        -ms-flex-align: end;
            align-items: flex-end;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    padding-top: 0.625rem;
  }

  .hp-navigation a {
    font-size: 5rem;
  }

  .content-grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }

  .col-1 {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .col-2 {
    width: 66.67%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 66.67%;
            flex: 0 0 66.67%;
  }

  .col-3 {
    width: 100%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
  }

  .project-grid article {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .project-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-35px);
            transform: translateY(-35px);
  }

  .project-grid-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }

  .press-listing > div {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }

  .outlet-grid {
    width: 75%;
  }

  .outlet-grid nav {
    position: -webkit-sticky;
    position: sticky;
    top: 4.375rem;
  }

  .outlet-grid li {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    width: 25%;
  }

  .articles {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    width: 20%;
  }

  .people-grid article {
    width: 33.33%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33%;
            flex: 0 0 33.33%;
  }

  .people-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-35px);
            transform: translateY(-35px);
  }

  .people-grid-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }
}

@media screen and (min-width: 1025px) {
  .main-header button {
    display: none;
  }

  .main-header nav a {
    padding: 0 0.75rem;
  }

  .main-header nav {
    margin: 0 -0.75rem;
  }

  .main-header nav ul.menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
  }

  .main-header nav ul.menu > li:hover .sub-menu,
  .main-header nav ul.menu > li.current-menu-item .sub-menu,
  .main-header nav ul.menu > li.current-menu-ancestor .sub-menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }

  .main-header nav .sub-menu {
    display: none;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    position: absolute;
    top: 100%;
    right: 0;
    min-width: 100%;
  }

  .main-header nav .sub-menu a {
    padding-top: 0.625rem;
    display: block;
  }

  .hp-navigation a {
    font-size: 9.6875rem;
  }

  .content-grid {
    margin: 0 -0.75rem;
  }

  .content-grid [class^="col"] {
    padding: 0.75rem;
  }

  .grid-title h4 {
    font-size: 1.875rem;
  }

  .project-grid article {
    padding: 0.75rem;
  }

  .project-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-70px);
            transform: translateY(-70px);
  }

  .project-grid-inner {
    margin: 0 -0.75rem;
  }

  .people-grid article {
    padding: 0.75rem;
  }

  .people-grid article:nth-child(3n + 2) {
    -webkit-transform: translateY(-70px);
            transform: translateY(-70px);
  }

  .people-grid-inner {
    margin: 0 -0.75rem;
  }
}

@media screen and (max-width: 767.9px) {
  .content-grid .col-1 img {
    width: auto;
    max-height: 520px;
    margin: auto;
  }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3MvX2NvcmUuc2NzcyIsIm1haW4uY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fYW5pbWF0ZS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fYXV0b2hlaWdodC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fbGF6eWxvYWQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3MvX3ZpZGVvLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL190aGVtZS5kZWZhdWx0LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL190aGVtZS5zY3NzIiwiYmFzZS9fcmVzZXQuc2NzcyIsImJhc2UvX21peGlucy5zY3NzIiwic3RydWN0dXJlL19iYXNlLnNjc3MiLCJzdHJ1Y3R1cmUvY29weS9faGVhZGluZ3Muc2NzcyIsImJhc2UvX3ZhcmlhYmxlcy5zY3NzIiwic3RydWN0dXJlL2NvcHkvX2Jhc2Uuc2NzcyIsInN0cnVjdHVyZS9oZWFkZXIvX2hlYWRlci5zY3NzIiwic3RydWN0dXJlL2hlYWRlci9fbmF2LnNjc3MiLCJzdHJ1Y3R1cmUvZm9vdGVyL19mb290ZXIuc2NzcyIsInN0cnVjdHVyZS9fcGFnZS5zY3NzIiwic3RydWN0dXJlL19mcm9udC1wYWdlLnNjc3MiLCJjb21wb25lbnRzL19ncmlkLnNjc3MiLCJjb21wb25lbnRzL19tYXAuc2NzcyIsImZlZWRzL3Byb2plY3RzL19iYXNlLnNjc3MiLCJmZWVkcy9wcmVzcy9fYmFzZS5zY3NzIiwiZmVlZHMvcGVvcGxlL19iYXNlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7O0FBQ0gsZ0hBQWM7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VTlXRSxjQUFXO0VBQ1osbUJBQUE7RVZpWEMsV0FBVztDVS9XYjs7QVZrWEE7O0VVOVdFLHdCQUE0QjtDVmlYN0I7O0FBRUQ7O0VVL1dFLG1CQ0RVO0VERVYsV0FBVztDVmtYWjs7QUFFRDs7RUFFRSxZQUFZO0VValhaLGtCQUFLO0VBQ0wsbUJDUlU7RURTVixPQUFBO0VBQ0QsUUFBQTtFVm1YQyxXQUFXO0VZellYLFlBQUE7RUFFQSw0R0FBZTtFQUNmLGdGQUE0QjtDWjBZN0I7O0FBRUQ7O0VhaFpFLGVBQVc7Q2JtWlo7O0FBRUQ7Ozs7RWE1V0MsZ0NBQUE7Q2JpWEE7O0FBRUQ7O0VBRUUscUNBQXFDO0VhL1p2QyxpQkFhUTtFTFpOLDBCR0FVO0VIQ1YscUJBQVk7Q1JpYWI7O0FBRUQ7O0VhcmFBLHNDQWFRO0ViMlpOLG9CYXZaaUI7RWJ3WmpCLDBCYXZaeUI7RWJ3WnpCLHVCYXZacUI7RWJ3WnJCLGlCYXZaaUI7Q2J3WmxCOztBQUVEOztFYTlhQSxzQ0F1QlM7RWIwWlAsa0JheFppQjtFYnlaakIsMEJhdlpDO0Vid1pELHVCQUF1QjtFQUN2QixpQkFBaUI7Q2FwYm5COztBYnViQTs7RUFFRSxzQ0FBc0M7RVFsYnRDLG9CQUFDO0NSb2JGOztBQUVEO0VhN2JBLG9CQ0FJO0VBQ0YsdUJIYVU7RUdaVixtQkFBZTtDZCtiaEI7O0FBRUQ7RWFuY0EsWUNBQTtFQU1JLGlCSEVNO0VHRE4sZ0JBQWU7RUFVaEIsT0FBQTtFZHViRCxRQUFRO0VRamNSLFlNUEY7RUFVTSxzQ0hEYTtDSENoQjs7QU1JQztFRGRKLFVBQUE7Q2IrY0M7O0FBRUQ7RUFDRSxrQkFBa0I7RWNoY2xCLGFBQWE7RURsQmYsbUJDQUc7Q2RxZEY7O0FBRUQ7RUFDRSxlQUFlO0VjamNiLHNCQUFtQjtDZG1jdEI7O0FBRUQ7O0VBRUUsZUFBZTtDQUNoQjs7QUFFRDtFY2xjUSxzQ0FBc0I7RUFDdkIscUJBQUE7RWRvY0wsbUJBQW1CO0NjbGNmOztBZHFjTjtFQUNFLGVjaGNTO0VkaWNULHNCQUFzQjtDQUN2Qjs7QUFFRDs7RUFFRSxlQUFlO0Nj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QXdCO1FBQ3BCLHFCQUFxQjtZQUNqQiw0QkFBNEI7R0FDckM7Q0FDRjs7QUFFRDtFQUNFO0lBQ0UsY0FBYztHQUNmOztFQUVEO0lBQ0UsbUJBQWdCO0dBQ2pCOztFQUVEO0lBQ0UsbUJBQWdCO0dBQ2pCOztFQUVEO0lBQ0UscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2Qsc0JBQXNCO1FBQ2xCLG1CQUFtQjtZQUNmLDBCQUEwQjtHQUNuQzs7RUFFRDs7O0lBR0UscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixjQUFjO0dBQ2Y7O0VBRUQ7SUFDRSxjQUFjO0lBQ2Qsc0JBQXNCO1FBQ2xCLG1CQUFtQjtZQUNmLDBCQUEwQjtJQUNsQyxtQkFBbUI7SUFDbkIsVUFBVTtJQUNWLFNBQVM7SUFDVCxnQkFBZ0I7R0FDakI7O0VBRUQ7SUFDRSxzQkFBa0I7SUFDbEIsZUFBZTtHQUNoQjs7RUFFRDtJQUNFLHFCQUFpQjtHQUNsQjs7RUFFRDtJQUNFLG1CQUFnQjtHQUNqQjs7RUFFRDtJQUNFLGlCQUFjO0dBQ2Y7O0VBRUQ7SUFDRSxvQkFBZ0I7R0FDakI7O0VBRUQ7SUFDRSxpQkFBYztHQUNmOztFQUVEO0lBQ0UscUNBQXFDO1lBQzdCLDZCQUE2QjtHQUN0Qzs7RUFFRDtJQUNFLG1CQUFnQjtHQUNqQjs7RUFFRDtJQUNFLGlCQUFjO0dBQ2Y7O0VBRUQ7SUFDRSxxQ0FBcUM7WUFDN0IsNkJBQTZCO0dBQ3RDOztFQUVEO0lBQ0UsbUJBQWdCO0dBQ2pCO0NBQ0Y7O0FBRUQ7RUFDRTtJQUNFLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtHQUNkO0NBQ0YiLCJmaWxlIjoidG8uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqICBPd2wgQ2Fyb3VzZWwgLSBDb3JlXG4gKi9cbi5vd2wtY2Fyb3VzZWwge1xuXHRkaXNwbGF5OiBub25lO1xuXHR3aWR0aDogMTAwJTtcblx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcblx0LyogcG9zaXRpb24gcmVsYXRpdmUgYW5kIHotaW5kZXggZml4IHdlYmtpdCByZW5kZXJpbmcgZm9udHMgaXNzdWUgKi9cblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR6LWluZGV4OiAxO1xuXG5cdC5vd2wtc3RhZ2Uge1xuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHQtbXMtdG91Y2gtYWN0aW9uOiBwYW4tWTtcblx0XHR0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcblx0XHQtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgLyogZml4IGZpcmVmb3ggYW5pbWF0aW9uIGdsaXRjaCAqL1xuXHR9XG5cblx0Lm93bC1zdGFnZTphZnRlciB7XG5cdFx0Y29udGVudDogXCIuXCI7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0Y2xlYXI6IGJvdGg7XG5cdFx0dmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdGxpbmUtaGVpZ2h0OiAwO1xuXHRcdGhlaWdodDogMDtcblx0fVxuXG5cdC5vd2wtc3RhZ2Utb3V0ZXIge1xuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRvdmVyZmxvdzogaGlkZGVuO1xuXHRcdC8qIGZpeCBmb3IgZmxhc2hpbmcgYmFja2dyb3VuZCAqL1xuXHRcdC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDBweCwgMHB4KTtcblx0fVxuXG5cdC5vd2wtd3JhcHBlcixcblx0Lm93bC1pdGVte1xuXHRcdC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdC1tcy1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0LXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsMCwwKTtcblx0XHQtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuXHRcdC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsMCwwKTtcblx0fVxuXG5cdC5vd2wtaXRlbSB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdG1pbi1oZWlnaHQ6IDFweDtcblx0XHRmbG9hdDogbGVmdDtcblx0XHQtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcblx0XHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRcdC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcblx0fVxuXHQub3dsLWl0ZW0gaW1nIHtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHR3aWR0aDogMTAwJTtcblx0fVxuXG5cdC5vd2wtbmF2LmRpc2FibGVkLFxuXHQub3dsLWRvdHMuZGlzYWJsZWQge1xuXHRcdGRpc3BsYXk6IG5vbmU7XG5cdH1cblxuXHQub3dsLW5hdiAub3dsLXByZXYsXG5cdC5vd2wtbmF2IC5vd2wtbmV4dCxcblx0Lm93bC1kb3Qge1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHQtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcblx0XHQtbW96LXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1tcy11c2VyLXNlbGVjdDogbm9uZTtcblx0XHR1c2VyLXNlbGVjdDogbm9uZTtcblx0fVxuXG5cdC5vd2wtbmF2IGJ1dHRvbi5vd2wtcHJldixcblx0Lm93bC1uYXYgYnV0dG9uLm93bC1uZXh0LFxuXHRidXR0b24ub3dsLWRvdCB7XG5cdFx0YmFja2dyb3VuZDogbm9uZTtcblx0XHRjb2xvcjogaW5oZXJpdDtcblx0XHRib3JkZXI6IG5vbmU7XG5cdFx0cGFkZGluZzowIWltcG9ydGFudDtcblx0XHRmb250OiBpbmhlcml0O1xuXHR9XG5cblx0Ji5vd2wtbG9hZGVkIHtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0fVxuXG5cdCYub3dsLWxvYWRpbmcge1xuXHRcdG9wYWNpdHk6IDA7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdH1cblxuXHQmLm93bC1oaWRkZW4ge1xuXHRcdG9wYWNpdHk6IDA7XG5cdH1cblxuXHQmLm93bC1yZWZyZXNoIC5vd2wtaXRlbSB7XG5cdFx0dmlzaWJpbGl0eTogaGlkZGVuO1xuXHR9XG5cblx0Ji5vd2wtZHJhZyAub3dsLWl0ZW0ge1xuXHRcdHRvdWNoLWFjdGlvbjogcGFuLXk7XG5cdFx0LXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcblx0XHQtbW96LXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1tcy11c2VyLXNlbGVjdDogbm9uZTtcblx0XHR1c2VyLXNlbGVjdDogbm9uZTtcblx0fVxuXG5cdCYub3dsLWdyYWIge1xuXHRcdGN1cnNvcjogbW92ZTtcblx0XHRjdXJzb3I6IGdyYWI7XG5cdH1cblxuXHQmLm93bC1ydGwge1xuXHRcdGRpcmVjdGlvbjogcnRsO1xuXHR9XG5cblx0Ji5vd2wtcnRsIC5vd2wtaXRlbSB7XG5cdFx0ZmxvYXQ6IHJpZ2h0O1xuXHR9XG59XG5cbi8qIE5vIEpzICovXG4ubm8tanMgLm93bC1jYXJvdXNlbCB7XG5cdGRpc3BsYXk6IGJsb2NrO1xufVxuIiwiLypcbiAqICBPd2wgQ2Fyb3VzZWwgLSBDb3JlXG4gKi9cblxuQGltcG9ydCB1cmwoXCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9QXNzaXN0YW50OjMwMCw0MDAsNzAwfEV4cGxldHVzK1NhbnM6NDAwLDcwMCZkaXNwbGF5PXN3YXBcIik7XG5cbi5vd2wtY2Fyb3VzZWwge1xuICBkaXNwbGF5OiBub25lO1xuICB3aWR0aDogMTAwJTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogcG9zaXRpb24gcmVsYXRpdmUgYW5kIHotaW5kZXggZml4IHdlYmtpdCByZW5kZXJpbmcgZm9udHMgaXNzdWUgKi9cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtc3RhZ2Uge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIC1tcy10b3VjaC1hY3Rpb246IHBhbi1ZO1xuICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbiAgLW1vei1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC8qIGZpeCBmaXJlZm94IGFuaW1hdGlvbiBnbGl0Y2ggKi9cbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXN0YWdlOmFmdGVyIHtcbiAgY29udGVudDogXCIuXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjbGVhcjogYm90aDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBsaW5lLWhlaWdodDogMDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtc3RhZ2Utb3V0ZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIC8qIGZpeCBmb3IgZmxhc2hpbmcgYmFja2dyb3VuZCAqL1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMHB4LCAwcHgsIDBweCk7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC13cmFwcGVyLFxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0ge1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW1vei1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC1tcy1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgZmxvYXQ6IGxlZnQ7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLW5hdi5kaXNhYmxlZCxcbi5vd2wtY2Fyb3VzZWwgLm93bC1kb3RzLmRpc2FibGVkIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLW5hdiAub3dsLXByZXYsXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2IC5vd2wtbmV4dCxcbi5vd2wtY2Fyb3VzZWwgLm93bC1kb3Qge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1uYXYgYnV0dG9uLm93bC1wcmV2LFxuLm93bC1jYXJvdXNlbCAub3dsLW5hdiBidXR0b24ub3dsLW5leHQsXG4ub3dsLWNhcm91c2VsIGJ1dHRvbi5vd2wtZG90IHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICBmb250OiBpbmhlcml0O1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1sb2FkZWQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtbG9hZGluZyB7XG4gIG9wYWNpdHk6IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1oaWRkZW4ge1xuICBvcGFjaXR5OiAwO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1yZWZyZXNoIC5vd2wtaXRlbSB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtZHJhZyAub3dsLWl0ZW0ge1xuICAtbXMtdG91Y2gtYWN0aW9uOiBwYW4teTtcbiAgICAgIHRvdWNoLWFjdGlvbjogcGFuLXk7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLWdyYWIge1xuICBjdXJzb3I6IG1vdmU7XG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiO1xuICBjdXJzb3I6IGdyYWI7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLXJ0bCB7XG4gIGRpcmVjdGlvbjogcnRsO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1ydGwgLm93bC1pdGVtIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4vKiBObyBKcyAqL1xuXG4ubm8tanMgLm93bC1jYXJvdXNlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogIE93bCBDYXJvdXNlbCAtIEFuaW1hdGUgUGx1Z2luXG4gKi9cblxuLm93bC1jYXJvdXNlbCAuYW5pbWF0ZWQge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMTAwMG1zO1xuICAgICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMTAwMG1zO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWFuaW1hdGVkLWluIHtcbiAgei1pbmRleDogMDtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWFuaW1hdGVkLW91dCB7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLmZhZGVPdXQge1xuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBmYWRlT3V0O1xuICAgICAgICAgIGFuaW1hdGlvbi1uYW1lOiBmYWRlT3V0O1xufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgZmFkZU91dCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGZhZGVPdXQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuLypcbiAqIFx0T3dsIENhcm91c2VsIC0gQXV0byBIZWlnaHQgUGx1Z2luXG4gKi9cblxuLm93bC1oZWlnaHQge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGhlaWdodCA1MDBtcyBlYXNlLWluLW91dDtcbiAgdHJhbnNpdGlvbjogaGVpZ2h0IDUwMG1zIGVhc2UtaW4tb3V0O1xufVxuXG4vKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBMYXp5IExvYWQgUGx1Z2luXG4gKi9cblxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0ge1xuICAvKipcblx0XHRcdFRoaXMgaXMgaW50cm9kdWNlZCBkdWUgdG8gYSBidWcgaW4gSUUxMSB3aGVyZSBsYXp5IGxvYWRpbmcgY29tYmluZWQgd2l0aCBhdXRvaGVpZ2h0IHBsdWdpbiBjYXVzZXMgYSB3cm9uZ1xuXHRcdFx0Y2FsY3VsYXRpb24gb2YgdGhlIGhlaWdodCBvZiB0aGUgb3dsLWl0ZW0gdGhhdCBicmVha3MgcGFnZSBsYXlvdXRzXG5cdFx0ICovXG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIC5vd2wtbGF6eSB7XG4gIG9wYWNpdHk6IDA7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDQwMG1zIGVhc2U7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIC5vd2wtbGF6eVtzcmNePVwiXCJdLFxuLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gLm93bC1sYXp5Om5vdChbc3JjXSkge1xuICBtYXgtaGVpZ2h0OiAwO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSBpbWcub3dsLWxhenkge1xuICAtd2Via2l0LXRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XG4gICAgICAgICAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbn1cblxuLypcbiAqIFx0T3dsIENhcm91c2VsIC0gVmlkZW8gUGx1Z2luXG4gKi9cblxuLm93bC1jYXJvdXNlbCAub3dsLXZpZGVvLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogIzAwMDtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXZpZGVvLXBsYXktaWNvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiA4MHB4O1xuICB3aWR0aDogODBweDtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgbWFyZ2luLWxlZnQ6IC00MHB4O1xuICBtYXJnaW4tdG9wOiAtNDBweDtcbiAgYmFja2dyb3VuZDogdXJsKFwib3dsLnZpZGVvLnBsYXkucG5nXCIpIG5vLXJlcGVhdDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB6LWluZGV4OiAxO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAxMDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAxMDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMTAwbXMgZWFzZTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDEwMG1zIGVhc2UsIC13ZWJraXQtdHJhbnNmb3JtIDEwMG1zIGVhc2U7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby1wbGF5LWljb246aG92ZXIge1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4zLCAxLjMpO1xuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4zLCAxLjMpO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tcGxheWluZyAub3dsLXZpZGVvLXRuLFxuLm93bC1jYXJvdXNlbCAub3dsLXZpZGVvLXBsYXlpbmcgLm93bC12aWRlby1wbGF5LWljb24ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tdG4ge1xuICBvcGFjaXR5OiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDQwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXZpZGVvLWZyYW1lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKlxuICogXHREZWZhdWx0IHRoZW1lIC0gT3dsIENhcm91c2VsIENTUyBGaWxlXG4gKi9cblxuLm93bC10aGVtZSAub3dsLW5hdiB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLm93bC10aGVtZSAub3dsLW5hdiBbY2xhc3MqPSdvd2wtJ10ge1xuICBjb2xvcjogI0ZGRjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW46IDVweDtcbiAgcGFkZGluZzogNHB4IDdweDtcbiAgYmFja2dyb3VuZDogI0Q2RDZENjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cblxuLm93bC10aGVtZSAub3dsLW5hdiBbY2xhc3MqPSdvd2wtJ106aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODY5NzkxO1xuICBjb2xvcjogI0ZGRjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IC5kaXNhYmxlZCB7XG4gIG9wYWNpdHk6IDAuNTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtbmF2LmRpc2FibGVkICsgLm93bC1kb3RzIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLm93bC10aGVtZSAub3dsLWRvdHMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1kb3RzIC5vd2wtZG90IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB6b29tOiAxO1xuICAqZGlzcGxheTogaW5saW5lO1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtZG90cyAub3dsLWRvdCBzcGFuIHtcbiAgd2lkdGg6IDEwcHg7XG4gIGhlaWdodDogMTBweDtcbiAgbWFyZ2luOiA1cHggN3B4O1xuICBiYWNrZ3JvdW5kOiAjRDZENkQ2O1xuICBkaXNwbGF5OiBibG9jaztcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMjAwbXMgZWFzZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAyMDBtcyBlYXNlO1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtZG90cyAub3dsLWRvdC5hY3RpdmUgc3Bhbixcbi5vd2wtdGhlbWUgLm93bC1kb3RzIC5vd2wtZG90OmhvdmVyIHNwYW4ge1xuICBiYWNrZ3JvdW5kOiAjODY5NzkxO1xufVxuXG4qIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG51bCxcbm9sIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYSB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xufVxuXG4uc3Itb25seSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xufVxuXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiQXNzaXN0YW50XCIsIHNhbnMtc2VyaWY7XG59XG5cbmJvZHkuZnJvbnQtcGFnZSA+IG1haW4sXG5ib2R5LnByb2plY3RzOm5vdCgucHJvamVjdC1hcmNoaXZlKSA+IG1haW4ge1xuICBtYXJnaW4tdG9wOiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDA7XG59XG5cbmJvZHkuZnJvbnQtcGFnZSAubWFpbi1oZWFkZXIsXG5ib2R5LnByb2plY3RzOm5vdCgucHJvamVjdC1hcmNoaXZlKSAubWFpbi1oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlciA+IGRpdixcbmJvZHkucHJvamVjdHM6bm90KC5wcm9qZWN0LWFyY2hpdmUpIC5tYWluLWhlYWRlciA+IGRpdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlcjpiZWZvcmUsXG5ib2R5LnByb2plY3RzOm5vdCgucHJvamVjdC1hcmNoaXZlKSAubWFpbi1oZWFkZXI6YmVmb3JlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTUxcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAwO1xuICBjb250ZW50OiBcIlwiO1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCBib3R0b20sIGxlZnQgdG9wLCBmcm9tKHJnYmEoMCwgMCwgMCwgMCkpLCB0byhyZ2JhKDAsIDAsIDAsIDAuMykpKTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDBkZWcsIHJnYmEoMCwgMCwgMCwgMCkgMCUsIHJnYmEoMCwgMCwgMCwgMC4zKSAxMDAlKTtcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlciBhLFxuYm9keS5wcm9qZWN0czpub3QoLnByb2plY3QtYXJjaGl2ZSkgLm1haW4taGVhZGVyIGEge1xuICBjb2xvcjogI0ZGRkZGRjtcbn1cblxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlciBhOmhvdmVyLFxuYm9keS5mcm9udC1wYWdlIC5tYWluLWhlYWRlciBhOmZvY3VzLFxuYm9keS5wcm9qZWN0czpub3QoLnByb2plY3QtYXJjaGl2ZSkgLm1haW4taGVhZGVyIGE6aG92ZXIsXG5ib2R5LnByb2plY3RzOm5vdCgucHJvamVjdC1hcmNoaXZlKSAubWFpbi1oZWFkZXIgYTpmb2N1cyB7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG59XG5cbmgxLFxuLmgxIHtcbiAgZm9udC1mYW1pbHk6IFwiQXNzaXN0YW50XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMjVweDtcbn1cblxuaDIsXG4uaDIge1xuICBmb250LWZhbWlseTogXCJFeHBsZXR1cyBTYW5zXCIsIGN1cnNpdmU7XG4gIGZvbnQtc2l6ZTogMzBweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGluZS1oZWlnaHQ6IDEuMzMzMzNlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuaDMsXG4uaDMge1xuICBmb250LWZhbWlseTogXCJFeHBsZXR1cyBTYW5zXCIsIGN1cnNpdmU7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGluZS1oZWlnaHQ6IDEuMzMzMzNlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuaDUsXG4uaDUge1xuICBmb250LWZhbWlseTogXCJFeHBsZXR1cyBTYW5zXCIsIGN1cnNpdmU7XG4gIGZvbnQtc2l6ZTogMThweDtcbn1cblxucCB7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbGluZS1oZWlnaHQ6IDEuMjg1NzFlbTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG4ubWFpbi1oZWFkZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA3MHB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogMTA7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45OSk7XG59XG5cbi5sb2dnZWRpbiAubWFpbi1oZWFkZXIge1xuICB0b3A6IDMycHg7XG59XG5cbi5tYWluLWhlYWRlciA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLm1haW4taGVhZGVyIGEge1xuICBjb2xvcjogIzFFMzE0MTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubWFpbi1oZWFkZXIgYTpob3Zlcixcbi5tYWluLWhlYWRlciBhOmZvY3VzIHtcbiAgY29sb3I6ICM3MDcwNzA7XG59XG5cbi5tYWluLWhlYWRlciBuYXYge1xuICBmb250LWZhbWlseTogXCJFeHBsZXR1cyBTYW5zXCIsIGN1cnNpdmU7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubWFpbi1oZWFkZXIgbmF2IGEge1xuICBjb2xvcjogIzFFMzE0MTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubWFpbi1oZWFkZXIgbmF2IGE6aG92ZXIsXG4ubWFpbi1oZWFkZXIgbmF2IGE6Zm9jdXMge1xuICBjb2xvcjogIzcwNzA3MDtcbn1cblxuLm1haW4taGVhZGVyIG5hdiB1bC5tZW51ID4gbGkgPiBhIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDEuMTNweDtcbn1cblxuLm1haW4taGVhZGVyIG5hdiB1bC5tZW51IGxpLmN1cnJlbnQtbWVudS1pdGVtID4gYSxcbi5tYWluLWhlYWRlciBuYXYgdWwubWVudSBsaS5jdXJyZW50LW1lbnUtYW5jZXN0b3IgPiBhIHtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbn1cblxuLm1haW4tZm9vdGVyIHtcbiAgcGFkZGluZzogMjBweCAwO1xufVxuXG4ubWFpbi1mb290ZXIgYSB7XG4gIGNvbG9yOiAjMUUzMTQxO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5tYWluLWZvb3RlciBhOmhvdmVyLFxuLm1haW4tZm9vdGVyIGE6Zm9jdXMge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLm1haW4tZm9vdGVyID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLm1haW4tZm9vdGVyIC5jb250YWN0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDEuNzNweDtcbiAgY29sb3I6ICMxRTMxNDE7XG59XG5cbi5tYWluLWZvb3RlciAuY29udGFjdCBwIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5tYWluLWZvb3RlciAuc29jaWFsIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ubWFpbi1mb290ZXIgLnNvY2lhbCBhIHtcbiAgd2lkdGg6IDI0cHg7XG4gIGhlaWdodDogMjRweDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG5cbi5tYWluLWZvb3RlciAuc29jaWFsIGEgc3ZnIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLm1haW4tZm9vdGVyIC5zb2NpYWwgYSBzcGFuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG59XG5cbi5mb290ZXItbG9nbyBzdmcge1xuICB3aWR0aDogODVweDtcbiAgaGVpZ2h0OiA5OXB4O1xuICBmaWxsOiAjMDcxNDRFO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYm9keS5wYWdlOm5vdCguZnJvbnQtcGFnZSkgPiBtYWluIHtcbiAgcGFkZGluZzogNzBweCAwO1xufVxuXG5ib2R5LnBhZ2U6bm90KC5mcm9udC1wYWdlKSA+IG1haW4gPiBzZWN0aW9uIHtcbiAgY29sb3I6ICMxRTMxNDE7XG59XG5cbmJvZHkucGFnZTpub3QoLmZyb250LXBhZ2UpID4gbWFpbiA+IHNlY3Rpb24gPiBkaXYge1xuICBtYXgtd2lkdGg6IDE2MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbmJvZHkucGFnZTpub3QoLmZyb250LXBhZ2UpID4gbWFpbiA+IHNlY3Rpb24uYmctcHJpbWFyeSB7XG4gIGJhY2tncm91bmQ6ICMxRTMxNDE7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBwYWRkaW5nOiA2MHB4IDA7XG59XG5cbi5zZWN0aW9uLWlubmVyIHtcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG4uaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLWl0ZW0gaW1nLFxuLmhwLW5hdmlnYXRpb24gYSBpbWcge1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBtaW4td2lkdGg6IDEwMCU7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuQHN1cHBvcnRzICgoLW8tb2JqZWN0LWZpdDogY292ZXIpIG9yIChvYmplY3QtZml0OiBjb3ZlcikpIHtcbiAgLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1pdGVtIGltZyxcbiAgLmhwLW5hdmlnYXRpb24gYSBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgfVxufVxuXG4uaHAtc2xpZGVzaG93IHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLWl0ZW0ge1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuXG4uaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLWl0ZW0gPiBkaXYge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1uYXYgYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IGNhbGMoNTAlIC0gNDdweCk7XG4gIHdpZHRoOiA0NnB4O1xuICBoZWlnaHQ6IDk1cHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9hcnJvdy5zdmdcIik7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbiBzcGFuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG59XG5cbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbjpmb2N1cyxcbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbjphY3RpdmUge1xuICBib3JkZXI6IDA7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbjpob3Zlcixcbi5ocC1zbGlkZXNob3cgLmpzLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbjpmb2N1cyB7XG4gIG9wYWNpdHk6IC41O1xufVxuXG4uaHAtc2xpZGVzaG93IC5qcy1jYXJvdXNlbCAub3dsLW5hdiAub3dsLXByZXYge1xuICBsZWZ0OiAyMHB4O1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbn1cblxuLmhwLXNsaWRlc2hvdyAuanMtY2Fyb3VzZWwgLm93bC1uYXYgLm93bC1uZXh0IHtcbiAgcmlnaHQ6IDIwcHg7XG59XG5cbi5ocC1zbGlkZXNob3cgLnNjcm9sbC1kb3duIHtcbiAgd2lkdGg6IDQ2cHg7XG4gIGhlaWdodDogOTVweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDIwcHg7XG4gIGxlZnQ6IGNhbGMoNTAlIC0gMThweCk7XG4gIHotaW5kZXg6IDEwO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvYXJyb3cuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtaW5kZW50OiAtOTk5OTk5cHg7XG59XG5cbi5ocC1zbGlkZXNob3cgLnNjcm9sbC1kb3duOmhvdmVyLFxuLmhwLXNsaWRlc2hvdyAuc2Nyb2xsLWRvd246Zm9jdXMge1xuICBvcGFjaXR5OiAuNTtcbn1cblxuLmhwLW5hdmlnYXRpb24gYSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZm9udC1zaXplOiA1MHB4O1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXNoYWRvdzogMHB4IDRweCA3cHggIzcwNzA3MDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBmb250LWZhbWlseTogXCJFeHBsZXR1cyBTYW5zXCIsIGN1cnNpdmU7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGJhY2tncm91bmQ6ICMxRTMxNDE7XG59XG5cbi5ocC1uYXZpZ2F0aW9uIGEgc3BhbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbn1cblxuLmhwLW5hdmlnYXRpb24gYSBpbWcge1xuICB6LWluZGV4OiAwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoMThweCk7XG4gICAgICAgICAgZmlsdGVyOiBibHVyKDE4cHgpO1xufVxuXG5Ac3VwcG9ydHMgKCgtby1vYmplY3QtZml0OiBjb3Zlcikgb3IgKG9iamVjdC1maXQ6IGNvdmVyKSkge1xuICAuaHAtbmF2aWdhdGlvbiBhIGltZyB7XG4gICAgd2lkdGg6IDEwMyU7XG4gICAgaGVpZ2h0OiAxMDMlO1xuICB9XG59XG5cbi5ocC1uYXZpZ2F0aW9uIGE6aG92ZXIgaW1nIHtcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoMCk7XG4gICAgICAgICAgZmlsdGVyOiBibHVyKDApO1xufVxuXG4uY29udGVudC1ncmlkIHtcbiAgbWFyZ2luOiAwIC02cHg7XG59XG5cbi5jb250ZW50LWdyaWQgW2NsYXNzXj1cImNvbFwiXSB7XG4gIHBhZGRpbmc6IDZweDtcbn1cblxuLmNvbnRlbnQtZ3JpZCBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLm1hcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWJvdHRvbTogNzIlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5tYXAgaWZyYW1lIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG59XG5cbi5wcm9qZWN0LWhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC1oZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xufVxuXG4ucHJvamVjdC1oZXJvIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvamVjdC1oZXJvIC5wcm9qZWN0LXRpdGxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgdGV4dC1zaGFkb3c6IDAgMCAycHggIzAwMDAwMDtcbiAgcGFkZGluZy1ib3R0b206IDQ1cHg7XG59XG5cbi5wcm9qZWN0LWhlcm8gLnByb2plY3QtdGl0bGUgc3Bhbixcbi5wcm9qZWN0LWhlcm8gLnByb2plY3QtdGl0bGUgc21hbGwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnByb2plY3QtaGVybyAucHJvamVjdC10aXRsZSBzbWFsbCB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLnByb2plY3QtaGVybyAucHJvamVjdC10aXRsZSA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLmdyaWQtdGl0bGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAgMjRweCAzOHB4IDI0cHg7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdGV4dC1zaGFkb3c6IDBweCAwcHggMnB4ICMwMDAwMDA7XG59XG5cbi5ncmlkLXRpdGxlIGg0IHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uZ3JpZC10aXRsZSBzbWFsbCB7XG4gIGZvbnQtZmFtaWx5OiBcIkV4cGxldHVzIFNhbnNcIiwgY3Vyc2l2ZTtcbiAgbGluZS1oZWlnaHQ6IDEuMzMzMzNlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG59XG5cbi5wcm9qZWN0LW1haW4gPiBkaXYge1xuICBtYXgtd2lkdGg6IDE2MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbi5wcm9qZWN0LXN0YXRzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIDFmcjtcbiAgZ3JpZC1nYXA6IDVweCAyMHB4O1xuICBtYXJnaW4tdG9wOiAzZW07XG59XG5cbi5wcm9qZWN0LXN0YXRzIGR0IHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLnJlbGF0ZWQtcHJvamVjdHMge1xuICBwYWRkaW5nOiA3MHB4IDA7XG59XG5cbi5wcm9qZWN0LWdyaWQgPiBkaXYge1xuICBtYXgtd2lkdGg6IDE2MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbi5wcm9qZWN0LWdyaWQgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm9qZWN0LWdyaWQgYXJ0aWNsZSB7XG4gIHBhZGRpbmc6IDZweDtcbn1cblxuLnByb2plY3QtZ3JpZCBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbi5wcm9qZWN0LWdyaWQgc21hbGwge1xuICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5wcm9qZWN0LWdyaWQgLmdyaWQtdGl0bGUge1xuICBwYWRkaW5nLWJvdHRvbTogNDhweDtcbn1cblxuLnByb2plY3QtZ3JpZC5hcmNoaXZlIHtcbiAgYmFja2dyb3VuZDogIzFFMzE0MTtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbi5wcm9qZWN0LWdyaWQtaW5uZXIge1xuICBwYWRkaW5nOiA2OHB4IDAgNzBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDAgLTZweDtcbn1cblxuLnByZXNzLWxpc3Rpbmcge1xuICBwYWRkaW5nOiA3MHB4IDA7XG59XG5cbi5wcmVzcy1saXN0aW5nID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMge1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbi5wcmVzcy1saXN0aW5nIC5hcnRpY2xlcyBhcnRpY2xlIHtcbiAgbWFyZ2luLWJvdHRvbTogMS40ZW07XG59XG5cbi5wcmVzcy1saXN0aW5nIC5hcnRpY2xlcyBhcnRpY2xlIHNwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnByZXNzLWxpc3RpbmcgLmFydGljbGVzIGEge1xuICBjb2xvcjogIzFFMzE0MTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMgYTpob3ZlciBzcGFuOmxhc3QtY2hpbGQsXG4ucHJlc3MtbGlzdGluZyAuYXJ0aWNsZXMgYTpmb2N1cyBzcGFuOmxhc3QtY2hpbGQge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLm91dGxldC1ncmlkIHVsIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW46IC0xMnB4O1xufVxuXG4ub3V0bGV0LWdyaWQgbGkge1xuICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgLW1zLWZsZXg6IDAgMCA1MCU7XG4gICAgICAgICAgZmxleDogMCAwIDUwJTtcbiAgd2lkdGg6IDUwJTtcbiAgcGFkZGluZzogMTJweDtcbn1cblxuLm91dGxldC1ncmlkIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ub3V0bGV0LWdyaWQgc3BhbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xufVxuXG4ub3V0bGV0LWdyaWQgYSB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm9yZGVyOiAxcHggc29saWQgI0RERERERDtcbn1cblxuLm91dGxldC1ncmlkIGE6aG92ZXIsXG4ub3V0bGV0LWdyaWQgYTpmb2N1cyB7XG4gIG9wYWNpdHk6IC4yNTtcbn1cblxuLm91dGxldC1ncmlkLnRheC1hcmNoaXZlIGEge1xuICBvcGFjaXR5OiAuMjU7XG59XG5cbi5vdXRsZXQtZ3JpZC50YXgtYXJjaGl2ZSBhOmhvdmVyLFxuLm91dGxldC1ncmlkLnRheC1hcmNoaXZlIGE6Zm9jdXMge1xuICBvcGFjaXR5OiAuNzU7XG59XG5cbi5vdXRsZXQtZ3JpZC50YXgtYXJjaGl2ZSBsaS5hY3RpdmUgYSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5zLW5ld3Mge1xuICBwYWRkaW5nOiA3NXB4IDA7XG59XG5cbi5uZXdzLWNhcm91c2VsIGFydGljbGUge1xuICBmb250LXNpemU6IDE4cHg7XG4gIHBhZGRpbmc6IDFweDtcbn1cblxuLm5ld3MtY2Fyb3VzZWwgYXJ0aWNsZSBhIHtcbiAgY29sb3I6ICMxRTMxNDE7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMxRTMxNDE7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLm5ld3MtY2Fyb3VzZWwgYXJ0aWNsZSBhOmhvdmVyLFxuLm5ld3MtY2Fyb3VzZWwgYXJ0aWNsZSBhOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogcmdiYSgzMCwgNDksIDY1LCAwLjIpO1xufVxuXG4ubmV3cy1jYXJvdXNlbCAub3dsLWl0ZW06bnRoLWNoaWxkKDJuKSBhcnRpY2xlIGEge1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgYmFja2dyb3VuZDogIzFFMzE0MTtcbn1cblxuLm5ld3MtY2Fyb3VzZWwgLm93bC1pdGVtOm50aC1jaGlsZCgybikgYXJ0aWNsZSBhOmhvdmVyLFxuLm5ld3MtY2Fyb3VzZWwgLm93bC1pdGVtOm50aC1jaGlsZCgybikgYXJ0aWNsZSBhOmZvY3VzIHtcbiAgY29sb3I6ICMxRTMxNDE7XG4gIGJhY2tncm91bmQ6IHJnYmEoMzAsIDQ5LCA2NSwgMC4yKTtcbn1cblxuLm5ld3MtY2Fyb3VzZWwgLm93bC1zdGFnZSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IHN0cmV0Y2g7XG4gICAgICAtbXMtZmxleC1hbGlnbjogc3RyZXRjaDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbn1cblxuLm5ld3MtY2Fyb3VzZWwgYXJ0aWNsZSxcbi5uZXdzLWNhcm91c2VsIGEge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5uZXdzLWNhcm91c2VsIC5kYXRlIHtcbiAgbWFyZ2luLWJvdHRvbTogLjVlbTtcbn1cblxuLnBlb3BsZSA+IG1haW4ge1xuICBwYWRkaW5nOiA3MHB4IDA7XG59XG5cbi5wZW9wbGUtZ3JpZCA+IGRpdiB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLnBlb3BsZS1ncmlkIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucGVvcGxlLWdyaWQgLmdyaWQtdGl0bGUge1xuICBvcGFjaXR5OiAwO1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogNnB4O1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZSBhOmhvdmVyIC5ncmlkLXRpdGxlLFxuLnBlb3BsZS1ncmlkIGFydGljbGUgYTpmb2N1cyAuZ3JpZC10aXRsZSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5wZW9wbGUtZ3JpZC1pbm5lciB7XG4gIHBhZGRpbmc6IDY4cHggMCA3MHB4O1xuICBtYXJnaW46IDAgLTZweDtcbn1cblxuLnBlb3BsZS1iaW8ge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAxMDAlO1xuICB0b3A6IDA7XG4gIHBhZGRpbmc6IDEycHg7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wZW9wbGUtYmlvIHAge1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgZm9udC1zaXplOiAyMXB4O1xuICBsaW5lLWhlaWdodDogMS4yODU3MWVtO1xufVxuXG4ucGVvcGxlLWJpbyA+IGRpdiB7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICMxRTMxNDE7XG4gIHBhZGRpbmc6IDE4cHg7XG59XG5cbi5wZW9wbGUtYmlvIGJ1dHRvbiB7XG4gIHdpZHRoOiAyNXB4O1xuICBoZWlnaHQ6IDI1cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAzN3B4O1xuICByaWdodDogMzdweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0ZGRkZGRjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xufVxuXG4ucGVvcGxlLWJpbyBidXR0b246YmVmb3JlLFxuLnBlb3BsZS1iaW8gYnV0dG9uOmFmdGVyIHtcbiAgd2lkdGg6IDE0MCU7XG4gIGhlaWdodDogMXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xufVxuXG4ucGVvcGxlLWJpbyBidXR0b246YmVmb3JlIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKDQ1ZGVnKTtcbn1cblxuLnBlb3BsZS1iaW8gYnV0dG9uOmFmdGVyIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKC00NWRlZyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHJvdGF0ZSgtNDVkZWcpO1xufVxuXG4ucGVvcGxlLWJpbyBidXR0b246aG92ZXIsXG4ucGVvcGxlLWJpbyBidXR0b246Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7XG4gIGJvcmRlci1jb2xvcjogIzFFMzE0MTtcbn1cblxuLnBlb3BsZS1iaW8gYnV0dG9uOmhvdmVyOmJlZm9yZSxcbi5wZW9wbGUtYmlvIGJ1dHRvbjpob3ZlcjphZnRlcixcbi5wZW9wbGUtYmlvIGJ1dHRvbjpmb2N1czpiZWZvcmUsXG4ucGVvcGxlLWJpbyBidXR0b246Zm9jdXM6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMUUzMTQxO1xufVxuXG4uYmlvLXRpdGxlIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDM1cHgpO1xufVxuXG4uYmlvLXRpdGxlIHA6Zmlyc3QtY2hpbGQge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW46IDA7XG59XG5cbi5wZW9wbGUtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbikgLnBlb3BsZS1iaW8sXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24rMSkgLnBlb3BsZS1iaW8ge1xuICB0b3A6IC03MHB4O1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24rMikgLnBlb3BsZS1iaW8ge1xuICB0b3A6IDcwcHg7XG59XG5cbi5wZW9wbGUtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbikgLnBlb3BsZS1iaW8ge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogMTAwJTtcbn1cblxuLnBlb3BsZS1ncmlkIGFydGljbGUub3BlbiB7XG4gIHotaW5kZXg6IDEwO1xufVxuXG4ucGVvcGxlLWdyaWQgYXJ0aWNsZS5vcGVuIC5wZW9wbGUtYmlvIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYldGcGJpNWpjM01pTENKemIzVnlZMlZ6SWpwYkltMWhhVzR1YzJOemN5SXNJaTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl2ZDJ3dVkyRnliM1Z6Wld3dmMzSmpMM05qYzNNdmIzZHNMbU5oY205MWMyVnNMbk5qYzNNaUxDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZiM2RzTG1OaGNtOTFjMlZzTDNOeVl5OXpZM056TDE5amIzSmxMbk5qYzNNaUxDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZiM2RzTG1OaGNtOTFjMlZzTDNOeVl5OXpZM056TDE5aGJtbHRZWFJsTG5OamMzTWlMQ0l1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12YjNkc0xtTmhjbTkxYzJWc0wzTnlZeTl6WTNOekwxOWhkWFJ2YUdWcFoyaDBMbk5qYzNNaUxDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZiM2RzTG1OaGNtOTFjMlZzTDNOeVl5OXpZM056TDE5c1lYcDViRzloWkM1elkzTnpJaXdpTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDI5M2JDNWpZWEp2ZFhObGJDOXpjbU12YzJOemN5OWZkbWxrWlc4dWMyTnpjeUlzSWk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5dmQyd3VZMkZ5YjNWelpXd3ZjM0pqTDNOamMzTXZiM2RzTG5Sb1pXMWxMbVJsWm1GMWJIUXVjMk56Y3lJc0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXZkMnd1WTJGeWIzVnpaV3d2YzNKakwzTmpjM012WDNSb1pXMWxMbVJsWm1GMWJIUXVjMk56Y3lJc0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXZkMnd1WTJGeWIzVnpaV3d2YzNKakwzTmpjM012WDNSb1pXMWxMbk5qYzNNaUxDSmlZWE5sTDE5MllYSnBZV0pzWlhNdWMyTnpjeUlzSW1KaGMyVXZYMjFwZUdsdWN5NXpZM056SWl3aVltRnpaUzlmY21WelpYUXVjMk56Y3lJc0ltSmhjMlV2WDJadmJuUnpMbk5qYzNNaUxDSnpkSEoxWTNSMWNtVXZYMkpoYzJVdWMyTnpjeUlzSW5OMGNuVmpkSFZ5WlM5amIzQjVMMTlpWVhObExuTmpjM01pTENKemRISjFZM1IxY21VdlkyOXdlUzlmYUdWaFpHbHVaM011YzJOemN5SXNJbk4wY25WamRIVnlaUzlvWldGa1pYSXZYMmhsWVdSbGNpNXpZM056SWl3aWMzUnlkV04wZFhKbEwyaGxZV1JsY2k5ZmJtRjJMbk5qYzNNaUxDSnpkSEoxWTNSMWNtVXZabTl2ZEdWeUwxOW1iMjkwWlhJdWMyTnpjeUlzSW5OMGNuVmpkSFZ5WlM5ZmNHRm5aUzV6WTNOeklpd2ljM1J5ZFdOMGRYSmxMMTltY205dWRDMXdZV2RsTG5OamMzTWlMQ0pqYjIxd2IyNWxiblJ6TDE5bmNtbGtMbk5qYzNNaUxDSmpiMjF3YjI1bGJuUnpMMTl0WVhBdWMyTnpjeUlzSW1abFpXUnpMM0J5YjJwbFkzUnpMMTlpWVhObExuTmpjM01pTENKbVpXVmtjeTl3Y21WemN5OWZZbUZ6WlM1elkzTnpJaXdpWm1WbFpITXZjR1Z2Y0d4bEwxOWlZWE5sTG5OamMzTWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTHk4Z1JWaFVSVkpPUVV3Z1UwRlRVMXh1UUdsdGNHOXlkQ0FuTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDI5M2JDNWpZWEp2ZFhObGJDOXpjbU12YzJOemN5OXZkMnd1WTJGeWIzVnpaV3d1YzJOemN5YzdYRzVBYVcxd2IzSjBJQ2N1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12YjNkc0xtTmhjbTkxYzJWc0wzTnlZeTl6WTNOekwyOTNiQzUwYUdWdFpTNWtaV1poZFd4MExuTmpjM01uTzF4dUx5OGdRa0ZUUlNCSlRWQlBVbFJUWEc1QWFXMXdiM0owSUNkaVlYTmxMMTkyWVhKcFlXSnNaWE1uTzF4dVFHbHRjRzl5ZENBblltRnpaUzlmYldsNGFXNXpKenRjYmtCcGJYQnZjblFnSjJKaGMyVXZYM0psYzJWMEp6dGNia0JwYlhCdmNuUWdKMkpoYzJVdlgyWnZiblJ6Snp0Y2JseHVMeThnVTFSU1ZVTlVWVkpGWEc1QWFXMXdiM0owSUNkemRISjFZM1IxY21VdlgySmhjMlVuTzF4dVhHNHZMeUJEVDAxUVQwNUZUbFJUWEc1QWFXMXdiM0owSUNkamIyMXdiMjVsYm5SekwxOW5jbWxrSnp0Y2JrQnBiWEJ2Y25RZ0oyTnZiWEJ2Ym1WdWRITXZYMjFoY0NjN1hHNWNiaTh2SUVaRlJVUlRYRzVBYVcxd2IzSjBJQ2RtWldWa2N5OXdjbTlxWldOMGN5OWZZbUZ6WlNjN1hHNUFhVzF3YjNKMElDZG1aV1ZrY3k5d2NtVnpjeTlmWW1GelpTYzdYRzVBYVcxd2IzSjBJQ2RtWldWa2N5OXdaVzl3YkdVdlgySmhjMlVuTzF4dUlpd2lRR2x0Y0c5eWRDQW5ZMjl5WlNjN1hHNUFhVzF3YjNKMElDZGhibWx0WVhSbEp6dGNia0JwYlhCdmNuUWdKMkYxZEc5b1pXbG5hSFFuTzF4dVFHbHRjRzl5ZENBbmJHRjZlV3h2WVdRbk8xeHVRR2x0Y0c5eWRDQW5kbWxrWlc4bk8xeHVJaXdpTHlwY2JpQXFJQ0JQZDJ3Z1EyRnliM1Z6Wld3Z0xTQkRiM0psWEc0Z0tpOWNiaTV2ZDJ3dFkyRnliM1Z6Wld3Z2UxeHVYSFJrYVhOd2JHRjVPaUJ1YjI1bE8xeHVYSFIzYVdSMGFEb2dNVEF3SlR0Y2JseDBMWGRsWW10cGRDMTBZWEF0YUdsbmFHeHBaMmgwTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JseDBMeW9nY0c5emFYUnBiMjRnY21Wc1lYUnBkbVVnWVc1a0lIb3RhVzVrWlhnZ1ptbDRJSGRsWW10cGRDQnlaVzVrWlhKcGJtY2dabTl1ZEhNZ2FYTnpkV1VnS2k5Y2JseDBjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEhSNkxXbHVaR1Y0T2lBeE8xeHVYRzVjZEM1dmQyd3RjM1JoWjJVZ2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JseDBYSFF0YlhNdGRHOTFZMmd0WVdOMGFXOXVPaUJ3WVc0dFdUdGNibHgwWEhSMGIzVmphQzFoWTNScGIyNDZJRzFoYm1sd2RXeGhkR2x2Ymp0Y2JseDBYSFF0Ylc5NkxXSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJqc2dMeW9nWm1sNElHWnBjbVZtYjNnZ1lXNXBiV0YwYVc5dUlHZHNhWFJqYUNBcUwxeHVYSFI5WEc1Y2JseDBMbTkzYkMxemRHRm5aVHBoWm5SbGNpQjdYRzVjZEZ4MFkyOXVkR1Z1ZERvZ1hDSXVYQ0k3WEc1Y2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNWNkRngwWTJ4bFlYSTZJR0p2ZEdnN1hHNWNkRngwZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dVhIUmNkR3hwYm1VdGFHVnBaMmgwT2lBd08xeHVYSFJjZEdobGFXZG9kRG9nTUR0Y2JseDBmVnh1WEc1Y2RDNXZkMnd0YzNSaFoyVXRiM1YwWlhJZ2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JseDBYSFJ2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1WEhSY2RDOHFJR1pwZUNCbWIzSWdabXhoYzJocGJtY2dZbUZqYTJkeWIzVnVaQ0FxTDF4dVhIUmNkQzEzWldKcmFYUXRkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1V6WkNnd2NIZ3NJREJ3ZUN3Z01IQjRLVHRjYmx4MGZWeHVYRzVjZEM1dmQyd3RkM0poY0hCbGNpeGNibHgwTG05M2JDMXBkR1Z0ZTF4dVhIUmNkQzEzWldKcmFYUXRZbUZqYTJaaFkyVXRkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1WEhSY2RDMXRiM290WW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dVhIUmNkQzF0Y3kxaVlXTnJabUZqWlMxMmFYTnBZbWxzYVhSNU9pQm9hV1JrWlc0N1hHNWNkRngwTFhkbFltdHBkQzEwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlROa0tEQXNNQ3d3S1R0Y2JseDBYSFF0Ylc5NkxYUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxNMlFvTUN3d0xEQXBPMXh1WEhSY2RDMXRjeTEwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlROa0tEQXNNQ3d3S1R0Y2JseDBmVnh1WEc1Y2RDNXZkMnd0YVhSbGJTQjdYRzVjZEZ4MGNHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVYSFJjZEcxcGJpMW9aV2xuYUhRNklERndlRHRjYmx4MFhIUm1iRzloZERvZ2JHVm1kRHRjYmx4MFhIUXRkMlZpYTJsMExXSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJqdGNibHgwWEhRdGQyVmlhMmwwTFhSaGNDMW9hV2RvYkdsbmFIUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1WEhSY2RDMTNaV0pyYVhRdGRHOTFZMmd0WTJGc2JHOTFkRG9nYm05dVpUdGNibHgwZlZ4dVhIUXViM2RzTFdsMFpXMGdhVzFuSUh0Y2JseDBYSFJrYVhOd2JHRjVPaUJpYkc5amF6dGNibHgwWEhSM2FXUjBhRG9nTVRBd0pUdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGJtRjJMbVJwYzJGaWJHVmtMRnh1WEhRdWIzZHNMV1J2ZEhNdVpHbHpZV0pzWldRZ2UxeHVYSFJjZEdScGMzQnNZWGs2SUc1dmJtVTdYRzVjZEgxY2JseHVYSFF1YjNkc0xXNWhkaUF1YjNkc0xYQnlaWFlzWEc1Y2RDNXZkMnd0Ym1GMklDNXZkMnd0Ym1WNGRDeGNibHgwTG05M2JDMWtiM1FnZTF4dVhIUmNkR04xY25OdmNqb2djRzlwYm5SbGNqdGNibHgwWEhRdGQyVmlhMmwwTFhWelpYSXRjMlZzWldOME9pQnViMjVsTzF4dVhIUmNkQzFyYUhSdGJDMTFjMlZ5TFhObGJHVmpkRG9nYm05dVpUdGNibHgwWEhRdGJXOTZMWFZ6WlhJdGMyVnNaV04wT2lCdWIyNWxPMXh1WEhSY2RDMXRjeTExYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MFhIUjFjMlZ5TFhObGJHVmpkRG9nYm05dVpUdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGJtRjJJR0oxZEhSdmJpNXZkMnd0Y0hKbGRpeGNibHgwTG05M2JDMXVZWFlnWW5WMGRHOXVMbTkzYkMxdVpYaDBMRnh1WEhSaWRYUjBiMjR1YjNkc0xXUnZkQ0I3WEc1Y2RGeDBZbUZqYTJkeWIzVnVaRG9nYm05dVpUdGNibHgwWEhSamIyeHZjam9nYVc1b1pYSnBkRHRjYmx4MFhIUmliM0prWlhJNklHNXZibVU3WEc1Y2RGeDBjR0ZrWkdsdVp6b3dJV2x0Y0c5eWRHRnVkRHRjYmx4MFhIUm1iMjUwT2lCcGJtaGxjbWwwTzF4dVhIUjlYRzVjYmx4MEppNXZkMnd0Ykc5aFpHVmtJSHRjYmx4MFhIUmthWE53YkdGNU9pQmliRzlqYXp0Y2JseDBmVnh1WEc1Y2RDWXViM2RzTFd4dllXUnBibWNnZTF4dVhIUmNkRzl3WVdOcGRIazZJREE3WEc1Y2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNWNkSDFjYmx4dVhIUW1MbTkzYkMxb2FXUmtaVzRnZTF4dVhIUmNkRzl3WVdOcGRIazZJREE3WEc1Y2RIMWNibHh1WEhRbUxtOTNiQzF5WldaeVpYTm9JQzV2ZDJ3dGFYUmxiU0I3WEc1Y2RGeDBkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1WEhSOVhHNWNibHgwSmk1dmQyd3RaSEpoWnlBdWIzZHNMV2wwWlcwZ2UxeHVYSFJjZEhSdmRXTm9MV0ZqZEdsdmJqb2djR0Z1TFhrN1hHNWNkRngwTFhkbFltdHBkQzExYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MFhIUXRiVzk2TFhWelpYSXRjMlZzWldOME9pQnViMjVsTzF4dVhIUmNkQzF0Y3kxMWMyVnlMWE5sYkdWamREb2dibTl1WlR0Y2JseDBYSFIxYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MGZWeHVYRzVjZENZdWIzZHNMV2R5WVdJZ2UxeHVYSFJjZEdOMWNuTnZjam9nYlc5MlpUdGNibHgwWEhSamRYSnpiM0k2SUdkeVlXSTdYRzVjZEgxY2JseHVYSFFtTG05M2JDMXlkR3dnZTF4dVhIUmNkR1JwY21WamRHbHZiam9nY25Sc08xeHVYSFI5WEc1Y2JseDBKaTV2ZDJ3dGNuUnNJQzV2ZDJ3dGFYUmxiU0I3WEc1Y2RGeDBabXh2WVhRNklISnBaMmgwTzF4dVhIUjlYRzU5WEc1Y2JpOHFJRTV2SUVweklDb3ZYRzR1Ym04dGFuTWdMbTkzYkMxallYSnZkWE5sYkNCN1hHNWNkR1JwYzNCc1lYazZJR0pzYjJOck8xeHVmVnh1SWl3aUx5cGNiaUFxSUNCUGQyd2dRMkZ5YjNWelpXd2dMU0JCYm1sdFlYUmxJRkJzZFdkcGJseHVJQ292WEc0dWIzZHNMV05oY205MWMyVnNlMXh1WEhRdVlXNXBiV0YwWldRZ2UxeHVYSFJjZEdGdWFXMWhkR2x2Ymkxa2RYSmhkR2x2YmpvZ01UQXdNRzF6TzF4dVhIUmNkR0Z1YVcxaGRHbHZiaTFtYVd4c0xXMXZaR1U2SUdKdmRHZzdYRzVjZEgxY2JseDBMbTkzYkMxaGJtbHRZWFJsWkMxcGJpQjdYRzVjZEZ4MGVpMXBibVJsZURvZ01EdGNibHgwZlZ4dVhIUXViM2RzTFdGdWFXMWhkR1ZrTFc5MWRDQjdYRzVjZEZ4MGVpMXBibVJsZURvZ01UdGNibHgwZlZ4dVhIUXVabUZrWlU5MWRDQjdYRzVjZEZ4MFlXNXBiV0YwYVc5dUxXNWhiV1U2SUdaaFpHVlBkWFE3WEc1Y2RIMWNibjFjYmx4dVFHdGxlV1p5WVcxbGN5Qm1ZV1JsVDNWMElIdGNibHgwTUNVZ2UxeHVYSFJjZEc5d1lXTnBkSGs2SURFN1hHNWNkSDFjYmx4dVhIUXhNREFsSUh0Y2JseDBYSFJ2Y0dGamFYUjVPaUF3TzF4dVhIUjlYRzU5WEc0aUxDSXZLbHh1SUNvZ1hIUlBkMndnUTJGeWIzVnpaV3dnTFNCQmRYUnZJRWhsYVdkb2RDQlFiSFZuYVc1Y2JpQXFMMXh1WEc0dWIzZHNMV2hsYVdkb2RDQjdYRzVjZEhSeVlXNXphWFJwYjI0NklHaGxhV2RvZENBMU1EQnRjeUJsWVhObExXbHVMVzkxZER0Y2JuMWNiaUlzSWk4cVhHNGdLaUJjZEU5M2JDQkRZWEp2ZFhObGJDQXRJRXhoZW5rZ1RHOWhaQ0JRYkhWbmFXNWNiaUFxTDF4dVhHNHViM2RzTFdOaGNtOTFjMlZzSUh0Y2JseDBMbTkzYkMxcGRHVnRJSHRjYmx4MFhIUXViM2RzTFd4aGVua2dlMXh1WEhSY2RGeDBYSFJ2Y0dGamFYUjVPaUF3TzF4dVhIUmNkRngwWEhSMGNtRnVjMmwwYVc5dU9pQnZjR0ZqYVhSNUlEUXdNRzF6SUdWaGMyVTdYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5b3FYRzVjZEZ4MFhIUlVhR2x6SUdseklHbHVkSEp2WkhWalpXUWdaSFZsSUhSdklHRWdZblZuSUdsdUlFbEZNVEVnZDJobGNtVWdiR0Y2ZVNCc2IyRmthVzVuSUdOdmJXSnBibVZrSUhkcGRHZ2dZWFYwYjJobGFXZG9kQ0J3YkhWbmFXNGdZMkYxYzJWeklHRWdkM0p2Ym1kY2JseDBYSFJjZEdOaGJHTjFiR0YwYVc5dUlHOW1JSFJvWlNCb1pXbG5hSFFnYjJZZ2RHaGxJRzkzYkMxcGRHVnRJSFJvWVhRZ1luSmxZV3R6SUhCaFoyVWdiR0Y1YjNWMGMxeHVYSFJjZENBcUwxeHVYSFJjZEM1dmQyd3RiR0Y2ZVZ0emNtTmVQVndpWENKZExDQXViM2RzTFd4aGVuazZibTkwS0Z0emNtTmRLU0I3WEc1Y2RGeDBYSFJ0WVhndGFHVnBaMmgwT2lBd08xeHVYSFJjZEgxY2JseHVYSFJjZEdsdFp5NXZkMnd0YkdGNmVTQjdYRzVjZEZ4MFhIUjBjbUZ1YzJadmNtMHRjM1I1YkdVNklIQnlaWE5sY25abExUTmtPMXh1WEhSY2RIMWNibHgwZlZ4dWZWeHVYRzRpTENJa2IzZHNMV2x0WVdkbExYQmhkR2c2SUZ3aVhDSWdJV1JsWm1GMWJIUTdYRzVjYmk4cVhHNGdLaUJjZEU5M2JDQkRZWEp2ZFhObGJDQXRJRlpwWkdWdklGQnNkV2RwYmx4dUlDb3ZYRzVjYmk1dmQyd3RZMkZ5YjNWelpXeDdYRzVjZEM1dmQyd3RkbWxrWlc4dGQzSmhjSEJsY2lCN1hHNWNkRngwY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dVhIUmNkR2hsYVdkb2REb2dNVEF3SlR0Y2JseDBYSFJpWVdOclozSnZkVzVrT2lBak1EQXdPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxd2JHRjVMV2xqYjI0Z2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JseDBYSFJvWldsbmFIUTZJRGd3Y0hnN1hHNWNkRngwZDJsa2RHZzZJRGd3Y0hnN1hHNWNkRngwYkdWbWREb2dOVEFsTzF4dVhIUmNkSFJ2Y0RvZ05UQWxPMXh1WEhSY2RHMWhjbWRwYmkxc1pXWjBPaUF0TkRCd2VEdGNibHgwWEhSdFlYSm5hVzR0ZEc5d09pQXROREJ3ZUR0Y2JseDBYSFJpWVdOclozSnZkVzVrT2lCMWNtd29YQ0lqZXlSdmQyd3RhVzFoWjJVdGNHRjBhSDF2ZDJ3dWRtbGtaVzh1Y0d4aGVTNXdibWRjSWlrZ2JtOHRjbVZ3WldGME8xeHVYSFJjZEdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmx4MFhIUjZMV2x1WkdWNE9pQXhPMXh1WEhSY2RDMTNaV0pyYVhRdFltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHVYSFJjZEhSeVlXNXphWFJwYjI0NklIUnlZVzV6Wm05eWJTQXhNREJ0Y3lCbFlYTmxPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxd2JHRjVMV2xqYjI0NmFHOTJaWElnZTF4dVhIUmNkSFJ5WVc1elptOXliVG9nYzJOaGJHVW9NUzR6TENBeExqTXBPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxd2JHRjVhVzVuSUM1dmQyd3RkbWxrWlc4dGRHNHNYRzVjZEM1dmQyd3RkbWxrWlc4dGNHeGhlV2x1WnlBdWIzZHNMWFpwWkdWdkxYQnNZWGt0YVdOdmJpQjdYRzVjZEZ4MFpHbHpjR3hoZVRvZ2JtOXVaVHRjYmx4MGZWeHVYRzVjZEM1dmQyd3RkbWxrWlc4dGRHNGdlMXh1WEhSY2RHOXdZV05wZEhrNklEQTdYRzVjZEZ4MGFHVnBaMmgwT2lBeE1EQWxPMXh1WEhSY2RHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNpQmpaVzUwWlhJN1hHNWNkRngwWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JseDBYSFJpWVdOclozSnZkVzVrTFhOcGVtVTZJR052Ym5SaGFXNDdYRzVjZEZ4MGRISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQTBNREJ0Y3lCbFlYTmxPMXh1WEhSOVhHNWNibHgwTG05M2JDMTJhV1JsYnkxbWNtRnRaU0I3WEc1Y2RGeDBjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEhSY2RIb3RhVzVrWlhnNklERTdYRzVjZEZ4MGFHVnBaMmgwT2lBeE1EQWxPMXh1WEhSY2RIZHBaSFJvT2lBeE1EQWxPMXh1WEhSOVhHNTlYRzRpTENKQWFXMXdiM0owSUZ3aWRHaGxiV1V1WkdWbVlYVnNkRndpT3lJc0lpOHFYRzRnS2lCY2RFUmxabUYxYkhRZ2RHaGxiV1VnTFNCUGQyd2dRMkZ5YjNWelpXd2dRMU5USUVacGJHVmNiaUFxTDF4dVhHNGtZMjlzYjNJdFltRnpaVHBjZEZ4MFhIUWpPRFk1TnpreElDRmtaV1poZFd4ME8xeHVKR052Ykc5eUxYZG9hWFJsT2x4MFhIUmNkQ05HUmtZZ0lXUmxabUYxYkhRN1hHNGtZMjlzYjNJdFozSmhlVHBjZEZ4MFhIUWpSRFpFTmtRMklDRmtaV1poZFd4ME8xeHVYRzR2TDI1aGRseHVYRzRrYm1GMkxXTnZiRzl5T2lCY2RGeDBYSFFrWTI5c2IzSXRkMmhwZEdVZ0lXUmxabUYxYkhRN1hHNGtibUYyTFdOdmJHOXlMV2h2ZG1WeU9seDBYSFFrWTI5c2IzSXRkMmhwZEdVZ0lXUmxabUYxYkhRN1hHNGtibUYyTFdadmJuUXRjMmw2WlRvZ1hIUmNkREUwY0hnZ0lXUmxabUYxYkhRN1hHNGtibUYyTFhKdmRXNWtaV1E2SUZ4MFhIUmNkRE53ZUNBaFpHVm1ZWFZzZER0Y2JpUnVZWFl0YldGeVoybHVPaUJjZEZ4MFhIUTFjSGdnSVdSbFptRjFiSFE3WEc0a2JtRjJMWEJoWkdScGJtYzZJRngwWEhSY2REUndlQ0EzY0hnZ0lXUmxabUYxYkhRN1hHNGtibUYyTFdKaFkydG5jbTkxYm1RNklGeDBYSFFrWTI5c2IzSXRaM0poZVNBaFpHVm1ZWFZzZER0Y2JpUnVZWFl0WW1GamEyZHliM1Z1WkMxb2IzWmxjanBjZENSamIyeHZjaTFpWVhObElDRmtaV1poZFd4ME8xeHVKRzVoZGkxa2FYTmhZbXhsWkMxdmNHRmphWFI1T2lCY2REQXVOU0FoWkdWbVlYVnNkRHRjYmx4dUx5OWtiM1J6WEc1Y2JpUmtiM1F0ZDJsa2RHZzZYSFJjZEZ4MFhIUXhNSEI0SUNGa1pXWmhkV3gwTzF4dUpHUnZkQzFvWldsbmFIUTZYSFJjZEZ4ME1UQndlQ0FoWkdWbVlYVnNkRHRjYmlSa2IzUXRjbTkxYm1SbFpEcGNkRngwWEhRek1IQjRJQ0ZrWldaaGRXeDBPMXh1SkdSdmRDMXRZWEpuYVc0NklGeDBYSFJjZERWd2VDQTNjSGdnSVdSbFptRjFiSFE3WEc0a1pHOTBMV0poWTJ0bmNtOTFibVE2WEhSY2RDUmpiMnh2Y2kxbmNtRjVJQ0ZrWldaaGRXeDBPMXh1SkdSdmRDMWlZV05yWjNKdmRXNWtMV0ZqZEdsMlpUcGNkQ1JqYjJ4dmNpMWlZWE5sSUNGa1pXWmhkV3gwTzF4dVhHNUFhVzF3YjNKMElDZDBhR1Z0WlNjN1hHNGlMQ0pjYmk1dmQyd3RkR2hsYldVZ2UxeHVYSFF2THlCVGRIbHNhVzVuSUU1bGVIUWdZVzVrSUZCeVpYWWdZblYwZEc5dWMxeHVYSFF1YjNkc0xXNWhkaUI3WEc1Y2RGeDBiV0Z5WjJsdUxYUnZjRG9nTVRCd2VEdGNibHgwWEhSMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNWNkRngwTFhkbFltdHBkQzEwWVhBdGFHbG5hR3hwWjJoMExXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNibHh1WEhSY2RGdGpiR0Z6Y3lvOUoyOTNiQzBuWFNCN1hHNWNkRngwWEhSamIyeHZjam9nSkc1aGRpMWpiMnh2Y2p0Y2JseDBYSFJjZEdadmJuUXRjMmw2WlRvZ0pHNWhkaTFtYjI1MExYTnBlbVU3WEc1Y2RGeDBYSFJ0WVhKbmFXNDZJQ1J1WVhZdGJXRnlaMmx1TzF4dVhIUmNkRngwY0dGa1pHbHVaem9nSkc1aGRpMXdZV1JrYVc1bk8xeHVYSFJjZEZ4MFltRmphMmR5YjNWdVpEb2dKRzVoZGkxaVlXTnJaM0p2ZFc1a08xeHVYSFJjZEZ4MFpHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1WEhSY2RGeDBZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVYSFJjZEZ4MFltOXlaR1Z5TFhKaFpHbDFjem9nTTNCNE8xeHVYRzVjZEZ4MFhIUW1PbWh2ZG1WeUlIdGNibHgwWEhSY2RGeDBZbUZqYTJkeWIzVnVaRG9nSkc1aGRpMWlZV05yWjNKdmRXNWtMV2h2ZG1WeU8xeHVYSFJjZEZ4MFhIUmpiMnh2Y2pva2JtRjJMV052Ykc5eUxXaHZkbVZ5TzF4dVhIUmNkRngwWEhSMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYSFJjZEM1a2FYTmhZbXhsWkNCN1hHNWNkRngwWEhSdmNHRmphWFI1T2lBa2JtRjJMV1JwYzJGaWJHVmtMVzl3WVdOcGRIazdYRzVjZEZ4MFhIUmpkWEp6YjNJNklHUmxabUYxYkhRN1hHNWNkRngwZlZ4dVhIUjlYRzVjYmx4MEx5OGdVM1I1YkdsdVp5QmtiM1J6WEc1Y2RDNXZkMnd0Ym1GMkxtUnBjMkZpYkdWa0lDc2dMbTkzYkMxa2IzUnpJSHRjYmx4MFhIUnRZWEpuYVc0dGRHOXdPaUF4TUhCNE8xeHVYSFI5WEc1Y2JseDBMbTkzYkMxa2IzUnpJSHRjYmx4MFhIUjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzVjZEZ4MExYZGxZbXRwZEMxMFlYQXRhR2xuYUd4cFoyaDBMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmx4dVhIUmNkQzV2ZDJ3dFpHOTBJSHRjYmx4MFhIUmNkR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JseDBYSFJjZEhwdmIyMDZJREU3WEc1Y2RGeDBYSFFxWkdsemNHeGhlVG9nYVc1c2FXNWxPMXh1WEc1Y2RGeDBYSFJ6Y0dGdUlIdGNibHgwWEhSY2RGeDBkMmxrZEdnNklDUmtiM1F0ZDJsa2RHZzdYRzVjZEZ4MFhIUmNkR2hsYVdkb2REb2dKR1J2ZEMxb1pXbG5hSFE3WEc1Y2RGeDBYSFJjZEcxaGNtZHBiam9nSkdSdmRDMXRZWEpuYVc0N1hHNWNkRngwWEhSY2RHSmhZMnRuY205MWJtUTZJQ1JrYjNRdFltRmphMmR5YjNWdVpEdGNibHgwWEhSY2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNWNkRngwWEhSY2RDMTNaV0pyYVhRdFltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dkbWx6YVdKc1pUdGNibHgwWEhSY2RGeDBkSEpoYm5OcGRHbHZiam9nYjNCaFkybDBlU0F5TURCdGN5QmxZWE5sTzF4dVhIUmNkRngwWEhSaWIzSmtaWEl0Y21Ga2FYVnpPaUFrWkc5MExYSnZkVzVrWldRN1hHNWNkRngwWEhSOVhHNWNibHgwWEhSY2RDWXVZV04wYVhabExGeHVYSFJjZEZ4MEpqcG9iM1psY2lCN1hHNWNkRngwWEhSY2RITndZVzRnZTF4dVhIUmNkRngwWEhSY2RHSmhZMnRuY205MWJtUTZJQ1JrYjNRdFltRmphMmR5YjNWdVpDMWhZM1JwZG1VN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNkSDFjYm4xY2JpSXNJaTh2SUZOUVFVTkpUa2RjYmlSdGVGYzZJREUyTURCd2VEdGNiaVJuZFhSMFpYSTZJREl3Y0hnN1hHNWNiaTh2SUVOUFRFOVNVMXh1SkdKc1lXTnJPaUFqTURBd01EQXdPMXh1Skhkb2FYUmxPaUFqUmtaR1JrWkdPMXh1WEc0a2NISnBiV0Z5ZVRvZ0l6RkZNekUwTVR0Y2JpUnpaV052Ym1SaGNuazZJQ00zTURjd056QTdYRzVjYmlSaFkyTmxiblF0TVRvZ0l6QTNNVFEwUlR0Y2JseHVMeThnUms5T1ZGTmNiaVJvWldGa2FXNW5Sa1k2SUNkRmVIQnNaWFIxY3lCVFlXNXpKeXdnWTNWeWMybDJaVHRjYmlSamIzQjVSa1k2SUNkQmMzTnBjM1JoYm5RbkxDQnpZVzV6TFhObGNtbG1PMXh1Skd4ME9pQXpNREE3WEc0a2NtVm5PaUEwTURBN1hHNGtZbTlzWkRvZ056QXdPMXh1WEc0dkx5QkNVa1ZCUzFCUFNVNVVVMXh1SkcxbFpHbGhXSE02SUZ3aWMyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUF6TnpWd2VDbGNJanRjYmlSdFpXUnBZVkJvYjI1bE9pQmNJbk5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ056WTNMamx3ZUNsY0lqdGNiaVJ0WldScFlWUmhZbXhsZERvZ1hDSnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLVndpTzF4dUpHMWxaR2xoVkdGaWJHVjBUMjVzZVRvZ1hDSnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLU0JoYm1RZ0tHMWhlQzEzYVdSMGFEb2dNVEF5TkM0NWNIZ3BYQ0k3WEc0a2JXVmthV0ZVYjJkbmJHVklaV0ZrWlhJNklGd2ljMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBeE1ESTBMamx3ZUNsY0lqdGNiaVJ0WldScFlVUmxjMnQwYjNBNklGd2ljMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBeE1ESTFjSGdwWENJN1hHNGtiV1ZrYVdGR2RXeHNPaUJjSW5OamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dJM3NrYlhoWGZTbGNJanRjYmx4dUx5OGdSRWxOUlU1VFNVOU9VMXh1SkdobFlXUmxja2hsYVdkb2REb2dOekJ3ZUR0Y2JpSXNJa0J0YVhocGJpQmpiMjUwWlc1MFYybGtkR2dnZTF4dUlDQnRZWGd0ZDJsa2RHZzZJQ1J0ZUZjN1hHNGdJRzFoY21kcGJqb2dZWFYwYnp0Y2JpQWdjR0ZrWkdsdVp6b2dNQ0FrWjNWMGRHVnlPMXh1ZlZ4dVhHNUFiV2w0YVc0Z2FHOTJaWElnZTF4dUlDQW1PbWh2ZG1WeUxGeHVJQ0FtT21adlkzVnpJSHRjYmlBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnZlZ4dWZWeHVYRzVBYldsNGFXNGdjM0pQYm14NUlIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQjNhV1IwYURvZ01YQjRPMXh1SUNCb1pXbG5hSFE2SURGd2VEdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdiV0Z5WjJsdU9pQXRNWEI0TzF4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0JqYkdsd09pQnlaV04wS0RBc01Dd3dMREFwTzF4dUlDQmliM0prWlhJNklEQTdYRzU5WEc1Y2JrQnRhWGhwYmlCcGJXZERiM1psY2lCN1hHNGdJRzFwYmkxb1pXbG5hSFE2SURFd01DVTdYRzRnSUcxcGJpMTNhV1IwYURvZ01UQXdKVHRjYmlBZ2QybGtkR2c2SUdGMWRHODdYRzRnSUdobGFXZG9kRG9nWVhWMGJ6dGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUcxaGNtZHBiam9nTUR0Y2JseHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lIUnZjRG9nTlRBbE8xeHVJQ0JzWldaME9pQTFNQ1U3WEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLQzAxTUNVc0xUVXdKU2s3WEc1Y2JpQWdRSE4xY0hCdmNuUnpJQ2h2WW1wbFkzUXRabWwwT2lCamIzWmxjaWtnZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdJQ0J2WW1wbFkzUXRabWwwT2lCamIzWmxjanRjYmlBZ2ZWeHVmVnh1SWl3aUtpQjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ1ltOXlaR1Z5T2lBd08xeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHVmVnh1WEc1MWJDeGNibTlzSUh0Y2JpQWdiR2x6ZEMxemRIbHNaVG9nYm05dVpUdGNibjFjYmx4dVlTQjdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TWpWek8xeHVJQ0F2THlCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzU5WEc1Y2JpNXpjaTF2Ym14NUlIdGNiaUFnUUdsdVkyeDFaR1VnYzNKUGJteDVPMXh1ZlZ4dVhHNXpkSEp2Ym1jZ2UxeHVJQ0JtYjI1MExYZGxhV2RvZERvZ0pHSnZiR1E3WEc1OVhHNWNibUp2WkhrZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0pHTnZjSGxHUmp0Y2JuMWNiaUlzSWtCcGJYQnZjblFnZFhKc0tDZG9kSFJ3Y3pvdkwyWnZiblJ6TG1kdmIyZHNaV0Z3YVhNdVkyOXRMMk56Y3o5bVlXMXBiSGs5UVhOemFYTjBZVzUwT2pNd01DdzBNREFzTnpBd2ZFVjRjR3hsZEhWeksxTmhibk02TkRBd0xEY3dNQ1prYVhOd2JHRjVQWE4zWVhBbktUdGNiaUlzSW1KdlpIa2dlMXh1SUNBbUxtWnliMjUwTFhCaFoyVXNYRzRnSUNZdWNISnZhbVZqZEhNNmJtOTBLQzV3Y205cVpXTjBMV0Z5WTJocGRtVXBJSHRjYmlBZ0lDQWdQaUJ0WVdsdUlIdGNiaUFnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF3TzF4dUlDQWdJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0FnSUNCNkxXbHVaR1Y0T2lBd08xeHVJQ0FnSUNCOVhHNWNiaUFnSUNBZ0xtMWhhVzR0YUdWaFpHVnlJSHRjYmlBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCMGNtRnVjM0JoY21WdWREdGNiaUFnSUNBZ0lDQStJR1JwZGlCN1hHNGdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQWdJQ0I2TFdsdVpHVjRPaUF4TzF4dUlDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBbU9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nTVRVeGNIZzdYRzRnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUNCMGIzQTZJREE3WEc0Z0lDQWdJQ0FnSUNCc1pXWjBPaUF3TzF4dUlDQWdJQ0FnSUNBZ2VpMXBibVJsZURvZ01EdGNiaUFnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUJzYVc1bFlYSXRaM0poWkdsbGJuUW9NR1JsWnl4eVoySmhLQ1JpYkdGamF5d3dLU0F3SlN3Z2NtZGlZU2drWW14aFkyc3NMak1wSURFd01DVXBPMXh1SUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0JoSUh0Y2JpQWdJQ0FnSUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1U3WEc1Y2JpQWdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHaHZkbVZ5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklISm5ZbUVvSkhkb2FYUmxMQzQwS1R0Y2JpQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQjlYRzRnSUNBZ0lIMWNiaUFnSUgxY2JuMWNibHh1UUdsdGNHOXlkQ0FuWTI5d2VTOWZZbUZ6WlNjN1hHNUFhVzF3YjNKMElDZG9aV0ZrWlhJdlgyaGxZV1JsY2ljN1hHNUFhVzF3YjNKMElDZG1iMjkwWlhJdlgyWnZiM1JsY2ljN1hHNUFhVzF3YjNKMElDZGZjR0ZuWlNjN1hHNUFhVzF3YjNKMElDZGZabkp2Ym5RdGNHRm5aU2M3WEc0aUxDSkFhVzF3YjNKMElDZG9aV0ZrYVc1bmN5YzdYRzVjYm5BZ2UxeHVJQ0F2TDJOdmJHOXlPaUFrY0hKcGJXRnllVHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhPSEI0TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nS0RJM0lDOGdNakVwSUNvZ01XVnRPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4WlcwN1hHNTlYRzRpTENKb01Td3VhREVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkdOdmNIbEdSanRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJQ1JzZER0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnWm05dWRDMXphWHBsT2lBeU5YQjRPMXh1ZlZ4dVhHNW9NaXd1YURJZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0pHaGxZV1JwYm1kR1JqdGNiaUFnWm05dWRDMXphWHBsT2lBek1IQjRPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nS0RRd0lDOGdNekFwSUNvZ01XVnRPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dKR0p2YkdRN1hHNTlYRzVvTXl3dWFETWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dKR2hsWVdScGJtZEdSanRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ0tEUXdJQzhnTXpBcElDb2dNV1Z0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nSkdKdmJHUTdYRzU5WEc1b05Td3VhRFVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkdobFlXUnBibWRHUmp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4T0hCNE8xeHVmVnh1SWl3aUxtMWhhVzR0YUdWaFpHVnlJSHRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUdobGFXZG9kRG9nSkdobFlXUmxja2hsYVdkb2REdGNiaUFnY0c5emFYUnBiMjQ2SUdacGVHVmtPMXh1SUNCMGIzQTZJREE3WEc0Z0lHeGxablE2SURBN1hHNGdJSG90YVc1a1pYZzZJREV3TzF4dUlDQmlZV05yWjNKdmRXNWtPaUJ5WjJKaEtDUjNhR2wwWlN3dU9Ua3BPMXh1WEc0Z0lDNXNiMmRuWldScGJpQW1JSHRjYmlBZ0lDQjBiM0E2SURNeWNIZzdYRzRnSUgxY2JseHVJQ0ErSUdScGRpQjdYRzRnSUNBZ1FHbHVZMngxWkdVZ1kyOXVkR1Z1ZEZkcFpIUm9PMXh1WEc0Z0lDQWdRRzFsWkdsaElDTjdKRzFsWkdsaFZHRmliR1YwZlNCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdac1pYZ3RaVzVrTzF4dUlDQWdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJ6Y0dGalpTMWlaWFIzWldWdU8xeHVJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREV3Y0hnN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUdKMWRIUnZiaUI3WEc0Z0lDQWdRRzFsWkdsaElDTjdKRzFsWkdsaFJHVnphM1J2Y0gwZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQjlYRzRnSUgxY2JpQWdhREVnZTF4dVhHNGdJSDFjYmx4dUlDQmhJSHRjYmlBZ0lDQmpiMnh2Y2pvZ0pIQnlhVzFoY25rN1hHNGdJQ0FnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bE8xeHVYRzRnSUNBZ1FHbHVZMngxWkdVZ2FHOTJaWElnZTF4dUlDQWdJQ0FnWTI5c2IzSTZJQ1J6WldOdmJtUmhjbms3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnUUdsdGNHOXlkQ0FuWDI1aGRpYzdYRzU5WEc0aUxDSnVZWFlnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkdobFlXUnBibWRHUmp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TlhCNE8xeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdZU0I3WEc0Z0lDQWdZMjlzYjNJNklDUndjbWx0WVhKNU8xeHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNibHh1SUNBZ0lFQnBibU5zZFdSbElHaHZkbVZ5SUh0Y2JpQWdJQ0FnSUdOdmJHOXlPaUFrYzJWamIyNWtZWEo1TzF4dUlDQWdJQ0FnTHk5MFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoUkdWemEzUnZjSDBnZTF4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTUNBeE1uQjRPMXh1SUNBZ0lIMWNiaUFnZlZ4dUlDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGRVpYTnJkRzl3ZlNCN1hHNGdJQ0FnYldGeVoybHVPaUF3SUMweE1uQjRPMXh1SUNCOVhHNWNiaUFnZFd3dWJXVnVkU0I3WEc0Z0lDQWdRRzFsWkdsaElDTjdKRzFsWkdsaFJHVnphM1J2Y0gwZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2dabXhsZUMxbGJtUTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1BpQnNhU0I3WEc0Z0lDQWdJQ0ErSUdFZ2UxeHVJQ0FnSUNBZ0lDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0FnSUNBZ0lDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ01TNHhNM0I0TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCQWJXVmthV0VnSTNza2JXVmthV0ZFWlhOcmRHOXdmU0I3WEc0Z0lDQWdJQ0FnSUNZNmFHOTJaWElzWEc0Z0lDQWdJQ0FnSUNZdVkzVnljbVZ1ZEMxdFpXNTFMV2wwWlcwc1hHNGdJQ0FnSUNBZ0lDWXVZM1Z5Y21WdWRDMXRaVzUxTFdGdVkyVnpkRzl5SUh0Y2JpQWdJQ0FnSUNBZ0lDQXVjM1ZpTFcxbGJuVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCc2FTQjdYRzRnSUNBZ0lDQW1MbU4xY25KbGJuUXRiV1Z1ZFMxcGRHVnRMRnh1SUNBZ0lDQWdKaTVqZFhKeVpXNTBMVzFsYm5VdFlXNWpaWE4wYjNJZ2UxeHVJQ0FnSUNBZ0lDQStJR0VnZTF4dUlDQWdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUE0TURBN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXVjM1ZpTFcxbGJuVWdlMXh1SUNBZ0lFQnRaV1JwWVNBamV5UnRaV1JwWVVSbGMydDBiM0I5SUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHWnNaWGd0Wlc1a08xeHVJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ2RHOXdPaUF4TURBbE8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURBN1hHNGdJQ0FnSUNCdGFXNHRkMmxrZEdnNklERXdNQ1U3WEc1Y2JpQWdJQ0FnSUdFZ2UxeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxYUnZjRG9nTVRCd2VEdGNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc0aUxDSXViV0ZwYmkxbWIyOTBaWElnZTF4dUlDQndZV1JrYVc1bk9pQWtaM1YwZEdWeUlEQTdYRzVjYmlBZ1lTQjdYRzRnSUNBZ1kyOXNiM0k2SUNSd2NtbHRZWEo1TzF4dUlDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JpQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYRzRnSUNBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklIVnVaR1Z5YkdsdVpUdGNiaUFnSUNCOVhHNGdJSDFjYmlBZ1BpQmthWFlnZTF4dUlDQWdJRUJwYm1Oc2RXUmxJR052Ym5SbGJuUlhhV1IwYUR0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nYzNCaFkyVXRZbVYwZDJWbGJqdGNiaUFnZlZ4dVhHNGdJQzVqYjI1MFlXTjBJSHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREUxY0hnN1hHNGdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjYmlBZ0lDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ01TNDNNM0I0TzF4dUlDQWdJR052Ykc5eU9pQWtjSEpwYldGeWVUdGNibHh1SUNBZ0lIQWdlMXh1SUNBZ0lDQWdiV0Z5WjJsdU9pQXdPMXh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TkhCNE8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lENGdaR2wySUh0Y2JseHVJQ0I5WEc1Y2JpQWdMbk52WTJsaGJDQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQmhJSHRjYmlBZ0lDQWdJSGRwWkhSb09pQXlOSEI0TzF4dUlDQWdJQ0FnYUdWcFoyaDBPaUF5TkhCNE8xeHVJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJREV3Y0hnN1hHNWNiaUFnSUNBZ0lITjJaeUI3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUhOd1lXNGdlMXh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J6Y2s5dWJIazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTVtYjI5MFpYSXRiRzluYnlCN1hHNGdJSE4yWnlCN1hHNGdJQ0FnZDJsa2RHZzZJRGcxY0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUE1T1hCNE8xeHVJQ0FnSUdacGJHdzZJQ1JoWTJObGJuUXRNVHRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdmVnh1ZlZ4dUlpd2lZbTlrZVM1d1lXZGxPbTV2ZENndVpuSnZiblF0Y0dGblpTa2dlMXh1SUNBK0lHMWhhVzRnZTF4dUlDQWdJSEJoWkdScGJtYzZJRGN3Y0hnZ01EdGNiaUFnSUNBK0lITmxZM1JwYjI0Z2UxeHVJQ0FnSUNBZ1BpQmthWFlnZTF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCamIyNTBaVzUwVjJsa2RHZzdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR052Ykc5eU9pQWtjSEpwYldGeWVUdGNibHh1SUNBZ0lDQWdKaTVpWnkxd2NtbHRZWEo1SUh0Y2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dKSEJ5YVcxaGNuazdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQWtkMmhwZEdVN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEWXdjSGdnTUR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUxuTmxZM1JwYjI0dGFXNXVaWElnZTF4dUlDQndZV1JrYVc1bk9pQXdJREl3Y0hnN1hHNTlYRzRpTENJbGFXMW5RMjkyWlhJZ2UxeHVJQ0JBYVc1amJIVmtaU0JwYldkRGIzWmxjanRjYm4xY2JpNW9jQzF6Ykdsa1pYTm9iM2NnZTF4dUlDQm9aV2xuYUhRNklERXdNSFpvTzF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzVjYmlBZ0xtcHpMV05oY205MWMyVnNJSHRjYmlBZ0lDQXViM2RzTFdsMFpXMGdlMXh1SUNBZ0lDQWdhR1ZwWjJoME9pQXhNREIyYUR0Y2JseHVJQ0FnSUNBZ1BpQmthWFlnZTF4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVcxbklIdGNiaUFnSUNBZ0lDQWdRR1Y0ZEdWdVpDQWxhVzFuUTI5MlpYSTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0xtOTNiQzF1WVhZZ2UxeHVJQ0FnSUNBZ1luVjBkRzl1SUh0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQjBiM0E2SUdOaGJHTW9OVEFsSUMwZ05EZHdlQ2s3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUEwTm5CNE8xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklEazFjSGc3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDZ25MaTR2YVcxaFoyVnpMMkZ5Y205M0xuTjJaeWNwTzF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SUdOdmJuUmhhVzQ3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhRN1hHNGdJQ0FnSUNBZ0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1qVnpPMXh1WEc0Z0lDQWdJQ0FnSUhOd1lXNGdlMXh1SUNBZ0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUhOeVQyNXNlVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDWTZabTlqZFhNc1hHNGdJQ0FnSUNBZ0lDWTZZV04wYVhabElIdGNiaUFnSUNBZ0lDQWdJQ0JpYjNKa1pYSTZJREE3WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBiR2x1WlRvZ2JtOXVaVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHaHZkbVZ5SUh0Y2JpQWdJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQXVOVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBdWIzZHNMWEJ5WlhZZ2UxeHVJQ0FnSUNBZ0lDQnNaV1owT2lBa1ozVjBkR1Z5TzF4dUlDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNneE9EQmtaV2NwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBdWIzZHNMVzVsZUhRZ2UxeHVJQ0FnSUNBZ0lDQnlhV2RvZERvZ0pHZDFkSFJsY2p0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdWMyTnliMnhzTFdSdmQyNGdlMXh1SUNBZ0lIZHBaSFJvT2lBME5uQjRPMXh1SUNBZ0lHaGxhV2RvZERvZ09UVndlRHRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ1ltOTBkRzl0T2lBa1ozVjBkR1Z5TzF4dUlDQWdJR3hsWm5RNklHTmhiR01vTlRBbElDMGdNVGh3ZUNrN1hHNGdJQ0FnZWkxcGJtUmxlRG9nTVRBN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDY3VMaTlwYldGblpYTXZZWEp5YjNjdWMzWm5KeWs3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQmpiMjUwWVdsdU8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhRN1hHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJQzR5TlhNN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvT1RCa1pXY3BPMXh1SUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJQ0FnZEdWNGRDMXBibVJsYm5RNklDMDVPVGs1T1Rsd2VEdGNibHh1SUNBZ0lFQnBibU5zZFdSbElHaHZkbVZ5SUh0Y2JpQWdJQ0FnSUc5d1lXTnBkSGs2SUM0MU8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNHVhSEF0Ym1GMmFXZGhkR2x2YmlCN1hHNGdJR0VnZTF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjYmlBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCb1pXbG5hSFE2SURFd01IWm9PMXh1SUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBMU1IQjRPMXh1SUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1U3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNBZ0lIUmxlSFF0YzJoaFpHOTNPaUF3Y0hnZ05IQjRJRGR3ZUNBa2MyVmpiMjVrWVhKNU8xeHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dKR2hsWVdScGJtZEdSanRjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDUndjbWx0WVhKNU8xeHVYRzRnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoVkdGaWJHVjBmU0I3WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURnd2NIZzdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoUkdWemEzUnZjSDBnZTF4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE5UVndlRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnpjR0Z1SUh0Y2JpQWdJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0FnSUhvdGFXNWtaWGc2SURFN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVcxbklIdGNiaUFnSUNBZ0lFQmxlSFJsYm1RZ0pXbHRaME52ZG1WeU8xeHVJQ0FnSUNBZ2VpMXBibVJsZURvZ01EdGNiaUFnSUNBZ0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1qVnpPMXh1SUNBZ0lDQWdabWxzZEdWeU9pQmliSFZ5S0RFNGNIZ3BPMXh1WEc0Z0lDQWdJQ0JBYzNWd2NHOXlkSE1nS0c5aWFtVmpkQzFtYVhRNklHTnZkbVZ5S1NCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1ETWxPMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREV3TXlVN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmpwb2IzWmxjaUI3WEc0Z0lDQWdJQ0JwYldjZ2UxeHVJQ0FnSUNBZ0lDQm1hV3gwWlhJNklHSnNkWElvTUNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc0aUxDSXVZMjl1ZEdWdWRDMW5jbWxrSUh0Y2JpQWdiV0Z5WjJsdU9pQXdJQzAyY0hnN1hHNWNiaUFnUUcxbFpHbGhJQ043SkcxbFpHbGhWR0ZpYkdWMGZTQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHWnNaWGd0YzNSaGNuUTdYRzRnSUNBZ1pteGxlQzEzY21Gd09pQjNjbUZ3TzF4dUlDQjlYRzVjYmlBZ1FHMWxaR2xoSUNON0pHMWxaR2xoUkdWemEzUnZjSDBnZTF4dUlDQWdJRzFoY21kcGJqb2dNQ0F0TVRKd2VEdGNiaUFnZlZ4dVhHNGdJRnRqYkdGemMxNDlYQ0pqYjJ4Y0lsMGdlMXh1SUNBZ0lIQmhaR1JwYm1jNklEWndlRHRjYmx4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklERXljSGc3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnYVcxbklIdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCb1pXbG5hSFE2SUdGMWRHODdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lIMWNibHh1SUNCQWJXVmthV0VnSTNza2JXVmthV0ZRYUc5dVpYMGdlMXh1SUNBZ0lDNWpiMnd0TVNCN1hHNGdJQ0FnSUNCcGJXY2dlMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dZWFYwYnp0Y2JpQWdJQ0FnSUNBZ2JXRjRMV2hsYVdkb2REb2dOVEl3Y0hnN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ1lYVjBienRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1UUcxbFpHbGhJQ043SkcxbFpHbGhWR0ZpYkdWMGZTQjdYRzRnSUM1amIyd3RNU0I3WEc0Z0lDQWdkMmxrZEdnNklETXpMak16SlR0Y2JpQWdJQ0JtYkdWNE9pQXdJREFnTXpNdU16TWxPMXh1SUNCOVhHNWNiaUFnTG1OdmJDMHlJSHRjYmlBZ0lDQjNhV1IwYURvZ05qWXVOamNsTzF4dUlDQWdJR1pzWlhnNklEQWdNQ0EyTmk0Mk55VTdYRzRnSUgxY2JseHVJQ0F1WTI5c0xUTWdlMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHWnNaWGc2SURBZ01DQXhNREFsTzF4dUlDQjlYRzU5WEc0aUxDSXZMeUF1YldGd0xYZHlZWEJ3WlhJZ2UxeHVMeThnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaTh2SUNBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SURjMUpUdGNiaTh2SUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVMeThnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBalFVRkJPMXh1THk5Y2JpOHZJQ0FnUGlCa2FYWWdlMXh1THk4Z0lDQWdJSGRwWkhSb09pQXhNREFsTzF4dUx5OGdJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNiaTh2SUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzR2THlBZ0lDQWdkRzl3T2lBd08xeHVMeThnSUNBZ0lHeGxablE2SURBN1hHNHZMeUFnSUgxY2JpOHZJSDFjYmx4dUxtMWhjQ0I3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTnpJbE8xeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdhV1p5WVcxbElIdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdkRzl3T2lBd08xeHVJQ0I5WEc1OVhHNGlMQ0l2THlCVFNVNUhURVVnVUZKUFNrVkRWRnh1TG5CeWIycGxZM1F0YUdWeWJ5QjdYRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdiV0Y0TFdobGFXZG9kRG9nTVRBd2RtZzdYRzRnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFeWNIZzdYRzVjYmlBZ2FXMW5JSHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQm9aV2xuYUhRNklHRjFkRzg3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJSDFjYmx4dUlDQXVjSEp2YW1WamRDMTBhWFJzWlNCN1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJR3hsWm5RNklEQTdYRzRnSUNBZ1ltOTBkRzl0T2lBd08xeHVJQ0FnSUdOdmJHOXlPaUFrZDJocGRHVTdYRzRnSUNBZ2RHVjRkQzF6YUdGa2IzYzZJREFnTUNBeWNIZ2dKR0pzWVdOck8xeHVJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUEwTlhCNE8xeHVYRzRnSUNBZ2MzQmhiaXhjYmlBZ0lDQnpiV0ZzYkNCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnpiV0ZzYkNCN1hHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERmxiVHRjYmlBZ0lDQWdJSFJsZUhRdGRISmhibk5tYjNKdE9pQnViMjVsTzF4dUlDQWdJSDFjYmx4dUlDQWdJRDRnWkdsMklIdGNiaUFnSUNBZ0lFQnBibU5zZFdSbElHTnZiblJsYm5SWGFXUjBhRHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG1keWFXUXRkR2wwYkdVZ2UxeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lHeGxablE2SURBN1hHNGdJR0p2ZEhSdmJUb2dNRHRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUhCaFpHUnBibWM2SURBZ01qUndlQ0F6T0hCNElESTBjSGc3WEc0Z0lHTnZiRzl5T2lBa2QyaHBkR1U3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1qVnpPMXh1SUNCMFpYaDBMWE5vWVdSdmR6b2dNSEI0SURCd2VDQXljSGdnSkdKc1lXTnJPMXh1WEc0Z0lHZzBJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREkwY0hnN1hHNGdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjYmx4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlVUmxjMnQwYjNCOUlIdGNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNekJ3ZUR0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCemJXRnNiQ0I3WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNSb1pXRmthVzVuUmtZN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklDZzBNQ0F2SURNd0tTQXFJREZsYlR0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ0pHSnZiR1E3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUFvTXpBZ0x5QXlOQ2tnS2lBeFpXMDdYRzRnSUgxY2JuMWNibHh1TG5CeWIycGxZM1F0YldGcGJpQjdYRzRnSUQ0Z1pHbDJJSHRjYmlBZ0lDQkFhVzVqYkhWa1pTQmpiMjUwWlc1MFYybGtkR2c3WEc0Z0lIMWNibjFjYmx4dUxuQnliMnBsWTNRdGMzUmhkSE1nZTF4dUlDQmthWE53YkdGNU9pQm5jbWxrTzF4dUlDQm5jbWxrTFhSbGJYQnNZWFJsTFdOdmJIVnRibk02SUdGMWRHOGdNV1p5TzF4dUlDQm5jbWxrTFdkaGNEb2dOWEI0SURJd2NIZzdYRzRnSUcxaGNtZHBiaTEwYjNBNklETmxiVHRjYmx4dUlDQmtkQ0I3WEc0Z0lDQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnZlZ4dWZWeHVYRzR2THlCUVVrOUtSVU5VSUVkU1NVUmNiaTV5Wld4aGRHVmtMWEJ5YjJwbFkzUnpJSHRjYmlBZ2NHRmtaR2x1WnpvZ056QndlQ0F3TzF4dWZWeHVYRzR1Y0hKdmFtVmpkQzFuY21sa0lIdGNiaUFnUGlCa2FYWWdlMXh1SUNBZ0lFQnBibU5zZFdSbElHTnZiblJsYm5SWGFXUjBhRHRjYmlBZ2ZWeHVYRzRnSUdsdFp5QjdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2FHVnBaMmgwT2lCaGRYUnZPMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQjlYRzVjYmlBZ1lYSjBhV05zWlNCN1hHNGdJQ0FnY0dGa1pHbHVaem9nTm5CNE8xeHVYRzRnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoVkdGaWJHVjBmU0I3WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNek11TXpNbE8xeHVJQ0FnSUNBZ1pteGxlRG9nTUNBd0lETXpMak16SlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JBYldWa2FXRWdJM3NrYldWa2FXRkVaWE5yZEc5d2ZTQjdYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQXhNbkI0TzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1k2Ym5Sb0xXTm9hV3hrS0ROdUlDc2dNaWtnZTF4dUlDQWdJQ0FnUUcxbFpHbGhJQ043SkcxbFpHbGhWR0ZpYkdWMGZTQjdYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV1NndE16VndlQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0JBYldWa2FXRWdJM3NrYldWa2FXRkVaWE5yZEc5d2ZTQjdYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV1NndE56QndlQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnWVNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUdOdmJHOXlPaUFrZDJocGRHVTdYRzRnSUgxY2JseHVJQ0J6YldGc2JDQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXlNWEI0TzF4dUlDQjlYRzVjYmlBZ0xtZHlhV1F0ZEdsMGJHVWdlMXh1SUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBME9IQjRPMXh1SUNCOVhHNWNiaUFnSmk1aGNtTm9hWFpsSUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBa2NISnBiV0Z5ZVR0Y2JpQWdJQ0JqYjJ4dmNqb2dKSGRvYVhSbE8xeHVJQ0I5WEc1OVhHNWNiaTV3Y205cVpXTjBMV2R5YVdRdGFXNXVaWElnZTF4dUlDQndZV1JrYVc1bk9pQTJPSEI0SURBZ056QndlRHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0J0WVhKbmFXNDZJREFnTFRad2VEdGNibHh1SUNCQWJXVmthV0VnSTNza2JXVmthV0ZVWVdKc1pYUjlJSHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR1pzWlhndGQzSmhjRG9nZDNKaGNEdGNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdac1pYZ3RjM1JoY25RN1hHNGdJSDFjYmx4dUlDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGRVpYTnJkRzl3ZlNCN1hHNGdJQ0FnYldGeVoybHVPaUF3SUMweE1uQjRPMXh1SUNCOVhHNTlYRzVjYmx4dUx5OGdRR3RsZVdaeVlXMWxjeUIzWldVZ2UxeHVMeThnSUNBd0pTQjdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLREJrWldjcE8zMWNiaTh2SUNBZ01UQXdKU0I3SUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RNMk1HUmxaeWs3ZlZ4dUx5OGdmVnh1THk5Y2JpOHZJR0p2WkhrZ2UxeHVMeThnSUNCaGJtbHRZWFJwYjI0NklIZGxaU0F4TUhNZ2FXNW1hVzVwZEdVZ2JHbHVaV0Z5TzF4dUx5OGdmVnh1SWl3aUxuQnlaWE56TFd4cGMzUnBibWNnZTF4dUlDQndZV1JrYVc1bk9pQTNNSEI0SURBN1hHNWNiaUFnUGlCa2FYWWdlMXh1SUNBZ0lFQnBibU5zZFdSbElHTnZiblJsYm5SWGFXUjBhRHRjYmlBZ0lDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGVVlXSnNaWFI5SUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITndZV05sTFdKbGRIZGxaVzQ3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnTG1GeWRHbGpiR1Z6SUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFNGNIZzdYRzRnSUNBZ1lYSjBhV05zWlNCN1hHNGdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TGpSbGJUdGNiaUFnSUNBZ0lITndZVzRnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQmhJSHRjYmlBZ0lDQWdJR052Ykc5eU9pQWtjSEpwYldGeWVUdGNiaUFnSUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYmx4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnYUc5MlpYSWdlMXh1SUNBZ0lDQWdJQ0J6Y0dGdU9teGhjM1F0WTJocGJHUWdlMXh1SUNBZ0lDQWdJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nZFc1a1pYSnNhVzVsTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpNXZkWFJzWlhRdFozSnBaQ0I3WEc0Z0lFQnRaV1JwWVNBamV5UnRaV1JwWVZSaFlteGxkSDBnZTF4dUlDQWdJSGRwWkhSb09pQTNOU1U3WEc1Y2JpQWdJQ0J1WVhZZ2UxeHVJQ0FnSUNBZ2NHOXphWFJwYjI0NklITjBhV05yZVR0Y2JpQWdJQ0FnSUhSdmNEb2dKR2hsWVdSbGNraGxhV2RvZER0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCMWJDQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQm1iR1Y0TFhkeVlYQTZJSGR5WVhBN1hHNGdJQ0FnYldGeVoybHVPaUF0TVRKd2VEdGNiaUFnZlZ4dVhHNGdJR3hwSUh0Y2JpQWdJQ0JtYkdWNE9pQXdJREFnTlRBbE8xeHVJQ0FnSUhkcFpIUm9PaUExTUNVN1hHNGdJQ0FnY0dGa1pHbHVaem9nTVRKd2VEdGNibHh1SUNBZ0lFQnRaV1JwWVNBamV5UnRaV1JwWVZSaFlteGxkSDBnZTF4dUlDQWdJQ0FnWm14bGVEb2dNQ0F3SURJMUpUdGNiaUFnSUNBZ0lIZHBaSFJvT2lBeU5TVTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdhVzFuSUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0JvWldsbmFIUTZJR0YxZEc4N1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUgxY2JseHVJQ0J6Y0dGdUlIdGNiaUFnSUNCQWFXNWpiSFZrWlNCemNrOXViSGs3WEc0Z0lIMWNibHh1SUNCaElIdGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTGpJMWN6dGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWpSRVJFUkVSRU8xeHVYRzRnSUNBZ1FHbHVZMngxWkdVZ2FHOTJaWElnZTF4dUlDQWdJQ0FnYjNCaFkybDBlVG9nTGpJMU8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lDWXVkR0Y0TFdGeVkyaHBkbVVnZTF4dUlDQWdJR0VnZTF4dUlDQWdJQ0FnYjNCaFkybDBlVG9nTGpJMU8xeHVYRzRnSUNBZ0lDQkFhVzVqYkhWa1pTQm9iM1psY2lCN1hHNGdJQ0FnSUNBZ0lHOXdZV05wZEhrNklDNDNOVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnNhUzVoWTNScGRtVWdZU0I3WEc0Z0lDQWdJQ0J2Y0dGamFYUjVPaUF4TzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1WEc0dVlYSjBhV05zWlhNZ2UxeHVJQ0JBYldWa2FXRWdJM3NrYldWa2FXRlVZV0pzWlhSOUlIdGNiaUFnSUNCbWJHVjRPaUF3SURBZ01qQWxPMXh1SUNBZ0lIZHBaSFJvT2lBeU1DVTdYRzRnSUgxY2JuMWNibHh1TG5NdGJtVjNjeUI3WEc0Z0lIQmhaR1JwYm1jNklEYzFjSGdnTUR0Y2JuMWNiaTV1WlhkekxXTmhjbTkxYzJWc0lIdGNiaUFnWVhKMGFXTnNaU0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4T0hCNE8xeHVJQ0FnSUhCaFpHUnBibWM2SURGd2VEdGNibHh1SUNBZ0lHRWdlMXh1SUNBZ0lDQWdZMjlzYjNJNklDUndjbWx0WVhKNU8xeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0JvWldsbmFIUTZJREV3TUNVN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBeU1IQjRPMXh1SUNBZ0lDQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdKSEJ5YVcxaGNuazdYRzRnSUNBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1Y2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUdodmRtVnlJSHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2NtZGlZU2drY0hKcGJXRnllU3d1TWlrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1dmQyd3RhWFJsYlNCN1hHNGdJQ0FnSmpwdWRHZ3RZMmhwYkdRb01tNHBJSHRjYmlBZ0lDQWdJR0Z5ZEdsamJHVWdlMXh1SUNBZ0lDQWdJQ0JoSUh0Y2JpQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsTzF4dUlDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJQ1J3Y21sdFlYSjVPMXh1WEc0Z0lDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2FHOTJaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklDUndjbWx0WVhKNU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2NtZGlZU2drY0hKcGJXRnllU3d1TWlrN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnTG05M2JDMXpkR0ZuWlNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNCaGJHbG5iaTFwZEdWdGN6b2djM1J5WlhSamFEdGNiaUFnZlZ4dVhHNGdJR0Z5ZEdsamJHVXNYRzRnSUdFZ2UxeHVJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnZlZ4dVhHNGdJQzVrWVhSbElIdGNiaUFnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF1TldWdE8xeHVJQ0I5WEc1OVhHNGlMQ0l1Y0dWdmNHeGxJRDRnYldGcGJpQjdYRzRnSUhCaFpHUnBibWM2SURjd2NIZ2dNRHRjYm4xY2JpNXdaVzl3YkdVdFozSnBaQ0I3WEc0Z0lENGdaR2wySUh0Y2JpQWdJQ0JBYVc1amJIVmtaU0JqYjI1MFpXNTBWMmxrZEdnN1hHNGdJSDFjYmx4dUlDQnBiV2NnZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dZWFYwYnp0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnZlZ4dVhHNGdJQzVuY21sa0xYUnBkR3hsSUh0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF3TzF4dUlDQjlYRzVjYmlBZ1lYSjBhV05zWlNCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJSEJoWkdScGJtYzZJRFp3ZUR0Y2JseHVJQ0FnSUdFZ2UxeHVJQ0FnSUNBZ1FHbHVZMngxWkdVZ2FHOTJaWElnZTF4dUlDQWdJQ0FnSUNBdVozSnBaQzEwYVhSc1pTQjdYRzRnSUNBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nTVR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVlJoWW14bGRIMGdlMXh1SUNBZ0lDQWdkMmxrZEdnNklETXpMak16SlR0Y2JpQWdJQ0FnSUdac1pYZzZJREFnTUNBek15NHpNeVU3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdRRzFsWkdsaElDTjdKRzFsWkdsaFJHVnphM1J2Y0gwZ2UxeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01USndlRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1PbTUwYUMxamFHbHNaQ2d6YmlBcklESXBJSHRjYmlBZ0lDQWdJRUJ0WldScFlTQWpleVJ0WldScFlWUmhZbXhsZEgwZ2UxeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTFRNMWNIZ3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdRRzFsWkdsaElDTjdKRzFsWkdsaFJHVnphM1J2Y0gwZ2UxeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTFRjd2NIZ3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVYRzR1Y0dWdmNHeGxMV2R5YVdRdGFXNXVaWElnZTF4dUlDQndZV1JrYVc1bk9pQTJPSEI0SURBZ056QndlRHRjYmlBZ2JXRnlaMmx1T2lBd0lDMDJjSGc3WEc1Y2JpQWdRRzFsWkdsaElDTjdKRzFsWkdsaFZHRmliR1YwZlNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNCbWJHVjRMWGR5WVhBNklIZHlZWEE3WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQm1iR1Y0TFhOMFlYSjBPMXh1SUNCOVhHNWNiaUFnUUcxbFpHbGhJQ043SkcxbFpHbGhSR1Z6YTNSdmNIMGdlMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQXRNVEp3ZUR0Y2JpQWdmVnh1ZlZ4dVhHNHVjR1Z2Y0d4bExXSnBieUI3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCdGFXNHRhR1ZwWjJoME9pQXhNREFsTzF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUd4bFpuUTZJREV3TUNVN1hHNGdJSFJ2Y0RvZ01EdGNiaUFnY0dGa1pHbHVaem9nTVRKd2VEdGNiaUFnWkdsemNHeGhlVG9nYm05dVpUdGNibHh1SUNCd0lIdGNiaUFnSUNCamIyeHZjam9nSkhkb2FYUmxPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNakZ3ZUR0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ0tESTNJQzhnTWpFcElDb2dNV1Z0TzF4dUlDQjlYRzVjYmlBZ1BpQmthWFlnZTF4dUlDQWdJRzFwYmkxb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dKSEJ5YVcxaGNuazdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01UaHdlRHRjYmlBZ2ZWeHVYRzRnSUdKMWRIUnZiaUI3WEc0Z0lDQWdkMmxrZEdnNklESTFjSGc3WEc0Z0lDQWdhR1ZwWjJoME9pQXlOWEI0TzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQjBiM0E2SURJMWNIZ2dLeUF4TWp0Y2JpQWdJQ0J5YVdkb2REb2dNalZ3ZUNBcklERXlPMXh1WEc0Z0lDQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdKSGRvYVhSbE8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0FnSUhSbGVIUXRhVzVrWlc1ME9pQXRPVGs1T1hCNE8xeHVJQ0FnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc0Z0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TWpWek8xeHVYRzRnSUNBZ0pqcGlaV1p2Y21Vc1hHNGdJQ0FnSmpwaFpuUmxjaUI3WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNVFF3SlR0Y2JpQWdJQ0FnSUdobGFXZG9kRG9nTVhCNE8xeHVJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ2RHOXdPaUExTUNVN1hHNGdJQ0FnSUNCc1pXWjBPaUExTUNVN1hHNGdJQ0FnSUNCamIyNTBaVzUwT2lCY0lsd2lPMXh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSkhkb2FYUmxPMXh1SUNBZ0lDQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lDNHlOWE03WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKanBpWldadmNtVWdlMXh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0MwMU1DVXBJSEp2ZEdGMFpTZzBOV1JsWnlrN1hHNGdJQ0FnZlZ4dUlDQWdJQ1k2WVdaMFpYSWdlMXh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0MwMU1DVXBJSEp2ZEdGMFpTZ3RORFZrWldjcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUVCcGJtTnNkV1JsSUdodmRtVnlJSHRjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUhKblltRW9KSGRvYVhSbExDNDVLVHRjYmlBZ0lDQWdJR0p2Y21SbGNpMWpiMnh2Y2pvZ0pIQnlhVzFoY25rN1hHNWNiaUFnSUNBZ0lDWTZZbVZtYjNKbExGeHVJQ0FnSUNBZ0pqcGhablJsY2lCN1hHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUndjbWx0WVhKNU8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNHVZbWx2TFhScGRHeGxJSHRjYmlBZ2QybGtkR2c2SUdOaGJHTW9NVEF3SlNBdElETTFjSGdwTzF4dUlDQndJSHRjYmlBZ0lDQW1PbVpwY25OMExXTm9hV3hrSUh0Y2JpQWdJQ0FnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc0Z0lDQWdJQ0J0WVhKbmFXNDZJREE3WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzVjYmk1d1pXOXdiR1V0WjNKcFpDQmhjblJwWTJ4bElIdGNiaUFnSmpwdWRHZ3RZMmhwYkdRb00yNHBMRnh1SUNBbU9tNTBhQzFqYUdsc1pDZ3piaXN4S1NCN1hHNGdJQ0FnTG5CbGIzQnNaUzFpYVc4Z2UxeHVJQ0FnSUNBZ2RHOXdPaUF0TnpCd2VEdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQW1PbTUwYUMxamFHbHNaQ2d6YmlzeUtTQjdYRzRnSUNBZ0xuQmxiM0JzWlMxaWFXOGdlMXh1SUNBZ0lDQWdkRzl3T2lBM01IQjRPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQ1k2Ym5Sb0xXTm9hV3hrS0ROdUtTQjdYRzRnSUNBZ0xuQmxiM0JzWlMxaWFXOGdlMXh1SUNBZ0lDQWdiR1ZtZERvZ1lYVjBienRjYmlBZ0lDQWdJSEpwWjJoME9pQXhNREFsTzF4dUlDQWdJSDFjYmlBZ2ZWeHVJQ0FtTG05d1pXNGdlMXh1SUNBZ0lIb3RhVzVrWlhnNklERXdPMXh1WEc0Z0lDQWdMbkJsYjNCc1pTMWlhVzhnZTF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JpSmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVVkJRVHM3UjBGRlJ6dEJWMFpJTEU5QlFVOHNRMEZCUXl4MVIwRkJTVHRCV0VkYUxFRkJRVUVzWVVGQllTeERRVUZETzBWQlEySXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTERKQ1FVRXlRaXhGUVVGRkxGZEJRVmM3UlVGRGVFTXNiMFZCUVc5Rk8wVkJRM0JGTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeERRVUZETzBOQkswZFdPenRCUVhKSVJDeEJRVkZETEdGQlVsa3NRMEZSV2l4VlFVRlZMRU5CUVVNN1JVRkRWaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4blFrRkJaMElzUlVGQlJTeExRVUZMTzBWQlEzWkNMRmxCUVZrc1JVRkJSU3haUVVGWk8wVkJRekZDTEhkQ1FVRjNRaXhGUVVGRkxFMUJRVTA3UlVGQlJTeHJRMEZCYTBNN1EwRkRjRVU3TzBGQllrWXNRVUZsUXl4aFFXWlpMRU5CWlZvc1ZVRkJWU3hCUVVGQkxFMUJRVTBzUTBGQlF6dEZRVU5vUWl4UFFVRlBMRVZCUVVVc1IwRkJSenRGUVVOYUxFOUJRVThzUlVGQlJTeExRVUZMTzBWQlEyUXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hWUVVGVkxFVkJRVVVzVFVGQlRUdEZRVU5zUWl4WFFVRlhMRVZCUVVVc1EwRkJRenRGUVVOa0xFMUJRVTBzUlVGQlJTeERRVUZETzBOQlExUTdPMEZCZEVKR0xFRkJkMEpETEdGQmVFSlpMRU5CZDBKYUxHZENRVUZuUWl4RFFVRkRPMFZCUTJoQ0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRkZCUVZFc1JVRkJSU3hOUVVGTk8wVkJRMmhDTEdsRFFVRnBRenRGUVVOcVF5eHBRa0ZCYVVJc1JVRkJSU3d3UWtGQk1FSTdRMEZETjBNN08wRkJOMEpHTEVGQkswSkRMR0ZCTDBKWkxFTkJLMEphTEZsQlFWazdRVUV2UW1Jc1lVRkJZU3hEUVdkRFdpeFRRVUZUTEVOQlFVRTdSVUZEVWl3eVFrRkJNa0lzUlVGQlJTeE5RVUZOTzBWQlEyNURMSGRDUVVGM1FpeEZRVUZGTEUxQlFVMDdSVUZEYUVNc2RVSkJRWFZDTEVWQlFVVXNUVUZCVFR0RlFVTXZRaXhwUWtGQmFVSXNSVUZCUlN4dlFrRkJhMEk3UlVGRGNrTXNZMEZCWXl4RlFVRkZMRzlDUVVGclFqdEZRVU5zUXl4aFFVRmhMRVZCUVVVc2IwSkJRV3RDTzBOQlEycERPenRCUVhaRFJpeEJRWGxEUXl4aFFYcERXU3hEUVhsRFdpeFRRVUZUTEVOQlFVTTdSVUZEVkN4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeFZRVUZWTEVWQlFVVXNSMEZCUnp0RlFVTm1MRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzTWtKQlFUSkNMRVZCUVVVc1RVRkJUVHRGUVVOdVF5d3lRa0ZCTWtJc1JVRkJSU3hYUVVGWE8wVkJRM2hETEhGQ1FVRnhRaXhGUVVGRkxFbEJRVWs3UTBGRE0wSTdPMEZCYUVSR0xFRkJhVVJETEdGQmFrUlpMRU5CYVVSYUxGTkJRVk1zUTBGQlF5eEhRVUZITEVOQlFVTTdSVUZEWWl4UFFVRlBMRVZCUVVVc1MwRkJTenRGUVVOa0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBOQlExZzdPMEZCY0VSR0xFRkJjMFJETEdGQmRFUlpMRU5CYzBSYUxGRkJRVkVzUVVGQlFTeFRRVUZUTzBGQmRFUnNRaXhoUVVGaExFTkJkVVJhTEZOQlFWTXNRVUZCUVN4VFFVRlRMRU5CUVVNN1JVRkRiRUlzVDBGQlR5eEZRVUZGTEVsQlFVazdRMEZEWWpzN1FVRjZSRVlzUVVFeVJFTXNZVUV6UkZrc1EwRXlSRm9zVVVGQlVTeERRVUZETEZOQlFWTTdRVUV6Ukc1Q0xHRkJRV0VzUTBFMFJGb3NVVUZCVVN4RFFVRkRMRk5CUVZNN1FVRTFSRzVDTEdGQlFXRXNRMEUyUkZvc1VVRkJVU3hEUVVGRE8wVkJRMUlzVFVGQlRTeEZRVUZGTEU5QlFVODdSVUZEWml4dFFrRkJiVUlzUlVGQlJTeEpRVUZKTzBWQlEzcENMR3RDUVVGclFpeEZRVUZGTEVsQlFVazdSVUZEZUVJc1owSkJRV2RDTEVWQlFVVXNTVUZCU1R0RlFVTjBRaXhsUVVGbExFVkJRVVVzU1VGQlNUdEZRVU55UWl4WFFVRlhMRVZCUVVVc1NVRkJTVHREUVVOcVFqczdRVUZ3UlVZc1FVRnpSVU1zWVVGMFJWa3NRMEZ6UlZvc1VVRkJVU3hEUVVGRExFMUJRVTBzUVVGQlFTeFRRVUZUTzBGQmRFVjZRaXhoUVVGaExFTkJkVVZhTEZGQlFWRXNRMEZCUXl4TlFVRk5MRUZCUVVFc1UwRkJVenRCUVhaRmVrSXNZVUZCWVN4RFFYZEZXaXhOUVVGTkxFRkJRVUVzVVVGQlVTeERRVUZETzBWQlEyUXNWVUZCVlN4RlFVRkZMRWxCUVVrN1JVRkRhRUlzUzBGQlN5eEZRVUZGTEU5QlFVODdSVUZEWkN4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlF5eERRVUZETEVOQlFVRXNWVUZCVlR0RlFVTnVRaXhKUVVGSkxFVkJRVVVzVDBGQlR6dERRVU5pT3p0QlFUbEZSaXhCUVdkR1F5eGhRV2hHV1N4QlFXZEdXQ3hYUVVGWExFTkJRVU03UlVGRFdpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RFFVTmtPenRCUVd4R1JpeEJRVzlHUXl4aFFYQkdXU3hCUVc5R1dDeFpRVUZaTEVOQlFVTTdSVUZEWWl4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xFOUJRVThzUlVGQlJTeExRVUZMTzBOQlEyUTdPMEZCZGtaR0xFRkJlVVpETEdGQmVrWlpMRUZCZVVaWUxGZEJRVmNzUTBGQlF6dEZRVU5hTEU5QlFVOHNSVUZCUlN4RFFVRkRPME5CUTFZN08wRkJNMFpHTEVGQk5rWkRMR0ZCTjBaWkxFRkJOa1pZTEZsQlFWa3NRMEZCUXl4VFFVRlRMRU5CUVVNN1JVRkRka0lzVlVGQlZTeEZRVUZGTEUxQlFVMDdRMEZEYkVJN08wRkJMMFpHTEVGQmFVZERMR0ZCYWtkWkxFRkJhVWRZTEZOQlFWTXNRMEZCUXl4VFFVRlRMRU5CUVVNN1JVRkRjRUlzV1VGQldTeEZRVUZGTEV0QlFVczdSVUZEYmtJc2JVSkJRVzFDTEVWQlFVVXNTVUZCU1R0RlFVTjZRaXhuUWtGQlowSXNSVUZCUlN4SlFVRkpPMFZCUTNSQ0xHVkJRV1VzUlVGQlJTeEpRVUZKTzBWQlEzSkNMRmRCUVZjc1JVRkJSU3hKUVVGSk8wTkJRMnBDT3p0QlFYWkhSaXhCUVhsSFF5eGhRWHBIV1N4QlFYbEhXQ3hUUVVGVExFTkJRVU03UlVGRFZpeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRTFCUVUwc1JVRkJSU3hKUVVGSk8wTkJRMW83TzBGQk5VZEdMRUZCT0VkRExHRkJPVWRaTEVGQk9FZFlMRkZCUVZFc1EwRkJRenRGUVVOVUxGTkJRVk1zUlVGQlJTeEhRVUZITzBOQlEyUTdPMEZCYUVoR0xFRkJhMGhETEdGQmJFaFpMRUZCYTBoWUxGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTTdSVUZEYmtJc1MwRkJTeXhGUVVGRkxFdEJRVXM3UTBGRFdqczdRVUZIUml4WFFVRlhPMEZCUTFnc1FVRkJRU3hOUVVGTkxFTkJRVU1zWVVGQllTeERRVUZETzBWQlEzQkNMRTlCUVU4c1JVRkJSU3hMUVVGTE8wTkJRMlE3TzBGRE4waEVPenRIUVVWSE8wRkJRMGdzUVVGRFF5eGhRVVJaTEVOQlExb3NVMEZCVXl4RFFVRkRPMFZCUTFRc2EwSkJRV3RDTEVWQlFVVXNUVUZCVFR0RlFVTXhRaXh0UWtGQmJVSXNSVUZCUlN4SlFVRkpPME5CUTNwQ096dEJRVXBHTEVGQlMwTXNZVUZNV1N4RFFVdGFMR2RDUVVGblFpeERRVUZETzBWQlEyaENMRTlCUVU4c1JVRkJSU3hEUVVGRE8wTkJRMVk3TzBGQlVFWXNRVUZSUXl4aFFWSlpMRU5CVVZvc2FVSkJRV2xDTEVOQlFVTTdSVUZEYWtJc1QwRkJUeXhGUVVGRkxFTkJRVU03UTBGRFZqczdRVUZXUml4QlFWZERMR0ZCV0Zrc1EwRlhXaXhSUVVGUkxFTkJRVU03UlVGRFVpeGpRVUZqTEVWQlFVVXNUMEZCVHp0RFFVTjJRanM3UVVGSFJpeFZRVUZWTEVOQlFWWXNUMEZCVlR0RlFVTlVMRVZCUVVVN1NVRkRSQ3hQUVVGUExFVkJRVVVzUTBGQlF6czdSVUZIV0N4SlFVRkpPMGxCUTBnc1QwRkJUeXhGUVVGRkxFTkJRVU03T3pzN1FVTjZRbG83TzBkQlJVYzdRVUZGU0N4QlFVRkJMRmRCUVZjc1EwRkJRenRGUVVOWUxGVkJRVlVzUlVGQlJTeDNRa0ZCZDBJN1EwRkRjRU03TzBGRFRrUTdPMGRCUlVjN1FVaERTQ3hCUVhsRFF5eGhRWHBEV1N4RFFYbERXaXhUUVVGVExFTkhka05ETzBWQlRWUTdPenRMUVVkSE8wTkJVVWc3TzBGQmJFSkdMRUZCUlVVc1lVRkdWeXhEUVVOYUxGTkJRVk1zUTBGRFVpeFRRVUZUTEVOQlFVTTdSVUZEVWl4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xGVkJRVlVzUlVGQlJTeHJRa0ZCYTBJN1EwRkRMMEk3TzBGQlRFZ3NRVUZYUlN4aFFWaFhMRU5CUTFvc1UwRkJVeXhEUVZWU0xGTkJRVk1zUTBGQlFTeEJRVUZCTEVkQlFVTXNSVUZCU3l4RlFVRkZMRUZCUVZBc1IwRllXaXhoUVVGaExFTkJRMW9zVTBGQlV5eERRVlZaTEZOQlFWTXNRVUZCUVN4SlFVRkxMRVZCUVVFc1FVRkJRU3hIUVVGRExFRkJRVUVzUjBGQlRUdEZRVU40UXl4VlFVRlZMRVZCUVVVc1EwRkJRenREUVVOaU96dEJRV0pJTEVGQlpVVXNZVUZtVnl4RFFVTmFMRk5CUVZNc1EwRmpVaXhIUVVGSExFRkJRVUVzVTBGQlV5eERRVUZETzBWQlExb3NaVUZCWlN4RlFVRkZMRmRCUVZjN1EwRkROVUk3TzBGRGJrSklPenRIUVVWSE8wRkJSVWdzUVVGRFF5eGhRVVJaTEVOQlExb3NhMEpCUVd0Q0xFTkJRVU03UlVGRGJFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4VlFVRlZMRVZCUVVVc1NVRkJTVHREUVVOb1FqczdRVUZNUml4QlFVOURMR0ZCVUZrc1EwRlBXaXh2UWtGQmIwSXNRMEZCUXp0RlFVTndRaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NTVUZCU1N4RlFVRkZMRWRCUVVjN1JVRkRWQ3hIUVVGSExFVkJRVVVzUjBGQlJ6dEZRVU5TTEZkQlFWY3NSVUZCUlN4TFFVRkxPMFZCUTJ4Q0xGVkJRVlVzUlVGQlJTeExRVUZMTzBWQlEycENMRlZCUVZVc1JVRkJSU3g1UWtGQk1rTXNRMEZCUXl4VFFVRlRPMFZCUTJwRkxFMUJRVTBzUlVGQlJTeFBRVUZQTzBWQlEyWXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXd5UWtGQk1rSXNSVUZCUlN4TlFVRk5PMFZCUTI1RExGVkJRVlVzUlVGQlJTeHZRa0ZCYjBJN1EwRkRhRU03TzBGQmNFSkdMRUZCYzBKRExHRkJkRUpaTEVOQmMwSmFMRzlDUVVGdlFpeEJRVUZCTEUxQlFVMHNRMEZCUXp0RlFVTXhRaXhUUVVGVExFVkJRVVVzWlVGQlpUdERRVU14UWpzN1FVRjRRa1lzUVVFd1FrTXNZVUV4UWxrc1EwRXdRbG9zYTBKQlFXdENMRU5CUVVNc1lVRkJZVHRCUVRGQ2FrTXNZVUZCWVN4RFFUSkNXaXhyUWtGQmEwSXNRMEZCUXl4dlFrRkJiMElzUTBGQlF6dEZRVU4yUXl4UFFVRlBMRVZCUVVVc1NVRkJTVHREUVVOaU96dEJRVGRDUml4QlFTdENReXhoUVM5Q1dTeERRU3RDV2l4aFFVRmhMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzUTBGQlF6dEZRVU5XTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc2JVSkJRVzFDTEVWQlFVVXNZVUZCWVR0RlFVTnNReXhwUWtGQmFVSXNSVUZCUlN4VFFVRlRPMFZCUXpWQ0xHVkJRV1VzUlVGQlJTeFBRVUZQTzBWQlEzaENMRlZCUVZVc1JVRkJSU3hyUWtGQmEwSTdRMEZET1VJN08wRkJkRU5HTEVGQmQwTkRMR0ZCZUVOWkxFTkJkME5hTEdkQ1FVRm5RaXhEUVVGRE8wVkJRMmhDTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhMUVVGTExFVkJRVVVzU1VGQlNUdERRVU5ZT3p0QlJXNUVSanM3UjBGRlJ6dEJRMFJJTEVGQlJVTXNWVUZHVXl4RFFVVlVMRkZCUVZFc1EwRkJRenRGUVVOU0xGVkJRVlVzUlVGQlJTeEpRVUZKTzBWQlEyaENMRlZCUVZVc1JVRkJSU3hOUVVGTk8wVkJRMnhDTERKQ1FVRXlRaXhGUVVGRkxGZEJRVmM3UTBGelFuaERPenRCUVROQ1JpeEJRVTlGTEZWQlVGRXNRMEZGVkN4UlFVRlJMRVZCUzFBc1FVRkJRU3hMUVVGRExFVkJRVThzVFVGQlRTeEJRVUZpTEVWQlFXVTdSVUZEWml4TFFVRkxMRVZFU2xFc1NVRkJTVHRGUTB0cVFpeFRRVUZUTEVWRVJVMHNTVUZCU1R0RlEwUnVRaXhOUVVGTkxFVkVSMDhzUjBGQlJ6dEZRMFpvUWl4UFFVRlBMRVZFUjA4c1IwRkJSeXhEUVVGRExFZEJRVWM3UlVOR2NrSXNWVUZCVlN4RlJGQkZMRTlCUVU4N1JVTlJia0lzVDBGQlR5eEZRVUZGTEZsQlFWazdSVUZEY2tJc1RVRkJUU3hGUVVGRkxFOUJRVTg3UlVGRFppeGhRVUZoTEVWQlFVVXNSMEZCUnp0RFFVOXNRanM3UVVGMFFrZ3NRVUZwUWtjc1ZVRnFRazhzUTBGRlZDeFJRVUZSTEVWQlMxQXNRVUZCUVN4TFFVRkRMRVZCUVU4c1RVRkJUU3hCUVVGaUxFTkJWVU1zVFVGQlRTeERRVUZETzBWQlExQXNWVUZCVlN4RlJHWkRMRTlCUVU4N1JVTm5RbXhDTEV0QlFVc3NSVVJtVHl4SlFVRkpPMFZEWjBKb1FpeGxRVUZsTEVWQlFVVXNTVUZCU1R0RFFVTnlRanM3UVVGeVFrb3NRVUYxUWtVc1ZVRjJRbEVzUTBGRlZDeFJRVUZSTEVOQmNVSlFMRk5CUVZNc1EwRkJRenRGUVVOVUxFOUJRVThzUlVSUVl5eEhRVUZITzBWRFVYaENMRTFCUVUwc1JVRkJSU3hQUVVGUE8wTkJRMlk3TzBGQk1VSklMRUZCT0VKRExGVkJPVUpUTEVOQk9FSlVMRkZCUVZFc1FVRkJRU3hUUVVGVExFZEJRVWNzVTBGQlV5eERRVUZETzBWQlF6ZENMRlZCUVZVc1JVRkJSU3hKUVVGSk8wTkJRMmhDT3p0QlFXaERSaXhCUVd0RFF5eFZRV3hEVXl4RFFXdERWQ3hUUVVGVExFTkJRVU03UlVGRFZDeFZRVUZWTEVWQlFVVXNUVUZCVFR0RlFVTnNRaXd5UWtGQk1rSXNSVUZCUlN4WFFVRlhPME5CZVVKNFF6czdRVUUzUkVZc1FVRnpRMFVzVlVGMFExRXNRMEZyUTFRc1UwRkJVeXhEUVVsU0xGRkJRVkVzUTBGQlF6dEZRVU5TTEU5QlFVOHNSVUZCUlN4WlFVRlpPMFZCUTNKQ0xFbEJRVWtzUlVGQlJTeERRVUZETzBWQlExQXNVVUZCVVN4RlFVRkZMRTFCUVUwN1EwRnRRbWhDT3p0QlFUVkVTQ3hCUVRKRFJ5eFZRVE5EVHl4RFFXdERWQ3hUUVVGVExFTkJTVklzVVVGQlVTeERRVXRRTEVsQlFVa3NRMEZCUXp0RlFVTktMRXRCUVVzc1JVUjJRazBzU1VGQlNUdEZRM2RDWml4TlFVRk5MRVZFZGtKTExFbEJRVWs3UlVOM1FtWXNUVUZCVFN4RlJIUkNUU3hIUVVGSExFTkJRVU1zUjBGQlJ6dEZRM1ZDYmtJc1ZVRkJWU3hGUkRGRFF5eFBRVUZQTzBWRE1rTnNRaXhQUVVGUExFVkJRVVVzUzBGQlN6dEZRVU5rTERKQ1FVRXlRaXhGUVVGRkxFOUJRVTg3UlVGRGNFTXNWVUZCVlN4RlFVRkZMR3RDUVVGclFqdEZRVU01UWl4aFFVRmhMRVZFTlVKRUxFbEJRVWs3UTBNMlFtaENPenRCUVhCRVNpeEJRWGRFU1N4VlFYaEVUU3hEUVd0RFZDeFRRVUZUTEVOQlNWSXNVVUZCVVN4QlFXZENUaXhQUVVGUExFTkJSVkFzU1VGQlNTeEZRWGhFVWl4VlFVRlZMRU5CYTBOVUxGTkJRVk1zUTBGSlVpeFJRVUZSTEVGQmFVSk9MRTFCUVUwc1EwRkRUaXhKUVVGSkxFTkJRVU03UlVGRFNpeFZRVUZWTEVWRWRFUkJMRTlCUVU4N1EwTjFSR3BDT3p0QlJ6TkVUQ3hCUVVGQkxFTkJRVU1zUTBGQlF6dEZRVU5CTEUxQlFVMHNSVUZCUlN4RFFVRkRPMFZCUTFRc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRlZCUVZVc1JVRkJSU3hWUVVGVk8wTkJRM1pDT3p0QlFVVkVMRUZCUVVFc1JVRkJSVHRCUVVOR0xFVkJRVVVzUTBGQlF6dEZRVU5FTEZWQlFWVXNSVUZCUlN4SlFVRkpPME5CUTJwQ096dEJRVVZFTEVGQlFVRXNRMEZCUXl4RFFVRkRPMFZCUTBFc1ZVRkJWU3hGUVVGRkxGRkJRVkU3UTBGRmNrSTdPMEZCUlVRc1FVRkJRU3hSUVVGUkxFTkJRVU03UlVSSVVDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhMUVVGTExFVkJRVVVzUjBGQlJ6dEZRVU5XTEUxQlFVMHNSVUZCUlN4SFFVRkhPMFZCUTFnc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRkZCUVZFc1JVRkJSU3hOUVVGTk8wVkJRMmhDTEVsQlFVa3NSVUZCUlN4blFrRkJZVHRGUVVOdVFpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RFEwWldPenRCUVVWRUxFRkJRVUVzVFVGQlRTeERRVUZETzBWQlEwd3NWMEZCVnl4RlJrcE9MRWRCUVVjN1EwVkxWRHM3UVVGRlJDeEJRVUZCTEVsQlFVa3NRMEZCUXp0RlFVTklMRmRCUVZjc1JVWllTaXhYUVVGWExFVkJRVVVzVlVGQlZUdERSVmt2UWpzN1FVVXpRa1FzUVVGSFN5eEpRVWhFTEVGQlEwUXNWMEZCVnl4SFFVVlFMRWxCUVVrc1JVRklXQ3hKUVVGSkxFRkJSVVFzVTBGQlV5eEJRVUZCTEVsQlFVc3NRMEZCUVN4blFrRkJaMElzU1VGRE1VSXNTVUZCU1N4RFFVRkRPMFZCUTB3c1ZVRkJWU3hGUVVGRkxFTkJRVU03UlVGRFlpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhQUVVGUExFVkJRVVVzUTBGQlF6dERRVU5ZT3p0QlFWQk9MRUZCVTBzc1NVRlVSQ3hCUVVORUxGZEJRVmNzUTBGUlZDeFpRVUZaTEVWQlZHcENMRWxCUVVrc1FVRkZSQ3hUUVVGVExFRkJRVUVzU1VGQlN5eERRVUZCTEdkQ1FVRm5RaXhGUVU4MVFpeFpRVUZaTEVOQlFVTTdSVUZEV0N4VlFVRlZMRVZCUVVVc1YwRkJWenREUVhOQ2VFSTdPMEZCYUVOT0xFRkJWMDhzU1VGWVNDeEJRVU5FTEZkQlFWY3NRMEZSVkN4WlFVRlpMRWRCUlZJc1IwRkJSeXhGUVZoYUxFbEJRVWtzUVVGRlJDeFRRVUZUTEVGQlFVRXNTVUZCU3l4RFFVRkJMR2RDUVVGblFpeEZRVTgxUWl4WlFVRlpMRWRCUlZJc1IwRkJSeXhEUVVGRE8wVkJRMG9zVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFTkJRVU03UTBGRFdEczdRVUZrVWl4QlFXVlBMRWxCWmtnc1FVRkRSQ3hYUVVGWExFTkJVVlFzV1VGQldTeEJRVTFVTEU5QlFVOHNSVUZtWml4SlFVRkpMRUZCUlVRc1UwRkJVeXhCUVVGQkxFbEJRVXNzUTBGQlFTeG5Ra0ZCWjBJc1JVRlBOVUlzV1VGQldTeEJRVTFVTEU5QlFVOHNRMEZCUXp0RlFVTlFMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVFVGQlRTeEZRVUZGTEV0QlFVczdSVUZEWWl4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeEhRVUZITEVWQlFVVXNRMEZCUXp0RlFVTk9MRWxCUVVrc1JVRkJSU3hEUVVGRE8wVkJRMUFzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZEVml4UFFVRlBMRVZCUVVVc1JVRkJSVHRGUVVOWUxGVkJRVlVzUlVGQlJTeHRSVUZCTmtRN1EwRkRNVVU3TzBGQmVFSlNMRUZCZVVKUExFbEJla0pJTEVGQlEwUXNWMEZCVnl4RFFWRlVMRmxCUVZrc1EwRm5RbFlzUTBGQlF5eEZRWHBDVWl4SlFVRkpMRUZCUlVRc1UwRkJVeXhCUVVGQkxFbEJRVXNzUTBGQlFTeG5Ra0ZCWjBJc1JVRlBOVUlzV1VGQldTeERRV2RDVml4RFFVRkRMRU5CUVVNN1JVRkRRU3hMUVVGTExFVktjRUpPTEU5QlFVODdRMGw1UWxBN08wRkJMMEpTTEVGSVQwVXNTVWRRUlN4QlFVTkVMRmRCUVZjc1EwRlJWQ3haUVVGWkxFTkJaMEpXTEVOQlFVTXNRVWhzUWt3c1RVRkJUU3hGUjFCVUxFbEJRVWtzUVVGRFJDeFhRVUZYTEVOQlVWUXNXVUZCV1N4RFFXZENWaXhEUVVGRExFRklha0pNTEUxQlFVMHNSVWRTVkN4SlFVRkpMRUZCUlVRc1UwRkJVeXhCUVVGQkxFbEJRVXNzUTBGQlFTeG5Ra0ZCWjBJc1JVRlBOVUlzV1VGQldTeERRV2RDVml4RFFVRkRMRUZJYkVKTUxFMUJRVTBzUlVkUVZDeEpRVUZKTEVGQlJVUXNVMEZCVXl4QlFVRkJMRWxCUVVzc1EwRkJRU3huUWtGQlowSXNSVUZQTlVJc1dVRkJXU3hEUVdkQ1ZpeERRVUZETEVGSWFrSk1MRTFCUVUwc1EwRkJRenRGUjNGQ1F5eExRVUZMTEVWS2RrSlNMSGRDUVVGUE8wTkRTVm83TzBGTFZrZ3NRVUZCUVN4RlFVRkZMRVZCUVVNc1IwRkJSeXhEUVVGRE8wVkJRMHdzVjBGQlZ5eEZUbU5LTEZkQlFWY3NSVUZCUlN4VlFVRlZPMFZOWWpsQ0xGZEJRVmNzUlU1alVpeEhRVUZITzBWTllrNHNZMEZCWXl4RlFVRkZMRk5CUVZNN1JVRkRla0lzVTBGQlV5eEZRVUZGTEVsQlFVazdRMEZEYUVJN08wRkJSVVFzUVVGQlFTeEZRVUZGTEVWQlFVTXNSMEZCUnl4RFFVRkRPMFZCUTB3c1YwRkJWeXhGVGsxRUxHVkJRV1VzUlVGQlJTeFBRVUZQTzBWTlRHeERMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzWTBGQll5eEZRVUZGTEZOQlFWTTdSVUZEZWtJc1YwRkJWeXhGUVVGRkxGTkJRV1U3UlVGRE5VSXNWMEZCVnl4RlRrMU9MRWRCUVVjN1EwMU1WRHM3UVVGRFJDeEJRVUZCTEVWQlFVVXNSVUZCUXl4SFFVRkhMRU5CUVVNN1JVRkRUQ3hYUVVGWExFVk9SRVFzWlVGQlpTeEZRVUZGTEU5QlFVODdSVTFGYkVNc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeGpRVUZqTEVWQlFVVXNVMEZCVXp0RlFVTjZRaXhYUVVGWExFVkJRVVVzVTBGQlpUdEZRVU0xUWl4WFFVRlhMRVZPUkU0c1IwRkJSenREVFVWVU96dEJRVU5FTEVGQlFVRXNSVUZCUlN4RlFVRkRMRWRCUVVjc1EwRkJRenRGUVVOTUxGZEJRVmNzUlU1U1JDeGxRVUZsTEVWQlFVVXNUMEZCVHp0RlRWTnNReXhUUVVGVExFVkJRVVVzU1VGQlNUdERRVU5vUWpzN1FVUjBRa1FzUVVGQlFTeERRVUZETEVOQlFVTTdSVUZGUVN4VFFVRlRMRVZCUVVVc1NVRkJTVHRGUVVObUxGZEJRVmNzUlVGQlJTeFRRVUZsTzBWQlF6VkNMR0ZCUVdFc1JVRkJSU3hIUVVGSE8wTkJRMjVDT3p0QlJWQkVMRUZCUVVFc1dVRkJXU3hEUVVGRE8wVkJRMWdzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZRTkVKUExFbEJRVWs3UlU4elFtcENMRkZCUVZFc1JVRkJSU3hMUVVGTE8wVkJRMllzUjBGQlJ5eEZRVUZGTEVOQlFVTTdSVUZEVGl4SlFVRkpMRVZCUVVVc1EwRkJRenRGUVVOUUxFOUJRVThzUlVGQlJTeEZRVUZGTzBWQlExZ3NWVUZCVlN4RlVFUktMSGxDUVVGUE8wTlBiME5rT3p0QlFXcERReXhCUVVGQkxGTkJRVk1zUTBGVVdDeFpRVUZaTEVOQlUwVTdSVUZEVml4SFFVRkhMRVZCUVVVc1NVRkJTVHREUVVOV096dEJRVmhJTEVGQllVVXNXVUZpVlN4SFFXRlNMRWRCUVVjc1EwRkJRenRGVGxwT0xGTkJRVk1zUlVSQlRDeE5RVUZOTzBWRFExWXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhQUVVGUExFVkJRVVVzUTBGQlF5eERSRVJJTEVsQlFVazdRMDl2UWxZN08wRkJUa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVdoQ2RrTXNRVUZoUlN4WlFXSlZMRWRCWVZJc1IwRkJSeXhEUVVGRE8wbEJTVVlzVDBGQlR5eEZRVUZGTEVsQlFVazdTVUZEWWl4WFFVRlhMRVZCUVVVc1VVRkJVVHRKUVVOeVFpeGxRVUZsTEVWQlFVVXNZVUZCWVR0SlFVTTVRaXhYUVVGWExFVkJRVVVzU1VGQlNUdEhRVVZ3UWpzN08wRkJSVU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1RVRkJUVHRGUVhoQ2VFTXNRVUYxUWtVc1dVRjJRbFVzUTBGMVFsWXNUVUZCVFN4RFFVRkRPMGxCUlVnc1QwRkJUeXhGUVVGRkxFbEJRVWs3UjBGRmFFSTdPenRCUVROQ1NDeEJRV2REUlN4WlFXaERWU3hEUVdkRFZpeERRVUZETEVOQlFVTTdSVUZEUVN4TFFVRkxMRVZRZWtKRExFOUJRVTg3UlU4d1FtSXNaVUZCWlN4RlFVRkZMRWxCUVVrN1EwRkxkRUk3TzBGQmRrTklMRUZPVDBVc1dVMVFWU3hEUVdkRFZpeERRVUZETEVGT2VrSkJMRTFCUVUwc1JVMVFWQ3haUVVGWkxFTkJaME5XTEVOQlFVTXNRVTU0UWtFc1RVRkJUU3hEUVVGRE8wVk5Oa0pLTEV0QlFVc3NSVkExUWtNc1QwRkJUenREUTBOb1FqczdRVTFXU0N4QlEwRkJMRmxFUVZrc1EwTkJXaXhIUVVGSExFTkJRVU03UlVGRFJpeFhRVUZYTEVWU1lVUXNaVUZCWlN4RlFVRkZMRTlCUVU4N1JWRmFiRU1zVTBGQlV5eEZRVUZGTEVsQlFVazdSVUZEWml4UlFVRlJMRVZCUVVVc1VVRkJVVHREUVcxRmJrSTdPMEZFZEVWRUxFRkRTMFVzV1VSTVZTeERRMEZhTEVkQlFVY3NRMEZMUkN4RFFVRkRMRU5CUVVNN1JVRkRRU3hMUVVGTExFVlNSVU1zVDBGQlR6dEZVVVJpTEdWQlFXVXNSVUZCUlN4SlFVRkpPME5CVlhSQ096dEJSR3BDU0N4QlRrOUZMRmxOVUZVc1EwTkJXaXhIUVVGSExFTkJTMFFzUTBGQlF5eEJVRVZCTEUxQlFVMHNSVTFRVkN4WlFVRlpMRU5EUVZvc1IwRkJSeXhEUVV0RUxFTkJRVU1zUVZCSFFTeE5RVUZOTEVOQlFVTTdSVTlGU2l4TFFVRkxMRVZTUkVNc1QwRkJUenREUTBOb1FqczdRVTlKUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWRVpIaERMRUZEUzBVc1dVUk1WU3hEUTBGYUxFZEJRVWNzUTBGTFJDeERRVUZETEVOQlFVTTdTVUZWUlN4UFFVRlBMRVZCUVVVc1RVRkJUVHRIUVVWc1FqczdPMEZCUTBRc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlJHeENkRU1zUVVOQlFTeFpSRUZaTEVORFFWb3NSMEZCUnl4RFFVRkRPMGxCYlVKQkxFMUJRVTBzUlVGQlJTeFBRVUZQTzBkQmJVUnNRanM3TzBGQkwwTkhMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVVIyUW5oRExFRkRjMEpGTEZsRWRFSlZMRU5EUVZvc1IwRkJSeXhEUVhOQ1JDeEZRVUZGTEVGQlFVRXNTMEZCU3l4RFFVRkRPMGxCUlVvc1QwRkJUeXhGUVVGRkxFbEJRVWs3U1VGRFlpeGxRVUZsTEVWQlFVVXNVVUZCVVR0SFFUUkNOVUk3T3p0QlJISkVTQ3hCUXpaQ1RTeFpSRGRDVFN4RFEwRmFMRWRCUVVjc1EwRnpRa1FzUlVGQlJTeEJRVUZCTEV0QlFVc3NSMEZOU0N4RlFVRkZMRWRCUTBFc1EwRkJReXhEUVVGRE8wVkJRMFlzWTBGQll5eEZRVUZGTEZOQlFWTTdSVUZEZWtJc1kwRkJZeXhGUVVGRkxFMUJRVTA3UTBGRGRrSTdPMEZCUlVRc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlJHeERNVU1zUVVOelExVXNXVVIwUTBVc1EwTkJXaXhIUVVGSExFTkJjMEpFTEVWQlFVVXNRVUZCUVN4TFFVRkxMRWRCVFVnc1JVRkJSU3hCUVU5RExFMUJRVTBzUTBGSFRDeFRRVUZUTEVWRWRFTnVRaXhaUVVGWkxFTkRRVm9zUjBGQlJ5eERRWE5DUkN4RlFVRkZMRUZCUVVFc1MwRkJTeXhIUVUxSUxFVkJRVVVzUVVGUlF5eHJRa0ZCYTBJc1EwRkZha0lzVTBGQlV5eEZSSFJEYmtJc1dVRkJXU3hEUTBGYUxFZEJRVWNzUTBGelFrUXNSVUZCUlN4QlFVRkJMRXRCUVVzc1IwRk5TQ3hGUVVGRkxFRkJVME1zYzBKQlFYTkNMRU5CUTNKQ0xGTkJRVk1zUTBGQlF6dEpRVU5TTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGRCUTJRN096dEJSSGhEV0N4QlEyZEVVU3haUkdoRVNTeERRMEZhTEVkQlFVY3NRMEZ6UWtRc1JVRkJSU3hCUVVGQkxFdEJRVXNzUTBGMVFrd3NSVUZCUlN4QlFVTkRMR3RDUVVGclFpeEhRVVZtTEVOQlFVTXNSVVJvUkZnc1dVRkJXU3hEUTBGYUxFZEJRVWNzUTBGelFrUXNSVUZCUlN4QlFVRkJMRXRCUVVzc1EwRjFRa3dzUlVGQlJTeEJRVVZETEhOQ1FVRnpRaXhIUVVOdVFpeERRVUZETEVOQlFVTTdSVUZEUml4WFFVRlhMRVZCUVVVc1IwRkJSenREUVVOcVFqczdRVUZOVEN4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWRWVFUjRReXhCUTNWRVJTeFpSSFpFVlN4RFEwRmFMRWRCUVVjc1EwRjFSRVFzVTBGQlV5eERRVUZETzBsQlJVNHNUMEZCVHl4RlFVRkZMRWxCUVVrN1NVRkRZaXhsUVVGbExFVkJRVVVzVVVGQlVUdEpRVU42UWl4UlFVRlJMRVZCUVVVc1VVRkJVVHRKUVVOc1FpeEhRVUZITEVWQlFVVXNTVUZCU1R0SlFVTlVMRXRCUVVzc1JVRkJSU3hEUVVGRE8wbEJRMUlzVTBGQlV5eEZRVUZGTEVsQlFVazdSMEZQYkVJN1JVUnlSVWdzUVVOblJVMHNXVVJvUlUwc1EwTkJXaXhIUVVGSExFTkJkVVJFTEZOQlFWTXNRMEZUVEN4RFFVRkRMRU5CUVVNN1NVRkRRU3hYUVVGWExFVkJRVVVzU1VGQlNUdEpRVU5xUWl4UFFVRlBMRVZCUVVVc1MwRkJTenRIUVVObU96czdRVU51UlZBc1FVRkJRU3haUVVGWkxFTkJRVU03UlVGRFdDeFBRVUZQTEVWVVEwRXNTVUZCU1N4RFUwUk5MRU5CUVVNN1EwRnJSRzVDT3p0QlFXNUVSQ3hCUVVkRkxGbEJTRlVzUTBGSFZpeERRVUZETEVOQlFVTTdSVUZEUVN4TFFVRkxMRVZVU1VNc1QwRkJUenRGVTBoaUxHVkJRV1VzUlVGQlJTeEpRVUZKTzBOQlNYUkNPenRCUVZSSUxFRlNUMFVzV1ZGUVZTeERRVWRXTEVOQlFVTXNRVkpKUVN4TlFVRk5MRVZSVUZRc1dVRkJXU3hEUVVkV0xFTkJRVU1zUVZKTFFTeE5RVUZOTEVOQlFVTTdSVkZFU2l4bFFVRmxMRVZCUVVVc1UwRkJVenREVWtjM1FqczdRVkZXU0N4QlFWVkZMRmxCVmxVc1IwRlZVaXhIUVVGSExFTkJRVU03UlZKVVRpeFRRVUZUTEVWRVFVd3NUVUZCVFR0RlEwTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVDBGQlR5eEZRVUZGTEVOQlFVTXNRMFJFU0N4SlFVRkpPMFZUVlZRc1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeGxRVUZsTEVWQlFVVXNZVUZCWVR0RFFVTXZRanM3UVVGa1NDeEJRV2RDUlN4WlFXaENWU3hEUVdkQ1ZpeFJRVUZSTEVOQlFVTTdSVUZEVUN4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxGVkJRVlVzUlVGQlJTeE5RVUZOTzBWQlEyeENMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzWTBGQll5eEZRVUZGTEZOQlFWTTdSVUZEZWtJc1kwRkJZeXhGUVVGRkxFMUJRVTA3UlVGRGRFSXNTMEZCU3l4RlZHUkRMRTlCUVU4N1ExTnZRbVE3TzBGQk5VSklMRUZCZDBKSkxGbEJlRUpSTEVOQlowSldMRkZCUVZFc1EwRlJUaXhEUVVGRExFTkJRVU03UlVGRFFTeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRk5CUVZNc1JVRkJSU3hKUVVGSk8wTkJRMmhDT3p0QlFUTkNUQ3hCUVd0RFJTeFpRV3hEVlN4RFFXdERWaXhQUVVGUExFTkJRVU03UlVGRFRpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RFFXVmtPenRCUVd4RVNDeEJRVzlEU1N4WlFYQkRVU3hEUVd0RFZpeFBRVUZQTEVOQlJVd3NRMEZCUXl4RFFVRkRPMFZCUTBFc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRmRCUVZjc1JVRkJSU3hKUVVGSk8wTkJWV3hDT3p0QlFXcEVUQ3hCUVhsRFRTeFpRWHBEVFN4RFFXdERWaXhQUVVGUExFTkJSVXdzUTBGQlF5eERRVXRETEVkQlFVY3NRMEZCUXp0RlFVTkdMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVFVGQlRTeEZRVUZGTEVsQlFVazdRMEZEWWpzN1FVRTFRMUFzUVVFNFEwMHNXVUU1UTAwc1EwRnJRMVlzVDBGQlR5eERRVVZNTEVOQlFVTXNRMEZWUXl4SlFVRkpMRU5CUVVNN1JWSm9RMVFzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1MwRkJTeXhGUVVGRkxFZEJRVWM3UlVGRFZpeE5RVUZOTEVWQlFVVXNSMEZCUnp0RlFVTllMRTlCUVU4c1JVRkJSU3hEUVVGRE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeEpRVUZKTEVWQlFVVXNaMEpCUVdFN1JVRkRia0lzVFVGQlRTeEZRVUZGTEVOQlFVTTdRMUV5UWtvN08wRkJTMUFzUVVGRFJTeFpRVVJWTEVOQlExWXNSMEZCUnl4RFFVRkRPMFZCUTBZc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRWxCUVVrc1JWUTVRMGNzVDBGQlR6dEZVeXREWkN4UFFVRlBMRVZCUVVVc1MwRkJTenREUVVObU96dEJRek5FU0N4QlFVTkZMRWxCUkVVc1FVRkJRU3hMUVVGTExFRkJRVUVzU1VGQlN5eERRVUZCTEZkQlFWY3NTVUZEY2tJc1NVRkJTU3hEUVVGRE8wVkJRMHdzVDBGQlR5eEZRVUZGTEUxQlFVMDdRMEZqYUVJN08wRkJhRUpJTEVGQlIwa3NTVUZJUVN4QlFVRkJMRXRCUVVzc1FVRkJRU3hKUVVGTExFTkJRVUVzVjBGQlZ5eEpRVU55UWl4SlFVRkpMRWRCUlVZc1QwRkJUeXhEUVVGRE8wVkJTMUlzUzBGQlN5eEZWa0ZFTEU5QlFVODdRMVZQV2pzN1FVRm1UQ3hCUVVsTkxFbEJTa1lzUVVGQlFTeExRVUZMTEVGQlFVRXNTVUZCU3l4RFFVRkJMRmRCUVZjc1NVRkRja0lzU1VGQlNTeEhRVVZHTEU5QlFVOHNSMEZEVEN4SFFVRkhMRU5CUVVNN1JWUklWaXhUUVVGVExFVkVRVXdzVFVGQlRUdEZRME5XTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1QwRkJUeXhGUVVGRkxFTkJRVU1zUTBSRVNDeEpRVUZKTzBOVlNVNDdPMEZCVGxBc1FVRlZUU3hKUVZaR0xFRkJRVUVzUzBGQlN5eEJRVUZCTEVsQlFVc3NRMEZCUVN4WFFVRlhMRWxCUTNKQ0xFbEJRVWtzUjBGRlJpeFBRVUZQTEVGQlQwNHNWMEZCVnl4RFFVRkRPMFZCUTFnc1ZVRkJWU3hGVmtoU0xFOUJRVTg3UlZWSlZDeExRVUZMTEVWV1Rrd3NUMEZCVHp0RlZVOVFMRTlCUVU4c1JVRkJSU3hOUVVGTk8wTkJRMmhDT3p0QlFVdFFMRUZCUVVFc1kwRkJZeXhEUVVGRE8wVkJRMklzVDBGQlR5eEZRVUZGTEUxQlFVMDdRMEZEYUVJN08wRkRiRUpFTEVGQlNFRXNZVUZIWVN4RFFVbFlMRmxCUVZrc1EwRkRWaXhUUVVGVExFTkJVVkFzUjBGQlJ5eEZRU3RFVkN4alFVRmpMRU5CUTFvc1EwRkJReXhEUVRoQ1F5eEhRVUZITEVOQk9VZEhPMFZXZVVKU0xGVkJRVlVzUlVGQlJTeEpRVUZKTzBWQlEyaENMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeExRVUZMTzBWQlEyUXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkZWQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4SFFVRkhMRVZCUVVVc1IwRkJSenRGUVVOU0xFbEJRVWtzUlVGQlJTeEhRVUZITzBWQlExUXNVMEZCVXl4RlFVRkZMSEZDUVVGdlFqdERWV3BEYUVNN08wRldiVU00UWl4VFFVRkRMRVZCUVc1Q0xGVkJRVlVzUlVGQlJTeExRVUZMTzBWVmJFTTVRaXhCUVVoQkxHRkJSMkVzUTBGSldDeFpRVUZaTEVOQlExWXNVMEZCVXl4RFFWRlFMRWRCUVVjc1JVRXJSRlFzWTBGQll5eERRVU5hTEVOQlFVTXNRMEU0UWtNc1IwRkJSeXhEUVRsSFJ6dEpWbk5EVGl4TFFVRkxMRVZCUVVVc1NVRkJTVHRKUVVOWUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBsQlExb3NWVUZCVlN4RlFVRkZMRXRCUVVzN1IxVjBRM0JDT3pzN1FVRkRSQ3hCUVVGQkxHRkJRV0VzUTBGQlF6dEZRVU5hTEUxQlFVMHNSVUZCUlN4TFFVRkxPMFZCUTJJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UTBGM1JXNUNPenRCUVRGRlJDeEJRVXRKTEdGQlRGTXNRMEZKV0N4WlFVRlpMRU5CUTFZc1UwRkJVeXhEUVVGRE8wVkJRMUlzVFVGQlRTeEZRVUZGTEV0QlFVczdRMEZWWkRzN1FVRm9Ra3dzUVVGUlRTeGhRVkpQTEVOQlNWZ3NXVUZCV1N4RFFVTldMRk5CUVZNc1IwRkhUQ3hIUVVGSExFTkJRVU03UlVGRFNpeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRkZCUVZFc1JVRkJSU3hSUVVGUk8wTkJRMjVDT3p0QlFWaFFMRUZCYlVKTkxHRkJia0pQTEVOQlNWZ3NXVUZCV1N4RFFXTldMRkZCUVZFc1EwRkRUaXhOUVVGTkxFTkJRVU03UlVGRFRDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhIUVVGSExFVkJRVVVzWjBKQlFXZENPMFZCUTNKQ0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhuUWtGQlowSXNSVUZCUlN3d1FrRkJNRUk3UlVGRE5VTXNaVUZCWlN4RlFVRkZMRTlCUVU4N1JVRkRlRUlzYVVKQlFXbENMRVZCUVVVc1UwRkJVenRGUVVNMVFpeFZRVUZWTEVWQlFVVXNVVUZCVVR0RFFXVnlRanM3UVVFeFExQXNRVUUyUWxFc1lVRTNRa3NzUTBGSldDeFpRVUZaTEVOQlkxWXNVVUZCVVN4RFFVTk9MRTFCUVUwc1EwRlZTaXhKUVVGSkxFTkJRVU03UlZac1FsZ3NVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzUzBGQlN5eEZRVUZGTEVkQlFVYzdSVUZEVml4TlFVRk5MRVZCUVVVc1IwRkJSenRGUVVOWUxFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhSUVVGUkxFVkJRVVVzVFVGQlRUdEZRVU5vUWl4SlFVRkpMRVZCUVVVc1owSkJRV0U3UlVGRGJrSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1ExVmhSanM3UVVFdlFsUXNRVUZwUTFFc1lVRnFRMHNzUTBGSldDeFpRVUZaTEVOQlkxWXNVVUZCVVN4RFFVTk9MRTFCUVUwc1FVRmpTQ3hOUVVGTkxFVkJha05tTEdGQlFXRXNRMEZKV0N4WlFVRlpMRU5CWTFZc1VVRkJVU3hEUVVOT0xFMUJRVTBzUVVGbFNDeFBRVUZQTEVOQlFVTTdSVUZEVUN4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVOVUxFOUJRVThzUlVGQlJTeEpRVUZKTzBOQlEyUTdPMEZCY2tOVUxFRldTVVVzWVZWS1Z5eERRVWxZTEZsQlFWa3NRMEZqVml4UlFVRlJMRU5CUTA0c1RVRkJUU3hCVm1aVUxFMUJRVTBzUlZWS1ZDeGhRVUZoTEVOQlNWZ3NXVUZCV1N4RFFXTldMRkZCUVZFc1EwRkRUaXhOUVVGTkxFRldaRlFzVFVGQlRTeERRVUZETzBWVmJVTkJMRTlCUVU4c1JVRkJSU3hGUVVGRk8wTldha05zUWpzN1FWVlFTQ3hCUVRSRFRTeGhRVFZEVHl4RFFVbFlMRmxCUVZrc1EwRmpWaXhSUVVGUkxFTkJNRUpPTEZOQlFWTXNRMEZCUXp0RlFVTlNMRWxCUVVrc1JWZzVRMGdzU1VGQlNUdEZWeXREVEN4VFFVRlRMRVZCUVVVc1kwRkJZenREUVVNeFFqczdRVUV2UTFBc1FVRnBSRTBzWVVGcVJFOHNRMEZKV0N4WlFVRlpMRU5CWTFZc1VVRkJVU3hEUVN0Q1RpeFRRVUZUTEVOQlFVTTdSVUZEVWl4TFFVRkxMRVZZYmtSS0xFbEJRVWs3UTFkdlJFNDdPMEZCYmtSUUxFRkJkVVJGTEdGQmRrUlhMRU5CZFVSWUxGbEJRVmtzUTBGQlF6dEZRVU5ZTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhOUVVGTkxFVllOVVJFTEVsQlFVazdSVmMyUkZRc1NVRkJTU3hGUVVGRkxHZENRVUZuUWp0RlFVTjBRaXhQUVVGUExFVkJRVVVzUlVGQlJUdEZRVU5ZTEdkQ1FVRm5RaXhGUVVGRkxEQkNRVUV3UWp0RlFVTTFReXhsUVVGbExFVkJRVVVzVDBGQlR6dEZRVU40UWl4cFFrRkJhVUlzUlVGQlJTeFRRVUZUTzBWQlF6VkNMRlZCUVZVc1JVRkJSU3hSUVVGUk8wVkJRM0JDTEZOQlFWTXNSVUZCUlN4aFFVRmhPMFZCUTNoQ0xGRkJRVkVzUlVGQlJTeE5RVUZOTzBWQlEyaENMRmRCUVZjc1JVRkJSU3hUUVVGVE8wTkJTM1pDT3p0QlFYcEZTQ3hCVmtsRkxHRlZTbGNzUTBGMVJGZ3NXVUZCV1N4QlZtNUVXQ3hOUVVGTkxFVlZTbFFzWVVGQllTeERRWFZFV0N4WlFVRlpMRUZXYkVSWUxFMUJRVTBzUTBGQlF6dEZWV3RGU2l4UFFVRlBMRVZCUVVVc1JVRkJSVHREVm1oRlpEczdRVlZ4UlVnc1FVRkRSU3hqUVVSWkxFTkJRMW9zUTBGQlF5eERRVUZETzBWQlEwRXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhqUVVGakxFVkJRVVVzVFVGQlRUdEZRVU4wUWl4bFFVRmxMRVZCUVVVc1RVRkJUVHRGUVVOMlFpeFhRVUZYTEVWQlFVVXNUVUZCVFR0RlFVTnVRaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TlFVRk5MRVZCUVVVc1MwRkJTenRGUVVOaUxGRkJRVkVzUlVGQlJTeE5RVUZOTzBWQlEyaENMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzUzBGQlN5eEZXRzVHUkN4UFFVRlBPMFZYYjBaWUxGVkJRVlVzUlVGQlJTeE5RVUZOTzBWQlEyeENMRmRCUVZjc1JVRkJSU3hIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEVkQlFVY3NRMWhzUm1oQ0xFOUJRVTg3UlZkdFJtWXNaVUZCWlN4RlFVRkZMRWxCUVVrN1JVRkRja0lzVjBGQlZ5eEZXQzlGU0N4bFFVRmxMRVZCUVVVc1QwRkJUenRGVjJkR2FFTXNWMEZCVnl4RlFVRkZMRWRCUVVjN1JVRkRhRUlzVlVGQlZTeEZXSFpHU2l4UFFVRlBPME5YZFVoa096dEJRVGxDUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmJFSjJReXhCUVVORkxHTkJSRmtzUTBGRFdpeERRVUZETEVOQlFVTTdTVUZyUWtVc1UwRkJVeXhGUVVGRkxFbEJRVWs3UjBFMlFteENPenM3UVVFeFFrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRWFJDZUVNc1FVRkRSU3hqUVVSWkxFTkJRMW9zUTBGQlF5eERRVUZETzBsQmMwSkZMRk5CUVZNc1JVRkJSU3hMUVVGTE8wZEJlVUp1UWpzN08wRkJhRVJJTEVGQk1FSkpMR05CTVVKVkxFTkJRMW9zUTBGQlF5eERRWGxDUXl4SlFVRkpMRU5CUVVNN1JVRkRTQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4UFFVRlBMRVZCUVVVc1EwRkJRenREUVVOWU96dEJRVGRDVEN4QlFTdENTU3hqUVM5Q1ZTeERRVU5hTEVOQlFVTXNRMEU0UWtNc1IwRkJSeXhEUVVGRE8wVkJSVVlzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZEVml4VlFVRlZMRVZCUVVVc1VVRkJVVHRGUVVOd1FpeE5RVUZOTEVWQlFVVXNWVUZCVlR0RFFVMXVRanM3UVVGS09FSXNVMEZCUXl4RlFVRnVRaXhWUVVGVkxFVkJRVVVzUzBGQlN6dEZRWEpEYkVNc1FVRXJRa2tzWTBFdlFsVXNRMEZEV2l4RFFVRkRMRU5CT0VKRExFZEJRVWNzUTBGQlF6dEpRVTlCTEV0QlFVc3NSVUZCUlN4SlFVRkpPMGxCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3UjBGRlpqczdPMEZCZWtOTUxFRkJORU5OTEdOQk5VTlJMRU5CUTFvc1EwRkJReXhCUVRCRFJTeE5RVUZOTEVOQlEwd3NSMEZCUnl4RFFVRkRPMFZCUTBZc1RVRkJUU3hGUVVGRkxFOUJRVTg3UTBGRGFFSTdPMEZETjBoUUxFRkJRVUVzWVVGQllTeERRVUZETzBWQlExb3NUVUZCVFN4RlFVRkZMRTFCUVUwN1EwRnRRMlk3TzBGQmFrTkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZJY2tNc1FVRkJRU3hoUVVGaExFTkJRVU03U1VGSlZpeFBRVUZQTEVWQlFVVXNTVUZCU1R0SlFVTmlMR1ZCUVdVc1JVRkJSU3hWUVVGVk8wbEJRek5DTEZOQlFWTXNSVUZCUlN4SlFVRkpPMGRCT0VKc1FqczdPMEZCTTBKRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRTFCUVUwN1JVRlVkRU1zUVVGQlFTeGhRVUZoTEVOQlFVTTdTVUZWVml4TlFVRk5MRVZCUVVVc1QwRkJUenRIUVRCQ2JFSTdPenRCUVhCRFJDeEJRV0ZGTEdGQllsY3NSVUZoV0N4QlFVRkJMRXRCUVVNc1JVRkJUeXhMUVVGTExFRkJRVm9zUlVGQll6dEZRVU5pTEU5QlFVOHNSVUZCUlN4SFFVRkhPME5CUzJJN08wRkJTRU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1RVRkJUVHRGUVdoQ2VFTXNRVUZoUlN4aFFXSlhMRVZCWVZnc1FVRkJRU3hMUVVGRExFVkJRVThzUzBGQlN5eEJRVUZhTEVWQlFXTTdTVUZKV0N4UFFVRlBMRVZCUVVVc1NVRkJTVHRIUVVWb1FqczdPMEZCYmtKSUxFRkJjVUpGTEdGQmNrSlhMRU5CY1VKWUxFZEJRVWNzUTBGQlF6dEZRVU5HTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RFFVTm1PenRCUVVWRUxFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRTlCUVU4N1JVRXpRblpETEVGQk5rSk5MR0ZCTjBKUExFTkJORUpVTEUxQlFVMHNRMEZEU2l4SFFVRkhMRU5CUVVNN1NVRkRSaXhMUVVGTExFVkJRVVVzU1VGQlNUdEpRVU5ZTEZWQlFWVXNSVUZCUlN4TFFVRkxPMGxCUTJwQ0xFMUJRVTBzUlVGQlJTeEpRVUZKTzBkQlEySTdPenRCUVV0UUxFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRkRha01zUVVGQlFTeE5RVUZOTEVOQlFVTTdTVUZEVEN4TFFVRkxMRVZCUVVVc1RVRkJUVHRKUVVOaUxFbEJRVWtzUlVGQlJTeFZRVUZWTzBkQlEycENPMFZCUlVRc1FVRkJRU3hOUVVGTkxFTkJRVU03U1VGRFRDeExRVUZMTEVWQlFVVXNUVUZCVFR0SlFVTmlMRWxCUVVrc1JVRkJSU3hWUVVGVk8wZEJRMnBDTzBWQlJVUXNRVUZCUVN4TlFVRk5MRU5CUVVNN1NVRkRUQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEpRVU5ZTEVsQlFVa3NSVUZCUlN4UlFVRlJPMGRCUTJZN096dEJRM0pEU0N4QlFVRkJMRWxCUVVrc1EwRkJRenRGUVVOSUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NZMEZCWXl4RlFVRkZMRWRCUVVjN1JVRkRia0lzVVVGQlVTeEZRVUZGTEZGQlFWRTdRMEZUYmtJN08wRkJXa1FzUVVGTFJTeEpRVXhGTEVOQlMwWXNUVUZCVFN4RFFVRkRPMFZCUTB3c1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVsQlFVa3NSVUZCUlN4RFFVRkRPMFZCUTFBc1IwRkJSeXhGUVVGRkxFTkJRVU03UTBGRFVEczdRVU42UWtnc1FVRkJRU3hoUVVGaExFTkJRVU03UlVGRFdpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhWUVVGVkxFVkJRVVVzUzBGQlN6dEZRVU5xUWl4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeGhRVUZoTEVWQlFVVXNTVUZCU1R0RFFTdENjRUk3TzBGQmJrTkVMRUZCVFVVc1lVRk9WeXhEUVUxWUxFZEJRVWNzUTBGQlF6dEZRVU5HTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RFFVTm1PenRCUVZaSUxFRkJXVVVzWVVGYVZ5eERRVmxZTEdOQlFXTXNRMEZCUXp0RlFVTmlMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1NVRkJTU3hGUVVGRkxFTkJRVU03UlVGRFVDeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRXRCUVVzc1JXUmFSQ3hQUVVGUE8wVmpZVmdzVjBGQlZ5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEWkdSb1FpeFBRVUZQTzBWalpWZ3NZMEZCWXl4RlFVRkZMRWxCUVVrN1EwRmxja0k3TzBGQmJFTklMRUZCY1VKSkxHRkJja0pUTEVOQldWZ3NZMEZCWXl4RFFWTmFMRWxCUVVrN1FVRnlRbElzWVVGQllTeERRVmxZTEdOQlFXTXNRMEZWV2l4TFFVRkxMRU5CUVVNN1JVRkRTaXhQUVVGUExFVkJRVVVzUzBGQlN6dERRVU5tT3p0QlFYaENUQ3hCUVRCQ1NTeGhRVEZDVXl4RFFWbFlMR05CUVdNc1EwRmpXaXhMUVVGTExFTkJRVU03UlVGRFNpeFRRVUZUTEVWQlFVVXNSMEZCUnp0RlFVTmtMR05CUVdNc1JVRkJSU3hKUVVGSk8wTkJRM0pDT3p0QlFUZENUQ3hCUVN0Q1NTeGhRUzlDVXl4RFFWbFlMR05CUVdNc1IwRnRRbFlzUjBGQlJ5eERRVUZETzBWaUwwSlNMRk5CUVZNc1JVUkJUQ3hOUVVGTk8wVkRRMVlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UFFVRlBMRVZCUVVVc1EwRkJReXhEUkVSSUxFbEJRVWs3UTJOblExSTdPMEZCU1V3c1FVRkJRU3hYUVVGWExFTkJRVU03UlVGRFZpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhKUVVGSkxFVkJRVVVzUTBGQlF6dEZRVU5RTEUxQlFVMHNSVUZCUlN4RFFVRkRPMFZCUTFRc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeFBRVUZQTEVWQlFVVXNaMEpCUVdkQ08wVkJRM3BDTEV0QlFVc3NSV1IwUTBNc1QwRkJUenRGWTNWRFlpeFZRVUZWTEVWQlFVVXNVVUZCVVR0RlFVTndRaXhYUVVGWExFVkJRVVVzUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5rZWtOc1FpeFBRVUZQTzBOak1FUmtPenRCUVhwQ1JDeEJRVlZGTEZkQlZsTXNRMEZWVkN4RlFVRkZMRU5CUVVNN1JVRkRSQ3hUUVVGVExFVkJRVVVzU1VGQlNUdEZRVU5tTEdOQlFXTXNSVUZCUlN4VFFVRlRPME5CU3pGQ096dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVGa2VFTXNRVUZWUlN4WFFWWlRMRU5CVlZRc1JVRkJSU3hEUVVGRE8wbEJTME1zVTBGQlV5eEZRVUZGTEVsQlFVazdSMEZGYkVJN096dEJRV3BDU0N4QlFXMUNSU3hYUVc1Q1V5eERRVzFDVkN4TFFVRkxMRU5CUVVNN1JVRkRTaXhYUVVGWExFVmtOVU5JTEdWQlFXVXNSVUZCUlN4UFFVRlBPMFZqTmtOb1F5eFhRVUZYTEVWQlFVVXNVMEZCWlR0RlFVTTFRaXhYUVVGWExFVmtNVU5TTEVkQlFVYzdSV015UTA0c1UwRkJVeXhGUVVGRkxFMUJRV1U3UTBGRE0wSTdPMEZCUjBnc1FVRkRSU3hoUVVSWExFZEJRMVFzUjBGQlJ5eERRVUZETzBWaWFrVk9MRk5CUVZNc1JVUkJUQ3hOUVVGTk8wVkRRMVlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UFFVRlBMRVZCUVVVc1EwRkJReXhEUkVSSUxFbEJRVWs3UTJOclJWWTdPMEZCUjBnc1FVRkJRU3hqUVVGakxFTkJRVU03UlVGRFlpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMSEZDUVVGeFFpeEZRVUZGTEZGQlFWRTdSVUZETDBJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNWVUZCVlN4RlFVRkZMRWRCUVVjN1EwRkxhRUk3TzBGQlZFUXNRVUZOUlN4alFVNVpMRU5CVFZvc1JVRkJSU3hEUVVGRE8wVkJRMFFzWTBGQll5eEZRVUZGTEZOQlFWTTdRMEZETVVJN08wRkJTVWdzUVVGQlFTeHBRa0ZCYVVJc1EwRkJRenRGUVVOb1FpeFBRVUZQTEVWQlFVVXNUVUZCVFR0RFFVTm9RanM3UVVGRlJDeEJRVU5GTEdGQlJGY3NSMEZEVkN4SFFVRkhMRU5CUVVNN1JXSjJSazRzVTBGQlV5eEZSRUZNTEUxQlFVMDdSVU5EVml4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETEVORVJFZ3NTVUZCU1R0RFkzZEdWanM3UVVGSVNDeEJRVXRGTEdGQlRGY3NRMEZMV0N4SFFVRkhMRU5CUVVNN1JVRkRSaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1QwRkJUeXhGUVVGRkxFdEJRVXM3UTBGRFpqczdRVUZVU0N4QlFWZEZMR0ZCV0Zjc1EwRlhXQ3hQUVVGUExFTkJRVU03UlVGRFRpeFBRVUZQTEVWQlFVVXNSMEZCUnp0RFFXMUNZanM3UVVGcVFrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRV1IyUXl4QlFWZEZMR0ZCV0Zjc1EwRlhXQ3hQUVVGUExFTkJRVU03U1VGSlNpeExRVUZMTEVWQlFVVXNUVUZCVFR0SlFVTmlMRWxCUVVrc1JVRkJSU3hWUVVGVk8wZEJaVzVDT3pzN1FVRmFReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZCYmtKNFF5eEJRVmRGTEdGQldGY3NRMEZYV0N4UFFVRlBMRU5CUVVNN1NVRlRTaXhQUVVGUExFVkJRVVVzU1VGQlNUdEhRVmRvUWpzN08wRkJVRWNzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVhoQ2VrTXNRVUYxUWtrc1lVRjJRbE1zUTBGWFdDeFBRVUZQTEVGQldVb3NWVUZCVnl4RFFVRkJMRTFCUVUwc1JVRkJSVHRKUVVWb1FpeFRRVUZUTEVWQlFVVXNhVUpCUVdsQ08wZEJTeTlDT3pzN1FVRklReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZCTTBJeFF5eEJRWFZDU1N4aFFYWkNVeXhEUVZkWUxFOUJRVThzUVVGWlNpeFZRVUZYTEVOQlFVRXNUVUZCVFN4RlFVRkZPMGxCUzJoQ0xGTkJRVk1zUlVGQlJTeHBRa0ZCYVVJN1IwRkZMMEk3T3p0QlFUbENUQ3hCUVdsRFJTeGhRV3BEVnl4RFFXbERXQ3hEUVVGRExFTkJRVU03UlVGRFFTeFBRVUZQTEVWQlFVVXNTMEZCU3p0RlFVTmtMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEV0QlFVc3NSV1J5U0VRc1QwRkJUenREWTNOSVdqczdRVUZ5UTBnc1FVRjFRMFVzWVVGMlExY3NRMEYxUTFnc1MwRkJTeXhEUVVGRE8wVkJRMG9zVTBGQlV5eEZRVUZGTEVsQlFVazdRMEZEYUVJN08wRkJla05JTEVGQk1rTkZMR0ZCTTBOWExFTkJNa05ZTEZkQlFWY3NRMEZCUXp0RlFVTldMR05CUVdNc1JVRkJSU3hKUVVGSk8wTkJRM0pDT3p0QlFUZERTQ3hCUVN0RFJTeGhRUzlEVnl4QlFTdERWaXhSUVVGUkxFTkJRVU03UlVGRFVpeFZRVUZWTEVWa0wwaEtMRTlCUVU4N1JXTm5TV0lzUzBGQlN5eEZaR3hKUkN4UFFVRlBPME5qYlVsYU96dEJRVWRJTEVGQlFVRXNiVUpCUVcxQ0xFTkJRVU03UlVGRGJFSXNUMEZCVHl4RlFVRkZMRmRCUVZjN1JVRkRjRUlzVlVGQlZTeEZRVUZGTEUxQlFVMDdSVUZEYkVJc1RVRkJUU3hGUVVGRkxFMUJRVTA3UTBGWFpqczdRVUZVUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQlRISkRMRUZCUVVFc2JVSkJRVzFDTEVOQlFVTTdTVUZOYUVJc1QwRkJUeXhGUVVGRkxFbEJRVWs3U1VGRFlpeFRRVUZUTEVWQlFVVXNTVUZCU1R0SlFVTm1MR1ZCUVdVc1JVRkJSU3hWUVVGVk8wZEJUVGxDT3pzN1FVRklReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZCV0hSRExFRkJRVUVzYlVKQlFXMUNMRU5CUVVNN1NVRlphRUlzVFVGQlRTeEZRVUZGTEU5QlFVODdSMEZGYkVJN096dEJRekZLUkN4QlFVRkJMR05CUVdNc1EwRkJRenRGUVVOaUxFOUJRVThzUlVGQlJTeE5RVUZOTzBOQk9FSm9RanM3UVVFdlFrUXNRVUZIUlN4alFVaFpMRWRCUjFZc1IwRkJSeXhEUVVGRE8wVmtSazRzVTBGQlV5eEZSRUZNTEUxQlFVMDdSVU5EVml4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETEVORVJFZ3NTVUZCU1R0RFpVOVdPenRCUVVwRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRk1ka01zUVVGSFJTeGpRVWhaTEVkQlIxWXNSMEZCUnl4RFFVRkRPMGxCUjBZc1QwRkJUeXhGUVVGRkxFbEJRVWs3U1VGRFlpeGxRVUZsTEVWQlFVVXNZVUZCWVR0SFFVVnFRenM3TzBGQlZFZ3NRVUZYUlN4alFWaFpMRU5CVjFvc1UwRkJVeXhEUVVGRE8wVkJRMUlzVTBGQlV5eEZRVUZGTEVsQlFVazdRMEZyUW1oQ096dEJRVGxDU0N4QlFXRkpMR05CWWxVc1EwRlhXaXhUUVVGVExFTkJSVkFzVDBGQlR5eERRVUZETzBWQlEwNHNZVUZCWVN4RlFVRkZMRXRCUVVzN1EwRkpja0k3TzBGQmJFSk1MRUZCWlUwc1kwRm1VU3hEUVZkYUxGTkJRVk1zUTBGRlVDeFBRVUZQTEVOQlJVd3NTVUZCU1N4RFFVRkRPMFZCUTBnc1QwRkJUeXhGUVVGRkxFdEJRVXM3UTBGRFpqczdRVUZxUWxBc1FVRnZRa2tzWTBGd1FsVXNRMEZYV2l4VFFVRlRMRU5CVTFBc1EwRkJReXhEUVVGRE8wVkJRMEVzUzBGQlN5eEZabUpFTEU5QlFVODdSV1ZqV0N4bFFVRmxMRVZCUVVVc1NVRkJTVHREUVU5MFFqczdRVUUzUWt3c1FVRjVRbEVzWTBGNlFrMHNRMEZYV2l4VFFVRlRMRU5CVTFBc1EwRkJReXhCWkdKR0xFMUJRVTBzUTJOclFrUXNTVUZCU1N4QlFVRkJMRmRCUVZjc1JVRjZRblpDTEdOQlFXTXNRMEZYV2l4VFFVRlRMRU5CVTFBc1EwRkJReXhCWkZwR0xFMUJRVTBzUTJOcFFrUXNTVUZCU1N4QlFVRkJMRmRCUVZjc1EwRkJRenRGUVVOa0xHVkJRV1VzUlVGQlJTeFRRVUZUTzBOQlF6TkNPenRCUVU5UUxFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRkVja01zUVVGQlFTeFpRVUZaTEVOQlFVTTdTVUZGVkN4TFFVRkxMRVZCUVVVc1IwRkJSenRIUVRCRVlqdEZRVFZFUkN4QlFVbEpMRmxCU2xFc1EwRkpVaXhIUVVGSExFTkJRVU03U1VGRFJpeFJRVUZSTEVWQlFVVXNUVUZCVFR0SlFVTm9RaXhIUVVGSExFVm1WRTBzU1VGQlNUdEhaVlZrT3pzN1FVRlFUQ3hCUVZWRkxGbEJWbFVzUTBGVlZpeEZRVUZGTEVOQlFVTTdSVUZEUkN4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxGTkJRVk1zUlVGQlJTeEpRVUZKTzBWQlEyWXNUVUZCVFN4RlFVRkZMRXRCUVVzN1EwRkRaRHM3UVVGa1NDeEJRV2RDUlN4WlFXaENWU3hEUVdkQ1ZpeEZRVUZGTEVOQlFVTTdSVUZEUkN4SlFVRkpMRVZCUVVVc1QwRkJUenRGUVVOaUxFdEJRVXNzUlVGQlJTeEhRVUZITzBWQlExWXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRk5aRHM3UVVGS1F5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJja0oyUXl4QlFXZENSU3haUVdoQ1ZTeERRV2RDVml4RlFVRkZMRU5CUVVNN1NVRk5ReXhKUVVGSkxFVkJRVVVzVDBGQlR6dEpRVU5pTEV0QlFVc3NSVUZCUlN4SFFVRkhPMGRCUldJN096dEJRWHBDU0N4QlFUSkNSU3haUVROQ1ZTeERRVEpDVml4SFFVRkhMRU5CUVVNN1JVRkRSaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1QwRkJUeXhGUVVGRkxFdEJRVXM3UTBGRFpqczdRVUV2UWtnc1FVRnBRMFVzV1VGcVExVXNRMEZwUTFZc1NVRkJTU3hEUVVGRE8wVmtjRVJNTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFdEJRVXNzUlVGQlJTeEhRVUZITzBWQlExWXNUVUZCVFN4RlFVRkZMRWRCUVVjN1JVRkRXQ3hQUVVGUExFVkJRVVVzUTBGQlF6dEZRVU5XTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1VVRkJVU3hGUVVGRkxFMUJRVTA3UlVGRGFFSXNTVUZCU1N4RlFVRkZMR2RDUVVGaE8wVkJRMjVDTEUxQlFVMHNSVUZCUlN4RFFVRkRPME5qSzBOU096dEJRVzVEU0N4QlFYRkRSU3haUVhKRFZTeERRWEZEVml4RFFVRkRMRU5CUVVNN1JVRkRRU3hWUVVGVkxFVkJRVVVzVVVGQlVUdEZRVU53UWl4UFFVRlBMRVZCUVVVc1MwRkJTenRGUVVOa0xFMUJRVTBzUlVGQlJTeHBRa0ZCYVVJN1EwRkxNVUk3TzBGQk4wTklMRUZrTVVKRkxGbGpNRUpWTEVOQmNVTldMRU5CUVVNc1FXUXZSRUVzVFVGQlRTeEZZekJDVkN4WlFVRlpMRU5CY1VOV0xFTkJRVU1zUVdRNVJFRXNUVUZCVFN4RFFVRkRPMFZqYjBWS0xFOUJRVThzUlVGQlJTeEhRVUZITzBOa2JFVm1PenRCWTNWQ1NDeEJRV2RFU1N4WlFXaEVVU3hCUVN0RFZDeFpRVUZaTEVOQlExZ3NRMEZCUXl4RFFVRkRPMFZCUTBFc1QwRkJUeXhGUVVGRkxFZEJRVWM3UTBGTFlqczdRVUYwUkV3c1FXUXhRa1VzV1dNd1FsVXNRVUVyUTFRc1dVRkJXU3hEUVVOWUxFTkJRVU1zUVdReFJVWXNUVUZCVFN4Rll6QkNWQ3haUVVGWkxFRkJLME5VTEZsQlFWa3NRMEZEV0N4RFFVRkRMRUZrZWtWR0xFMUJRVTBzUTBGQlF6dEZZelpGUml4UFFVRlBMRVZCUVVVc1IwRkJSenREWkRORmFrSTdPMEZqZFVKSUxFRkJkMFJKTEZsQmVFUlJMRUZCSzBOVUxGbEJRVmtzUTBGVFdDeEZRVUZGTEVGQlFVRXNUMEZCVHl4RFFVRkRMRU5CUVVNc1EwRkJRenRGUVVOV0xFOUJRVThzUlVGQlJTeERRVUZETzBOQlExZzdPMEZCUzBnc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFVUnlReXhCUVVGQkxGTkJRVk1zUTBGQlF6dEpRVVZPTEVsQlFVa3NSVUZCUlN4UFFVRlBPMGxCUTJJc1MwRkJTeXhGUVVGRkxFZEJRVWM3UjBGRllqczdPMEZCUlVRc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFRpeFBRVUZQTEVWQlFVVXNUVUZCVFR0RFFVTm9RanM3UVVGRFJDeEJRVU5GTEdOQlJGa3NRMEZEV2l4UFFVRlBMRU5CUVVNN1JVRkRUaXhUUVVGVExFVkJRVVVzU1VGQlNUdEZRVU5tTEU5QlFVOHNSVUZCUlN4SFFVRkhPME5CWTJJN08wRkJha0pJTEVGQlMwa3NZMEZNVlN4RFFVTmFMRTlCUVU4c1EwRkpUQ3hEUVVGRExFTkJRVU03UlVGRFFTeExRVUZMTEVWbWRrZEVMRTlCUVU4N1JXVjNSMWdzVDBGQlR5eEZRVUZGTEV0QlFVczdSVUZEWkN4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeEpRVUZKTzBWQlEySXNUVUZCVFN4RlFVRkZMRWRCUVVjc1EwRkJReXhMUVVGTExFTm1NMGRpTEU5QlFVODdSV1UwUjFnc1pVRkJaU3hGUVVGRkxFbEJRVWs3UTBGTGRFSTdPMEZCYUVKTUxFRmtiRWRGTEdOamEwZFpMRU5CUTFvc1QwRkJUeXhEUVVsTUxFTkJRVU1zUVdSMlIwWXNUVUZCVFN4RlkydEhWQ3hqUVVGakxFTkJRMW9zVDBGQlR5eERRVWxNTEVOQlFVTXNRV1IwUjBZc1RVRkJUU3hEUVVGRE8wVmpLMGRHTEZWQlFWVXNSV1l2UjFJc2NVSkJRVTg3UTBORlpEczdRV01yUmtnc1FVRnhRbEVzWTBGeVFrMHNRMEZyUWxvc1UwRkJVeXhCUVVOT0xGVkJRVmNzUTBGQlFTeEZRVUZGTEVWQlExb3NUMEZCVHl4RFFVTk1MRU5CUVVNc1EwRkJRenRGUVVOQkxFdEJRVXNzUldaNlNGQXNUMEZCVHp0RlpUQklUQ3hWUVVGVkxFVm1lRWhXTEU5QlFVODdRMlU0U0ZJN08wRkJOMEpVTEVGa2JFZEZMR05qYTBkWkxFTkJhMEphTEZOQlFWTXNRVUZEVGl4VlFVRlhMRU5CUVVFc1JVRkJSU3hGUVVOYUxFOUJRVThzUTBGRFRDeERRVUZETEVGa2RraE9MRTFCUVUwc1JXTnJSMVFzWTBGQll5eERRV3RDV2l4VFFVRlRMRUZCUTA0c1ZVRkJWeXhEUVVGQkxFVkJRVVVzUlVGRFdpeFBRVUZQTEVOQlEwd3NRMEZCUXl4QlpIUklUaXhOUVVGTkxFTkJRVU03UldNeVNFVXNTMEZCU3l4RlpqTklVQ3hQUVVGUE8wVmxORWhNTEZWQlFWVXNSV1kxU0Zvc2NVSkJRVTg3UTBORlpEczdRV01yUmtnc1FVRnJRMFVzWTBGc1Exa3NRMEZyUTFvc1ZVRkJWU3hEUVVGRE8wVkJRMVFzVDBGQlR5eEZRVUZGTEVsQlFVazdSVUZEWWl4WFFVRlhMRVZCUVVVc1QwRkJUenREUVVOeVFqczdRVUZ5UTBnc1FVRjFRMFVzWTBGMlExa3NRMEYxUTFvc1QwRkJUenRCUVhaRFZDeGpRVUZqTEVOQmQwTmFMRU5CUVVNc1EwRkJRenRGUVVOQkxFMUJRVTBzUlVGQlJTeEpRVUZKTzBOQlEySTdPMEZCTVVOSUxFRkJORU5GTEdOQk5VTlpMRU5CTkVOYUxFdEJRVXNzUTBGQlF6dEZRVU5LTEdGQlFXRXNSVUZCUlN4SlFVRkpPME5CUTNCQ096dEJRM1pLU0N4QlFVRkJMRTlCUVU4c1IwRkJSeXhKUVVGSkxFTkJRVU03UlVGRFlpeFBRVUZQTEVWQlFVVXNUVUZCVFR0RFFVTm9RanM3UVVGRFJDeEJRVU5GTEZsQlJGVXNSMEZEVWl4SFFVRkhMRU5CUVVNN1JXWklUaXhUUVVGVExFVkVRVXdzVFVGQlRUdEZRME5XTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1QwRkJUeXhGUVVGRkxFTkJRVU1zUTBSRVNDeEpRVUZKTzBOblFrbFdPenRCUVVoSUxFRkJTMFVzV1VGTVZTeERRVXRXTEVkQlFVY3NRMEZCUXp0RlFVTkdMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UFFVRlBMRVZCUVVVc1MwRkJTenREUVVObU96dEJRVlJJTEVGQlYwVXNXVUZZVlN4RFFWZFdMRmRCUVZjc1EwRkJRenRGUVVOV0xFOUJRVThzUlVGQlJTeERRVUZETzBOQlExZzdPMEZCWWtnc1FVRmxSU3haUVdaVkxFTkJaVllzVDBGQlR5eERRVUZETzBWQlEwNHNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVDBGQlR5eEZRVUZGTEVkQlFVYzdRMEV5UW1JN08wRkJOVU5JTEVGQmNVSlJMRmxCY2tKSkxFTkJaVllzVDBGQlR5eERRVWxNTEVOQlFVTXNRV1ptUml4TlFVRk5MRU5sYVVKRUxGZEJRVmNzUlVGeVFtNUNMRmxCUVZrc1EwRmxWaXhQUVVGUExFTkJTVXdzUTBGQlF5eEJabVJHTEUxQlFVMHNRMlZuUWtRc1YwRkJWeXhEUVVGRE8wVkJRMVlzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZEV0RzN1FVRkpUQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCTTBKMlF5eEJRV1ZGTEZsQlpsVXNRMEZsVml4UFFVRlBMRU5CUVVNN1NVRmhTaXhMUVVGTExFVkJRVVVzVFVGQlRUdEpRVU5pTEVsQlFVa3NSVUZCUlN4VlFVRlZPMGRCWlc1Q096czdRVUZhUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQmFFTjRReXhCUVdWRkxGbEJabFVzUTBGbFZpeFBRVUZQTEVOQlFVTTdTVUZyUWtvc1QwRkJUeXhGUVVGRkxFbEJRVWs3UjBGWGFFSTdPenRCUVZCSExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRnlRM3BETEVGQmIwTkpMRmxCY0VOUkxFTkJaVllzVDBGQlR5eEJRWEZDU2l4VlFVRlhMRU5CUVVFc1RVRkJUU3hGUVVGRk8wbEJSV2hDTEZOQlFWTXNSVUZCUlN4cFFrRkJhVUk3UjBGTEwwSTdPenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRTFCUVUwN1JVRjRRekZETEVGQmIwTkpMRmxCY0VOUkxFTkJaVllzVDBGQlR5eEJRWEZDU2l4VlFVRlhMRU5CUVVFc1RVRkJUU3hGUVVGRk8wbEJTMmhDTEZOQlFWTXNSVUZCUlN4cFFrRkJhVUk3UjBGRkwwSTdPenRCUVVsTUxFRkJRVUVzYTBKQlFXdENMRU5CUVVNN1JVRkRha0lzVDBGQlR5eEZRVUZGTEZkQlFWYzdSVUZEY0VJc1RVRkJUU3hGUVVGRkxFMUJRVTA3UTBGWFpqczdRVUZVUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQlNuSkRMRUZCUVVFc2EwSkJRV3RDTEVOQlFVTTdTVUZMWml4UFFVRlBMRVZCUVVVc1NVRkJTVHRKUVVOaUxGTkJRVk1zUlVGQlJTeEpRVUZKTzBsQlEyWXNaVUZCWlN4RlFVRkZMRlZCUVZVN1IwRk5PVUk3T3p0QlFVaERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVUZXZEVNc1FVRkJRU3hyUWtGQmEwSXNRMEZCUXp0SlFWZG1MRTFCUVUwc1JVRkJSU3hQUVVGUE8wZEJSV3hDT3pzN1FVRkZSQ3hCUVVGQkxGZEJRVmNzUTBGQlF6dEZRVU5XTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UlVGRGFFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzU1VGQlNTeEZRVUZGTEVsQlFVazdSVUZEVml4SFFVRkhMRVZCUVVVc1EwRkJRenRGUVVOT0xFOUJRVThzUlVGQlJTeEpRVUZKTzBWQlEySXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRjVSR1E3TzBGQmFFVkVMRUZCVTBVc1YwRlVVeXhEUVZOVUxFTkJRVU1zUTBGQlF6dEZRVU5CTEV0QlFVc3NSV2hDY2tWRUxFOUJRVTg3UldkQ2MwVllMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzVjBGQlZ5eEZRVUZGTEZOQlFXVTdRMEZETjBJN08wRkJZa2dzUVVGbFJTeFhRV1pUTEVkQlpWQXNSMEZCUnl4RFFVRkRPMFZCUTBvc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UlVGRGFFSXNWVUZCVlN4RmFFSXhSVW9zVDBGQlR6dEZaMEl5UldJc1QwRkJUeXhGUVVGRkxFbEJRVWs3UTBGRFpEczdRVUZ1UWtnc1FVRnhRa1VzVjBGeVFsTXNRMEZ4UWxRc1RVRkJUU3hEUVVGRE8wVkJRMHdzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRWRCUVVjc1JVRkJSU3hKUVVGVE8wVkJRMlFzUzBGQlN5eEZRVUZGTEVsQlFWTTdSVUZGYUVJc1RVRkJUU3hGUVVGRkxFZEJRVWNzUTBGQlF5eExRVUZMTEVOb1FuWkdZaXhQUVVGUE8wVm5RbmRHV0N4blFrRkJaMElzUlVGQlJTeFhRVUZYTzBWQlF6ZENMRmRCUVZjc1JVRkJSU3hQUVVGUE8wVkJRM0JDTEZGQlFWRXNSVUZCUlN4TlFVRk5PMFZCUTJoQ0xFMUJRVTBzUlVGQlJTeFBRVUZQTzBWQlEyWXNWVUZCVlN4RlFVRkZMRkZCUVZFN1EwRTRRbkpDT3p0QlFTOUVTQ3hCUVcxRFNTeFhRVzVEVHl4RFFYRkNWQ3hOUVVGTkxFRkJZMGdzVDBGQlR5eEZRVzVEV2l4WFFVRlhMRU5CY1VKVUxFMUJRVTBzUVVGbFNDeE5RVUZOTEVOQlFVTTdSVUZEVGl4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxFMUJRVTBzUlVGQlJTeEhRVUZITzBWQlExZ3NVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzUjBGQlJ5eEZRVUZGTEVkQlFVYzdSVUZEVWl4SlFVRkpMRVZCUVVVc1IwRkJSenRGUVVOVUxFOUJRVThzUlVGQlJTeEZRVUZGTzBWQlExZ3NWVUZCVlN4RmFFSjBSMUlzVDBGQlR6dEZaMEoxUjFRc1ZVRkJWU3hGUVVGRkxGRkJRVkU3UTBGRGNrSTdPMEZCTjBOTUxFRkJLME5KTEZkQkwwTlBMRU5CY1VKVUxFMUJRVTBzUVVFd1FrZ3NUMEZCVHl4RFFVRkRPMFZCUTFBc1UwRkJVeXhGUVVGRkxHZENRVUZuUWl4RFFVRkRMR0ZCUVdFN1EwRkRNVU03TzBGQmFrUk1MRUZCYTBSSkxGZEJiRVJQTEVOQmNVSlVMRTFCUVUwc1FVRTJRa2dzVFVGQlRTeERRVUZETzBWQlEwNHNVMEZCVXl4RlFVRkZMR2RDUVVGblFpeERRVUZETEdOQlFXTTdRMEZETTBNN08wRkJjRVJNTEVGbU1VUkZMRmRsTUVSVExFTkJjVUpVTEUxQlFVMHNRV1l2UlV3c1RVRkJUU3hGWlRCRVZDeFhRVUZYTEVOQmNVSlVMRTFCUVUwc1FXWTVSVXdzVFVGQlRTeERRVUZETzBWbFowaEtMRlZCUVZVc1JXaENiRWhTTEhkQ1FVRlBPMFZuUW0xSVZDeFpRVUZaTEVWb1FtcElVaXhQUVVGUE8wTkRSV1E3TzBGbGRVUklMRUZCTUVSTkxGZEJNVVJMTEVOQmNVSlVMRTFCUVUwc1FXWXZSVXdzVFVGQlRTeEJaVzlJUml4UFFVRlBMRVZCTVVSa0xGZEJRVmNzUTBGeFFsUXNUVUZCVFN4QlppOUZUQ3hOUVVGTkxFRmxjVWhHTEUxQlFVMHNSVUV6UkdJc1YwRkJWeXhEUVhGQ1ZDeE5RVUZOTEVGbU9VVk1MRTFCUVUwc1FXVnRTRVlzVDBGQlR5eEZRVEZFWkN4WFFVRlhMRU5CY1VKVUxFMUJRVTBzUVdZNVJVd3NUVUZCVFN4QlpXOUlSaXhOUVVGTkxFTkJRVU03UlVGRFRpeG5Ra0ZCWjBJc1JXaENja2hrTEU5QlFVODdRMmRDYzBoV096dEJRVXRRTEVGQlFVRXNWVUZCVlN4RFFVRkRPMFZCUTFRc1MwRkJTeXhGUVVGRkxHbENRVUZwUWp0RFFVOTZRanM3UVVGU1JDeEJRVWRKTEZWQlNFMHNRMEZGVWl4RFFVRkRMRUZCUTBVc1dVRkJXU3hEUVVGRE8wVkJRMW9zWTBGQll5eEZRVUZGTEZOQlFWTTdSVUZEZWtJc1RVRkJUU3hGUVVGRkxFTkJRVU03UTBGRFZqczdRVUZKVEN4QlFVZEpMRmxCU0ZFc1EwRkJReXhQUVVGUExFRkJRMnBDTEZWQlFWY3NRMEZCUVN4RlFVRkZMRVZCUlZvc1YwRkJWeXhGUVVobUxGbEJRVmtzUTBGQlF5eFBRVUZQTEVGQlJXcENMRlZCUVZjc1EwRkJRU3hKUVVGSkxFVkJRMlFzVjBGQlZ5eERRVUZETzBWQlExWXNSMEZCUnl4RlFVRkZMRXRCUVVzN1EwRkRXRHM3UVVGTVRDeEJRVk5KTEZsQlZGRXNRMEZCUXl4UFFVRlBMRUZCVVdwQ0xGVkJRVmNzUTBGQlFTeEpRVUZKTEVWQlEyUXNWMEZCVnl4RFFVRkRPMFZCUTFZc1IwRkJSeXhGUVVGRkxFbEJRVWs3UTBGRFZqczdRVUZZVEN4QlFXVkpMRmxCWmxFc1EwRkJReXhQUVVGUExFRkJZMnBDTEZWQlFWY3NRMEZCUVN4RlFVRkZMRVZCUTFvc1YwRkJWeXhEUVVGRE8wVkJRMVlzU1VGQlNTeEZRVUZGTEVsQlFVazdSVUZEVml4TFFVRkxMRVZCUVVVc1NVRkJTVHREUVVOYU96dEJRV3hDVEN4QlFXOUNSU3haUVhCQ1ZTeERRVUZETEU5QlFVOHNRVUZ2UW1wQ0xFdEJRVXNzUTBGQlF6dEZRVU5NTEU5QlFVOHNSVUZCUlN4RlFVRkZPME5CUzFvN08wRkJNVUpJTEVGQmRVSkpMRmxCZGtKUkxFTkJRVU1zVDBGQlR5eEJRVzlDYWtJc1MwRkJTeXhEUVVkS0xGZEJRVmNzUTBGQlF6dEZRVU5XTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CUTJRaWZRPT0gKi9cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm1haW4taGVhZGVyID4gZGl2IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBlbmQ7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgfVxuXG4gIC5ocC1uYXZpZ2F0aW9uIGEge1xuICAgIGZvbnQtc2l6ZTogODBweDtcbiAgfVxuXG4gIC5jb250ZW50LWdyaWQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgfVxuXG4gIC5jb2wtMSB7XG4gICAgd2lkdGg6IDMzLjMzJTtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDMzLjMzJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAzMy4zMyU7XG4gIH1cblxuICAuY29sLTIge1xuICAgIHdpZHRoOiA2Ni42NyU7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAgICAgLW1zLWZsZXg6IDAgMCA2Ni42NyU7XG4gICAgICAgICAgICBmbGV4OiAwIDAgNjYuNjclO1xuICB9XG5cbiAgLmNvbC0zIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDEwMCU7XG4gICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTtcbiAgfVxuXG4gIC5wcm9qZWN0LWdyaWQgYXJ0aWNsZSB7XG4gICAgd2lkdGg6IDMzLjMzJTtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDMzLjMzJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAzMy4zMyU7XG4gIH1cblxuICAucHJvamVjdC1ncmlkIGFydGljbGU6bnRoLWNoaWxkKDNuICsgMikge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zNXB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzVweCk7XG4gIH1cblxuICAucHJvamVjdC1ncmlkLWlubmVyIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBzdGFydDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cblxuICAucHJlc3MtbGlzdGluZyA+IGRpdiB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG5cbiAgLm91dGxldC1ncmlkIHtcbiAgICB3aWR0aDogNzUlO1xuICB9XG5cbiAgLm91dGxldC1ncmlkIG5hdiB7XG4gICAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiA3MHB4O1xuICB9XG5cbiAgLm91dGxldC1ncmlkIGxpIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDI1JTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAyNSU7XG4gICAgd2lkdGg6IDI1JTtcbiAgfVxuXG4gIC5hcnRpY2xlcyB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAgICAgLW1zLWZsZXg6IDAgMCAyMCU7XG4gICAgICAgICAgICBmbGV4OiAwIDAgMjAlO1xuICAgIHdpZHRoOiAyMCU7XG4gIH1cblxuICAucGVvcGxlLWdyaWQgYXJ0aWNsZSB7XG4gICAgd2lkdGg6IDMzLjMzJTtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleDogMCAwIDMzLjMzJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAzMy4zMyU7XG4gIH1cblxuICAucGVvcGxlLWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24gKyAyKSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTM1cHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zNXB4KTtcbiAgfVxuXG4gIC5wZW9wbGUtZ3JpZC1pbm5lciB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAubWFpbi1oZWFkZXIgYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiBhIHtcbiAgICBwYWRkaW5nOiAwIDEycHg7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IHtcbiAgICBtYXJnaW46IDAgLTEycHg7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IHVsLm1lbnUge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogZW5kO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBlbmQ7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICB9XG5cbiAgLm1haW4taGVhZGVyIG5hdiB1bC5tZW51ID4gbGk6aG92ZXIgLnN1Yi1tZW51LFxuICAubWFpbi1oZWFkZXIgbmF2IHVsLm1lbnUgPiBsaS5jdXJyZW50LW1lbnUtaXRlbSAuc3ViLW1lbnUsXG4gIC5tYWluLWhlYWRlciBuYXYgdWwubWVudSA+IGxpLmN1cnJlbnQtbWVudS1hbmNlc3RvciAuc3ViLW1lbnUge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IC5zdWItbWVudSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTAwJTtcbiAgICByaWdodDogMDtcbiAgICBtaW4td2lkdGg6IDEwMCU7XG4gIH1cblxuICAubWFpbi1oZWFkZXIgbmF2IC5zdWItbWVudSBhIHtcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5ocC1uYXZpZ2F0aW9uIGEge1xuICAgIGZvbnQtc2l6ZTogMTU1cHg7XG4gIH1cblxuICAuY29udGVudC1ncmlkIHtcbiAgICBtYXJnaW46IDAgLTEycHg7XG4gIH1cblxuICAuY29udGVudC1ncmlkIFtjbGFzc149XCJjb2xcIl0ge1xuICAgIHBhZGRpbmc6IDEycHg7XG4gIH1cblxuICAuZ3JpZC10aXRsZSBoNCB7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICB9XG5cbiAgLnByb2plY3QtZ3JpZCBhcnRpY2xlIHtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICB9XG5cbiAgLnByb2plY3QtZ3JpZCBhcnRpY2xlOm50aC1jaGlsZCgzbiArIDIpIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNzBweCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTcwcHgpO1xuICB9XG5cbiAgLnByb2plY3QtZ3JpZC1pbm5lciB7XG4gICAgbWFyZ2luOiAwIC0xMnB4O1xuICB9XG5cbiAgLnBlb3BsZS1ncmlkIGFydGljbGUge1xuICAgIHBhZGRpbmc6IDEycHg7XG4gIH1cblxuICAucGVvcGxlLWdyaWQgYXJ0aWNsZTpudGgtY2hpbGQoM24gKyAyKSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTcwcHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MHB4KTtcbiAgfVxuXG4gIC5wZW9wbGUtZ3JpZC1pbm5lciB7XG4gICAgbWFyZ2luOiAwIC0xMnB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2Ny45cHgpIHtcbiAgLmNvbnRlbnQtZ3JpZCAuY29sLTEgaW1nIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXgtaGVpZ2h0OiA1MjBweDtcbiAgICBtYXJnaW46IGF1dG87XG4gIH1cbn0iLCIvKlxuICogIE93bCBDYXJvdXNlbCAtIEFuaW1hdGUgUGx1Z2luXG4gKi9cbi5vd2wtY2Fyb3VzZWx7XG5cdC5hbmltYXRlZCB7XG5cdFx0YW5pbWF0aW9uLWR1cmF0aW9uOiAxMDAwbXM7XG5cdFx0YW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcblx0fVxuXHQub3dsLWFuaW1hdGVkLWluIHtcblx0XHR6LWluZGV4OiAwO1xuXHR9XG5cdC5vd2wtYW5pbWF0ZWQtb3V0IHtcblx0XHR6LWluZGV4OiAxO1xuXHR9XG5cdC5mYWRlT3V0IHtcblx0XHRhbmltYXRpb24tbmFtZTogZmFkZU91dDtcblx0fVxufVxuXG5Aa2V5ZnJhbWVzIGZhZGVPdXQge1xuXHQwJSB7XG5cdFx0b3BhY2l0eTogMTtcblx0fVxuXG5cdDEwMCUge1xuXHRcdG9wYWNpdHk6IDA7XG5cdH1cbn1cbiIsIi8qXG4gKiBcdE93bCBDYXJvdXNlbCAtIEF1dG8gSGVpZ2h0IFBsdWdpblxuICovXG5cbi5vd2wtaGVpZ2h0IHtcblx0dHJhbnNpdGlvbjogaGVpZ2h0IDUwMG1zIGVhc2UtaW4tb3V0O1xufVxuIiwiLypcbiAqIFx0T3dsIENhcm91c2VsIC0gTGF6eSBMb2FkIFBsdWdpblxuICovXG5cbi5vd2wtY2Fyb3VzZWwge1xuXHQub3dsLWl0ZW0ge1xuXHRcdC5vd2wtbGF6eSB7XG5cdFx0XHRcdG9wYWNpdHk6IDA7XG5cdFx0XHRcdHRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcblx0XHR9XG5cblx0XHQvKipcblx0XHRcdFRoaXMgaXMgaW50cm9kdWNlZCBkdWUgdG8gYSBidWcgaW4gSUUxMSB3aGVyZSBsYXp5IGxvYWRpbmcgY29tYmluZWQgd2l0aCBhdXRvaGVpZ2h0IHBsdWdpbiBjYXVzZXMgYSB3cm9uZ1xuXHRcdFx0Y2FsY3VsYXRpb24gb2YgdGhlIGhlaWdodCBvZiB0aGUgb3dsLWl0ZW0gdGhhdCBicmVha3MgcGFnZSBsYXlvdXRzXG5cdFx0ICovXG5cdFx0Lm93bC1sYXp5W3NyY149XCJcIl0sIC5vd2wtbGF6eTpub3QoW3NyY10pIHtcblx0XHRcdG1heC1oZWlnaHQ6IDA7XG5cdFx0fVxuXG5cdFx0aW1nLm93bC1sYXp5IHtcblx0XHRcdHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XG5cdFx0fVxuXHR9XG59XG5cbiIsIiRvd2wtaW1hZ2UtcGF0aDogXCJcIiAhZGVmYXVsdDtcblxuLypcbiAqIFx0T3dsIENhcm91c2VsIC0gVmlkZW8gUGx1Z2luXG4gKi9cblxuLm93bC1jYXJvdXNlbHtcblx0Lm93bC12aWRlby13cmFwcGVyIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdGJhY2tncm91bmQ6ICMwMDA7XG5cdH1cblxuXHQub3dsLXZpZGVvLXBsYXktaWNvbiB7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdGhlaWdodDogODBweDtcblx0XHR3aWR0aDogODBweDtcblx0XHRsZWZ0OiA1MCU7XG5cdFx0dG9wOiA1MCU7XG5cdFx0bWFyZ2luLWxlZnQ6IC00MHB4O1xuXHRcdG1hcmdpbi10b3A6IC00MHB4O1xuXHRcdGJhY2tncm91bmQ6IHVybChcIiN7JG93bC1pbWFnZS1wYXRofW93bC52aWRlby5wbGF5LnBuZ1wiKSBuby1yZXBlYXQ7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0LXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDEwMG1zIGVhc2U7XG5cdH1cblxuXHQub3dsLXZpZGVvLXBsYXktaWNvbjpob3ZlciB7XG5cdFx0dHJhbnNmb3JtOiBzY2FsZSgxLjMsIDEuMyk7XG5cdH1cblxuXHQub3dsLXZpZGVvLXBsYXlpbmcgLm93bC12aWRlby10bixcblx0Lm93bC12aWRlby1wbGF5aW5nIC5vd2wtdmlkZW8tcGxheS1pY29uIHtcblx0XHRkaXNwbGF5OiBub25lO1xuXHR9XG5cblx0Lm93bC12aWRlby10biB7XG5cdFx0b3BhY2l0eTogMDtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcblx0XHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuXHRcdGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcblx0XHR0cmFuc2l0aW9uOiBvcGFjaXR5IDQwMG1zIGVhc2U7XG5cdH1cblxuXHQub3dsLXZpZGVvLWZyYW1lIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0ei1pbmRleDogMTtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdH1cbn1cbiIsIi8qXG4gKiBcdERlZmF1bHQgdGhlbWUgLSBPd2wgQ2Fyb3VzZWwgQ1NTIEZpbGVcbiAqL1xuXG4kY29sb3ItYmFzZTpcdFx0XHQjODY5NzkxICFkZWZhdWx0O1xuJGNvbG9yLXdoaXRlOlx0XHRcdCNGRkYgIWRlZmF1bHQ7XG4kY29sb3ItZ3JheTpcdFx0XHQjRDZENkQ2ICFkZWZhdWx0O1xuXG4vL25hdlxuXG4kbmF2LWNvbG9yOiBcdFx0XHQkY29sb3Itd2hpdGUgIWRlZmF1bHQ7XG4kbmF2LWNvbG9yLWhvdmVyOlx0XHQkY29sb3Itd2hpdGUgIWRlZmF1bHQ7XG4kbmF2LWZvbnQtc2l6ZTogXHRcdDE0cHggIWRlZmF1bHQ7XG4kbmF2LXJvdW5kZWQ6IFx0XHRcdDNweCAhZGVmYXVsdDtcbiRuYXYtbWFyZ2luOiBcdFx0XHQ1cHggIWRlZmF1bHQ7XG4kbmF2LXBhZGRpbmc6IFx0XHRcdDRweCA3cHggIWRlZmF1bHQ7XG4kbmF2LWJhY2tncm91bmQ6IFx0XHQkY29sb3ItZ3JheSAhZGVmYXVsdDtcbiRuYXYtYmFja2dyb3VuZC1ob3ZlcjpcdCRjb2xvci1iYXNlICFkZWZhdWx0O1xuJG5hdi1kaXNhYmxlZC1vcGFjaXR5OiBcdDAuNSAhZGVmYXVsdDtcblxuLy9kb3RzXG5cbiRkb3Qtd2lkdGg6XHRcdFx0XHQxMHB4ICFkZWZhdWx0O1xuJGRvdC1oZWlnaHQ6XHRcdFx0MTBweCAhZGVmYXVsdDtcbiRkb3Qtcm91bmRlZDpcdFx0XHQzMHB4ICFkZWZhdWx0O1xuJGRvdC1tYXJnaW46IFx0XHRcdDVweCA3cHggIWRlZmF1bHQ7XG4kZG90LWJhY2tncm91bmQ6XHRcdCRjb2xvci1ncmF5ICFkZWZhdWx0O1xuJGRvdC1iYWNrZ3JvdW5kLWFjdGl2ZTpcdCRjb2xvci1iYXNlICFkZWZhdWx0O1xuXG5AaW1wb3J0ICd0aGVtZSc7XG4iLCJcbi5vd2wtdGhlbWUge1xuXHQvLyBTdHlsaW5nIE5leHQgYW5kIFByZXYgYnV0dG9uc1xuXHQub3dsLW5hdiB7XG5cdFx0bWFyZ2luLXRvcDogMTBweDtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcblxuXHRcdFtjbGFzcyo9J293bC0nXSB7XG5cdFx0XHRjb2xvcjogJG5hdi1jb2xvcjtcblx0XHRcdGZvbnQtc2l6ZTogJG5hdi1mb250LXNpemU7XG5cdFx0XHRtYXJnaW46ICRuYXYtbWFyZ2luO1xuXHRcdFx0cGFkZGluZzogJG5hdi1wYWRkaW5nO1xuXHRcdFx0YmFja2dyb3VuZDogJG5hdi1iYWNrZ3JvdW5kO1xuXHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXG5cdFx0XHQmOmhvdmVyIHtcblx0XHRcdFx0YmFja2dyb3VuZDogJG5hdi1iYWNrZ3JvdW5kLWhvdmVyO1xuXHRcdFx0XHRjb2xvcjokbmF2LWNvbG9yLWhvdmVyO1xuXHRcdFx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdC5kaXNhYmxlZCB7XG5cdFx0XHRvcGFjaXR5OiAkbmF2LWRpc2FibGVkLW9wYWNpdHk7XG5cdFx0XHRjdXJzb3I6IGRlZmF1bHQ7XG5cdFx0fVxuXHR9XG5cblx0Ly8gU3R5bGluZyBkb3RzXG5cdC5vd2wtbmF2LmRpc2FibGVkICsgLm93bC1kb3RzIHtcblx0XHRtYXJnaW4tdG9wOiAxMHB4O1xuXHR9XG5cblx0Lm93bC1kb3RzIHtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcblxuXHRcdC5vd2wtZG90IHtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdHpvb206IDE7XG5cdFx0XHQqZGlzcGxheTogaW5saW5lO1xuXG5cdFx0XHRzcGFuIHtcblx0XHRcdFx0d2lkdGg6ICRkb3Qtd2lkdGg7XG5cdFx0XHRcdGhlaWdodDogJGRvdC1oZWlnaHQ7XG5cdFx0XHRcdG1hcmdpbjogJGRvdC1tYXJnaW47XG5cdFx0XHRcdGJhY2tncm91bmQ6ICRkb3QtYmFja2dyb3VuZDtcblx0XHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHRcdC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogdmlzaWJsZTtcblx0XHRcdFx0dHJhbnNpdGlvbjogb3BhY2l0eSAyMDBtcyBlYXNlO1xuXHRcdFx0XHRib3JkZXItcmFkaXVzOiAkZG90LXJvdW5kZWQ7XG5cdFx0XHR9XG5cblx0XHRcdCYuYWN0aXZlLFxuXHRcdFx0Jjpob3ZlciB7XG5cdFx0XHRcdHNwYW4ge1xuXHRcdFx0XHRcdGJhY2tncm91bmQ6ICRkb3QtYmFja2dyb3VuZC1hY3RpdmU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cbiIsIioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxudWwsXG5vbCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmEge1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgLy8gdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uc3Itb25seSB7XG4gIEBpbmNsdWRlIHNyT25seTtcbn1cblxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6ICRib2xkO1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6ICRjb3B5RkY7XG59XG4iLCJAbWl4aW4gY29udGVudFdpZHRoIHtcbiAgbWF4LXdpZHRoOiAkbXhXO1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgJGd1dHRlcjtcbn1cblxuQG1peGluIGhvdmVyIHtcbiAgJjpob3ZlcixcbiAgJjpmb2N1cyB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHNyT25seSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLDAsMCwwKTtcbiAgYm9yZGVyOiAwO1xufVxuXG5AbWl4aW4gaW1nQ292ZXIge1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBtaW4td2lkdGg6IDEwMCU7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDA7XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xuXG4gIEBzdXBwb3J0cyAob2JqZWN0LWZpdDogY292ZXIpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb2JqZWN0LWZpdDogY292ZXI7XG4gIH1cbn1cbiIsImJvZHkge1xuICAmLmZyb250LXBhZ2UsXG4gICYucHJvamVjdHM6bm90KC5wcm9qZWN0LWFyY2hpdmUpIHtcbiAgICAgPiBtYWluIHtcbiAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICB6LWluZGV4OiAwO1xuICAgICB9XG5cbiAgICAgLm1haW4taGVhZGVyIHtcbiAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICA+IGRpdiB7XG4gICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgIH1cbiAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgIGhlaWdodDogMTUxcHg7XG4gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICB0b3A6IDA7XG4gICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgei1pbmRleDogMDtcbiAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZyxyZ2JhKCRibGFjaywwKSAwJSwgcmdiYSgkYmxhY2ssLjMpIDEwMCUpO1xuICAgICAgIH1cbiAgICAgICBhIHtcbiAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG5cbiAgICAgICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgICAgICAgY29sb3I6IHJnYmEoJHdoaXRlLC40KTtcbiAgICAgICAgIH1cbiAgICAgICB9XG4gICAgIH1cbiAgIH1cbn1cblxuQGltcG9ydCAnY29weS9fYmFzZSc7XG5AaW1wb3J0ICdoZWFkZXIvX2hlYWRlcic7XG5AaW1wb3J0ICdmb290ZXIvX2Zvb3Rlcic7XG5AaW1wb3J0ICdfcGFnZSc7XG5AaW1wb3J0ICdfZnJvbnQtcGFnZSc7XG4iLCJoMSwuaDEge1xuICBmb250LWZhbWlseTogJGNvcHlGRjtcbiAgZm9udC13ZWlnaHQ6ICRsdDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAyNXB4O1xufVxuXG5oMiwuaDIge1xuICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgZm9udC1zaXplOiAzMHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsaW5lLWhlaWdodDogKDQwIC8gMzApICogMWVtO1xuICBmb250LXdlaWdodDogJGJvbGQ7XG59XG5oMywuaDMge1xuICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsaW5lLWhlaWdodDogKDQwIC8gMzApICogMWVtO1xuICBmb250LXdlaWdodDogJGJvbGQ7XG59XG5oNSwuaDUge1xuICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuIiwiLy8gU1BBQ0lOR1xuJG14VzogMTYwMHB4O1xuJGd1dHRlcjogMjBweDtcblxuLy8gQ09MT1JTXG4kYmxhY2s6ICMwMDAwMDA7XG4kd2hpdGU6ICNGRkZGRkY7XG5cbiRwcmltYXJ5OiAjMUUzMTQxO1xuJHNlY29uZGFyeTogIzcwNzA3MDtcblxuJGFjY2VudC0xOiAjMDcxNDRFO1xuXG4vLyBGT05UU1xuJGhlYWRpbmdGRjogJ0V4cGxldHVzIFNhbnMnLCBjdXJzaXZlO1xuJGNvcHlGRjogJ0Fzc2lzdGFudCcsIHNhbnMtc2VyaWY7XG4kbHQ6IDMwMDtcbiRyZWc6IDQwMDtcbiRib2xkOiA3MDA7XG5cbi8vIEJSRUFLUE9JTlRTXG4kbWVkaWFYczogXCJzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3NXB4KVwiO1xuJG1lZGlhUGhvbmU6IFwic2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjcuOXB4KVwiO1xuJG1lZGlhVGFibGV0OiBcInNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpXCI7XG4kbWVkaWFUYWJsZXRPbmx5OiBcInNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0LjlweClcIjtcbiRtZWRpYVRvZ2dsZUhlYWRlcjogXCJzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjQuOXB4KVwiO1xuJG1lZGlhRGVza3RvcDogXCJzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweClcIjtcbiRtZWRpYUZ1bGw6IFwic2NyZWVuIGFuZCAobWluLXdpZHRoOiAjeyRteFd9KVwiO1xuXG4vLyBESU1FTlNJT05TXG4kaGVhZGVySGVpZ2h0OiA3MHB4O1xuIiwiQGltcG9ydCAnaGVhZGluZ3MnO1xuXG5wIHtcbiAgLy9jb2xvcjogJHByaW1hcnk7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbGluZS1oZWlnaHQ6ICgyNyAvIDIxKSAqIDFlbTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuIiwiLm1haW4taGVhZGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogJGhlYWRlckhlaWdodDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDEwO1xuICBiYWNrZ3JvdW5kOiByZ2JhKCR3aGl0ZSwuOTkpO1xuXG4gIC5sb2dnZWRpbiAmIHtcbiAgICB0b3A6IDMycHg7XG4gIH1cblxuICA+IGRpdiB7XG4gICAgQGluY2x1ZGUgY29udGVudFdpZHRoO1xuXG4gICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgfVxuICB9XG4gIGJ1dHRvbiB7XG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbiAgaDEge1xuXG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgY29sb3I6ICRzZWNvbmRhcnk7XG4gICAgfVxuICB9XG5cbiAgQGltcG9ydCAnX25hdic7XG59XG4iLCJuYXYge1xuICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgYSB7XG4gICAgY29sb3I6ICRwcmltYXJ5O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgIGNvbG9yOiAkc2Vjb25kYXJ5O1xuICAgICAgLy90ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuXG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgcGFkZGluZzogMCAxMnB4O1xuICAgIH1cbiAgfVxuICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgbWFyZ2luOiAwIC0xMnB4O1xuICB9XG5cbiAgdWwubWVudSB7XG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgfVxuXG4gICAgPiBsaSB7XG4gICAgICA+IGEge1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMS4xM3B4O1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICAgICY6aG92ZXIsXG4gICAgICAgICYuY3VycmVudC1tZW51LWl0ZW0sXG4gICAgICAgICYuY3VycmVudC1tZW51LWFuY2VzdG9yIHtcbiAgICAgICAgICAuc3ViLW1lbnUge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICAmLmN1cnJlbnQtbWVudS1pdGVtLFxuICAgICAgJi5jdXJyZW50LW1lbnUtYW5jZXN0b3Ige1xuICAgICAgICA+IGEge1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuc3ViLW1lbnUge1xuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAxMDAlO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBtaW4td2lkdGg6IDEwMCU7XG5cbiAgICAgIGEge1xuICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIubWFpbi1mb290ZXIge1xuICBwYWRkaW5nOiAkZ3V0dGVyIDA7XG5cbiAgYSB7XG4gICAgY29sb3I6ICRwcmltYXJ5O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gIH1cbiAgPiBkaXYge1xuICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuXG4gIC5jb250YWN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMS43M3B4O1xuICAgIGNvbG9yOiAkcHJpbWFyeTtcblxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgfVxuXG4gID4gZGl2IHtcblxuICB9XG5cbiAgLnNvY2lhbCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhIHtcbiAgICAgIHdpZHRoOiAyNHB4O1xuICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB9XG5cbiAgICAgIHNwYW4ge1xuICAgICAgICBAaW5jbHVkZSBzck9ubHk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5mb290ZXItbG9nbyB7XG4gIHN2ZyB7XG4gICAgd2lkdGg6IDg1cHg7XG4gICAgaGVpZ2h0OiA5OXB4O1xuICAgIGZpbGw6ICRhY2NlbnQtMTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuIiwiYm9keS5wYWdlOm5vdCguZnJvbnQtcGFnZSkge1xuICA+IG1haW4ge1xuICAgIHBhZGRpbmc6IDcwcHggMDtcbiAgICA+IHNlY3Rpb24ge1xuICAgICAgPiBkaXYge1xuICAgICAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gICAgICB9XG5cbiAgICAgIGNvbG9yOiAkcHJpbWFyeTtcblxuICAgICAgJi5iZy1wcmltYXJ5IHtcbiAgICAgICAgYmFja2dyb3VuZDogJHByaW1hcnk7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIHBhZGRpbmc6IDYwcHggMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLnNlY3Rpb24taW5uZXIge1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG4iLCIlaW1nQ292ZXIge1xuICBAaW5jbHVkZSBpbWdDb3Zlcjtcbn1cbi5ocC1zbGlkZXNob3cge1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgLmpzLWNhcm91c2VsIHtcbiAgICAub3dsLWl0ZW0ge1xuICAgICAgaGVpZ2h0OiAxMDB2aDtcblxuICAgICAgPiBkaXYge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIH1cblxuICAgICAgaW1nIHtcbiAgICAgICAgQGV4dGVuZCAlaW1nQ292ZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLm93bC1uYXYge1xuICAgICAgYnV0dG9uIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IGNhbGMoNTAlIC0gNDdweCk7XG4gICAgICAgIHdpZHRoOiA0NnB4O1xuICAgICAgICBoZWlnaHQ6IDk1cHg7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2Fycm93LnN2ZycpO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuXG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgIEBpbmNsdWRlIHNyT25seTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6Zm9jdXMsXG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgfVxuXG4gICAgICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgICAgICBvcGFjaXR5OiAuNTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAub3dsLXByZXYge1xuICAgICAgICBsZWZ0OiAkZ3V0dGVyO1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgICAgfVxuXG4gICAgICAub3dsLW5leHQge1xuICAgICAgICByaWdodDogJGd1dHRlcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuc2Nyb2xsLWRvd24ge1xuICAgIHdpZHRoOiA0NnB4O1xuICAgIGhlaWdodDogOTVweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAkZ3V0dGVyO1xuICAgIGxlZnQ6IGNhbGMoNTAlIC0gMThweCk7XG4gICAgei1pbmRleDogMTA7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWFnZXMvYXJyb3cuc3ZnJyk7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1pbmRlbnQ6IC05OTk5OTlweDtcblxuICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgIG9wYWNpdHk6IC41O1xuICAgIH1cbiAgfVxufVxuXG4uaHAtbmF2aWdhdGlvbiB7XG4gIGEge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZm9udC1zaXplOiA1MHB4O1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtc2hhZG93OiAwcHggNHB4IDdweCAkc2Vjb25kYXJ5O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LWZhbWlseTogJGhlYWRpbmdGRjtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuXG4gICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICBmb250LXNpemU6IDgwcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgZm9udC1zaXplOiAxNTVweDtcbiAgICB9XG5cbiAgICBzcGFuIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHotaW5kZXg6IDE7XG4gICAgfVxuXG4gICAgaW1nIHtcbiAgICAgIEBleHRlbmQgJWltZ0NvdmVyO1xuICAgICAgei1pbmRleDogMDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgICAgZmlsdGVyOiBibHVyKDE4cHgpO1xuXG4gICAgICBAc3VwcG9ydHMgKG9iamVjdC1maXQ6IGNvdmVyKSB7XG4gICAgICAgIHdpZHRoOiAxMDMlO1xuICAgICAgICBoZWlnaHQ6IDEwMyU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICBpbWcge1xuICAgICAgICBmaWx0ZXI6IGJsdXIoMCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuY29udGVudC1ncmlkIHtcbiAgbWFyZ2luOiAwIC02cHg7XG5cbiAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG5cbiAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgIG1hcmdpbjogMCAtMTJweDtcbiAgfVxuXG4gIFtjbGFzc149XCJjb2xcIl0ge1xuICAgIHBhZGRpbmc6IDZweDtcblxuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIHBhZGRpbmc6IDEycHg7XG4gICAgfVxuICB9XG5cbiAgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICBAbWVkaWEgI3skbWVkaWFQaG9uZX0ge1xuICAgIC5jb2wtMSB7XG4gICAgICBpbWcge1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgbWF4LWhlaWdodDogNTIwcHg7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gIC5jb2wtMSB7XG4gICAgd2lkdGg6IDMzLjMzJTtcbiAgICBmbGV4OiAwIDAgMzMuMzMlO1xuICB9XG5cbiAgLmNvbC0yIHtcbiAgICB3aWR0aDogNjYuNjclO1xuICAgIGZsZXg6IDAgMCA2Ni42NyU7XG4gIH1cblxuICAuY29sLTMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZsZXg6IDAgMCAxMDAlO1xuICB9XG59XG4iLCIvLyAubWFwLXdyYXBwZXIge1xuLy8gICB3aWR0aDogMTAwJTtcbi8vICAgcGFkZGluZy1ib3R0b206IDc1JTtcbi8vICAgcG9zaXRpb246IHJlbGF0aXZlO1xuLy8gICBib3JkZXI6IDFweCBzb2xpZCAjQUFBO1xuLy9cbi8vICAgPiBkaXYge1xuLy8gICAgIHdpZHRoOiAxMDAlO1xuLy8gICAgIGhlaWdodDogMTAwJTtcbi8vICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4vLyAgICAgdG9wOiAwO1xuLy8gICAgIGxlZnQ6IDA7XG4vLyAgIH1cbi8vIH1cblxuLm1hcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWJvdHRvbTogNzIlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgaWZyYW1lIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICB9XG59XG4iLCIvLyBTSU5HTEUgUFJPSkVDVFxuLnByb2plY3QtaGVybyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWF4LWhlaWdodDogMTAwdmg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG5cbiAgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICAucHJvamVjdC10aXRsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgdGV4dC1zaGFkb3c6IDAgMCAycHggJGJsYWNrO1xuICAgIHBhZGRpbmctYm90dG9tOiA0NXB4O1xuXG4gICAgc3BhbixcbiAgICBzbWFsbCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICBzbWFsbCB7XG4gICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAgIH1cblxuICAgID4gZGl2IHtcbiAgICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcbiAgICB9XG4gIH1cbn1cblxuLmdyaWQtdGl0bGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAgMjRweCAzOHB4IDI0cHg7XG4gIGNvbG9yOiAkd2hpdGU7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0ZXh0LXNoYWRvdzogMHB4IDBweCAycHggJGJsYWNrO1xuXG4gIGg0IHtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblxuICAgIEBtZWRpYSAjeyRtZWRpYURlc2t0b3B9IHtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG4gIH1cblxuICBzbWFsbCB7XG4gICAgZm9udC1mYW1pbHk6ICRoZWFkaW5nRkY7XG4gICAgbGluZS1oZWlnaHQ6ICg0MCAvIDMwKSAqIDFlbTtcbiAgICBmb250LXdlaWdodDogJGJvbGQ7XG4gICAgZm9udC1zaXplOiAoMzAgLyAyNCkgKiAxZW07XG4gIH1cbn1cblxuLnByb2plY3QtbWFpbiB7XG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gIH1cbn1cblxuLnByb2plY3Qtc3RhdHMge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gMWZyO1xuICBncmlkLWdhcDogNXB4IDIwcHg7XG4gIG1hcmdpbi10b3A6IDNlbTtcblxuICBkdCB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxufVxuXG4vLyBQUk9KRUNUIEdSSURcbi5yZWxhdGVkLXByb2plY3RzIHtcbiAgcGFkZGluZzogNzBweCAwO1xufVxuXG4ucHJvamVjdC1ncmlkIHtcbiAgPiBkaXYge1xuICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcbiAgfVxuXG4gIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgYXJ0aWNsZSB7XG4gICAgcGFkZGluZzogNnB4O1xuXG4gICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICB3aWR0aDogMzMuMzMlO1xuICAgICAgZmxleDogMCAwIDMzLjMzJTtcbiAgICB9XG5cbiAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICBwYWRkaW5nOiAxMnB4O1xuICAgIH1cblxuICAgICY6bnRoLWNoaWxkKDNuICsgMikge1xuICAgICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzVweCk7XG4gICAgICB9XG4gICAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNzBweCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gIH1cblxuICBzbWFsbCB7XG4gICAgZm9udC1zaXplOiAyMXB4O1xuICB9XG5cbiAgLmdyaWQtdGl0bGUge1xuICAgIHBhZGRpbmctYm90dG9tOiA0OHB4O1xuICB9XG5cbiAgJi5hcmNoaXZlIHtcbiAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcbiAgICBjb2xvcjogJHdoaXRlO1xuICB9XG59XG5cbi5wcm9qZWN0LWdyaWQtaW5uZXIge1xuICBwYWRkaW5nOiA2OHB4IDAgNzBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDAgLTZweDtcblxuICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cblxuICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgbWFyZ2luOiAwIC0xMnB4O1xuICB9XG59XG5cblxuLy8gQGtleWZyYW1lcyB3ZWUge1xuLy8gICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO31cbi8vICAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7fVxuLy8gfVxuLy9cbi8vIGJvZHkge1xuLy8gICBhbmltYXRpb246IHdlZSAxMHMgaW5maW5pdGUgbGluZWFyO1xuLy8gfVxuIiwiLnByZXNzLWxpc3Rpbmcge1xuICBwYWRkaW5nOiA3MHB4IDA7XG5cbiAgPiBkaXYge1xuICAgIEBpbmNsdWRlIGNvbnRlbnRXaWR0aDtcbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgfVxuICB9XG5cbiAgLmFydGljbGVzIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgYXJ0aWNsZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxLjRlbTtcbiAgICAgIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICBzcGFuOmxhc3QtY2hpbGQge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5vdXRsZXQtZ3JpZCB7XG4gIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgIHdpZHRoOiA3NSU7XG5cbiAgICBuYXYge1xuICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgIHRvcDogJGhlYWRlckhlaWdodDtcbiAgICB9XG4gIH1cblxuICB1bCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luOiAtMTJweDtcbiAgfVxuXG4gIGxpIHtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZzogMTJweDtcblxuICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgZmxleDogMCAwIDI1JTtcbiAgICAgIHdpZHRoOiAyNSU7XG4gICAgfVxuICB9XG5cbiAgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICBzcGFuIHtcbiAgICBAaW5jbHVkZSBzck9ubHk7XG4gIH1cblxuICBhIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjREREREREO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgb3BhY2l0eTogLjI1O1xuICAgIH1cbiAgfVxuXG4gICYudGF4LWFyY2hpdmUge1xuICAgIGEge1xuICAgICAgb3BhY2l0eTogLjI1O1xuXG4gICAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IC43NTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsaS5hY3RpdmUgYSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgfVxufVxuXG4uYXJ0aWNsZXMge1xuICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICBmbGV4OiAwIDAgMjAlO1xuICAgIHdpZHRoOiAyMCU7XG4gIH1cbn1cblxuLnMtbmV3cyB7XG4gIHBhZGRpbmc6IDc1cHggMDtcbn1cbi5uZXdzLWNhcm91c2VsIHtcbiAgYXJ0aWNsZSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHBhZGRpbmc6IDFweDtcblxuICAgIGEge1xuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgJHByaW1hcnk7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgkcHJpbWFyeSwuMik7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC5vd2wtaXRlbSB7XG4gICAgJjpudGgtY2hpbGQoMm4pIHtcbiAgICAgIGFydGljbGUge1xuICAgICAgICBhIHtcbiAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuXG4gICAgICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgkcHJpbWFyeSwuMik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm93bC1zdGFnZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgfVxuXG4gIGFydGljbGUsXG4gIGEge1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuXG4gIC5kYXRlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xuICB9XG59XG4iLCIucGVvcGxlID4gbWFpbiB7XG4gIHBhZGRpbmc6IDcwcHggMDtcbn1cbi5wZW9wbGUtZ3JpZCB7XG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gIH1cblxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5ncmlkLXRpdGxlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgYXJ0aWNsZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDZweDtcblxuICAgIGEge1xuICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAuZ3JpZC10aXRsZSB7XG4gICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgd2lkdGg6IDMzLjMzJTtcbiAgICAgIGZsZXg6IDAgMCAzMy4zMyU7XG4gICAgfVxuXG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgcGFkZGluZzogMTJweDtcbiAgICB9XG5cbiAgICAmOm50aC1jaGlsZCgzbiArIDIpIHtcbiAgICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTM1cHgpO1xuICAgICAgfVxuICAgICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTcwcHgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4ucGVvcGxlLWdyaWQtaW5uZXIge1xuICBwYWRkaW5nOiA2OHB4IDAgNzBweDtcbiAgbWFyZ2luOiAwIC02cHg7XG5cbiAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB9XG5cbiAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgIG1hcmdpbjogMCAtMTJweDtcbiAgfVxufVxuXG4ucGVvcGxlLWJpbyB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgcGFkZGluZzogMTJweDtcbiAgZGlzcGxheTogbm9uZTtcblxuICBwIHtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgICBsaW5lLWhlaWdodDogKDI3IC8gMjEpICogMWVtO1xuICB9XG5cbiAgPiBkaXYge1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogJHByaW1hcnk7XG4gICAgcGFkZGluZzogMThweDtcbiAgfVxuXG4gIGJ1dHRvbiB7XG4gICAgd2lkdGg6IDI1cHg7XG4gICAgaGVpZ2h0OiAyNXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDI1cHggKyAxMjtcbiAgICByaWdodDogMjVweCArIDEyO1xuXG4gICAgYm9yZGVyOiAxcHggc29saWQgJHdoaXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuXG4gICAgJjpiZWZvcmUsXG4gICAgJjphZnRlciB7XG4gICAgICB3aWR0aDogMTQwJTtcbiAgICAgIGhlaWdodDogMXB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gICAgfVxuXG4gICAgJjpiZWZvcmUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHJvdGF0ZSg0NWRlZyk7XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHJvdGF0ZSgtNDVkZWcpO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoJHdoaXRlLC45KTtcbiAgICAgIGJvcmRlci1jb2xvcjogJHByaW1hcnk7XG5cbiAgICAgICY6YmVmb3JlLFxuICAgICAgJjphZnRlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4uYmlvLXRpdGxlIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDM1cHgpO1xuICBwIHtcbiAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICB9XG59XG5cbi5wZW9wbGUtZ3JpZCBhcnRpY2xlIHtcbiAgJjpudGgtY2hpbGQoM24pLFxuICAmOm50aC1jaGlsZCgzbisxKSB7XG4gICAgLnBlb3BsZS1iaW8ge1xuICAgICAgdG9wOiAtNzBweDtcbiAgICB9XG4gIH1cblxuICAmOm50aC1jaGlsZCgzbisyKSB7XG4gICAgLnBlb3BsZS1iaW8ge1xuICAgICAgdG9wOiA3MHB4O1xuICAgIH1cbiAgfVxuXG4gICY6bnRoLWNoaWxkKDNuKSB7XG4gICAgLnBlb3BsZS1iaW8ge1xuICAgICAgbGVmdDogYXV0bztcbiAgICAgIHJpZ2h0OiAxMDAlO1xuICAgIH1cbiAgfVxuICAmLm9wZW4ge1xuICAgIHotaW5kZXg6IDEwO1xuXG4gICAgLnBlb3BsZS1iaW8ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */